Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    NEW_LINE
    STRING_TYPE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal
Rule 2     dec_variables -> VARIABLES dec_variables2
Rule 3     dec_variables -> empty
Rule 4     dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3
Rule 5     dec_variables3 -> dec_variables2
Rule 6     dec_variables3 -> empty
Rule 7     lista_ids -> ID pn_AddVariable DecVarDim lista_ids2
Rule 8     lista_ids2 -> COMMA lista_ids
Rule 9     lista_ids2 -> empty
Rule 10    DecVarDim -> DecVarDim2 pn_VarDim
Rule 11    DecVarDim -> empty
Rule 12    DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
Rule 13    DecVarDim3 -> COMMA INT_CTE
Rule 14    DecVarDim3 -> empty
Rule 15    tipo -> INT_TYPE pn_SetCurrentType
Rule 16    tipo -> CHAR_TYPE pn_SetCurrentType
Rule 17    tipo -> FLOAT_TYPE pn_SetCurrentType
Rule 18    dec_funciones -> dec_funciones2 dec_funciones
Rule 19    dec_funciones -> empty
Rule 20    dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
Rule 21    tipo_func -> VOID pn_SetCurrentType
Rule 22    tipo_func -> tipo
Rule 23    dec_funcion_param -> lista_parametros
Rule 24    dec_funcion_param -> empty
Rule 25    lista_parametros -> tipo ID pn_Funcion1 lista_parametros2
Rule 26    lista_parametros2 -> COMMA lista_parametros
Rule 27    lista_parametros2 -> empty
Rule 28    principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque
Rule 29    bloque -> LCURLY estatutos RCURLY
Rule 30    estatutos -> estatuto estatutos
Rule 31    estatutos -> empty
Rule 32    estatuto -> asignacion
Rule 33    estatuto -> condicion
Rule 34    estatuto -> regresa
Rule 35    estatuto -> loop_condicional
Rule 36    estatuto -> loop_no_condicional
Rule 37    estatuto -> llamada_funcion
Rule 38    estatuto -> escritura
Rule 39    estatuto -> lectura
Rule 40    asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
Rule 41    ctes -> CHAR_CTE pn_CTEChar
Rule 42    ctes -> STRING_CTE pn_CTEString
Rule 43    ctes -> MINUS_OP pn_CTENeg num
Rule 44    ctes -> num
Rule 45    num -> INT_CTE pn_CTEInt
Rule 46    num -> FLOAT_CTE pn_CTEFloat
Rule 47    variable -> ID pn_Expresion1 varDim
Rule 48    varDim -> LBRACK expresion varDim2 RBRACK
Rule 49    varDim -> empty
Rule 50    varDim2 -> COMMA expresion
Rule 51    varDim2 -> empty
Rule 52    condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
Rule 53    else -> SINO pn_Condicion3 bloque
Rule 54    else -> empty
Rule 55    loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
Rule 56    loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
Rule 57    varLectura -> ID pn_Expresion1 varDim varLectura2
Rule 58    varLectura2 -> COMMA pn_Secuencial4 varLectura
Rule 59    varLectura2 -> empty pn_Secuencial4
Rule 60    lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
Rule 61    llamada_param -> expresion pn_FuncionLlamada2 llamada_param2
Rule 62    llamada_param -> empty
Rule 63    llamada_param2 -> COMMA llamada_param
Rule 64    llamada_param2 -> empty
Rule 65    llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
Rule 66    llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
Rule 67    regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
Rule 68    escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
Rule 69    escritura2 -> STRING_CTE pn_Secuencial4 escritura3
Rule 70    escritura2 -> expresion pn_Secuencial4 escritura3
Rule 71    escritura3 -> COMMA escritura2
Rule 72    escritura3 -> empty
Rule 73    expresion -> mega_exp expresion1
Rule 74    expresion1 -> ASSIGN expresion
Rule 75    expresion1 -> empty
Rule 76    mega_exp -> super_exp meg
Rule 77    meg -> op_l pn_Expresion10 mega_exp pn_Expresion11
Rule 78    meg -> empty
Rule 79    op_l -> AND_LOG
Rule 80    op_l -> OR_LOG
Rule 81    super_exp -> exp sp
Rule 82    sp -> op_r exp pn_Expresion9
Rule 83    sp -> empty
Rule 84    op_r -> LT_LOG pn_Expresion8
Rule 85    op_r -> GT_LOG pn_Expresion8
Rule 86    op_r -> LTE_LOG pn_Expresion8
Rule 87    op_r -> GTE_LOG pn_Expresion8
Rule 88    op_r -> NE_LOG pn_Expresion8
Rule 89    op_r -> EQUAL_LOG pn_Expresion8
Rule 90    exp -> termino pn_Expresion4 exp1
Rule 91    exp1 -> op_a exp
Rule 92    exp1 -> empty
Rule 93    op_a -> PLUS_OP pn_Expresion2
Rule 94    op_a -> MINUS_OP pn_Expresion2
Rule 95    termino -> factor pn_Expresion5 term
Rule 96    term -> op_a1 termino
Rule 97    term -> empty
Rule 98    op_a1 -> MULT_OP pn_Expresion3
Rule 99    op_a1 -> DIV_OP pn_Expresion3
Rule 100   factor -> ctes
Rule 101   factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
Rule 102   factor -> variable
Rule 103   factor -> llamada_funcion
Rule 104   empty -> <empty>
Rule 105   pn_GOTOprincipal -> <empty>
Rule 106   pn_Principal1 -> <empty>
Rule 107   pn_AddFunc -> <empty>
Rule 108   pn_Funcion1 -> <empty>
Rule 109   pn_Funcion2 -> <empty>
Rule 110   pn_Funcion3 -> <empty>
Rule 111   pn_FuncionLlamada1 -> <empty>
Rule 112   pn_FuncionLlamada2 -> <empty>
Rule 113   pn_FuncionLlamada3 -> <empty>
Rule 114   pn_CTENeg -> <empty>
Rule 115   pn_CTEInt -> <empty>
Rule 116   pn_CTEFloat -> <empty>
Rule 117   pn_CTEChar -> <empty>
Rule 118   pn_CTEString -> <empty>
Rule 119   pn_Expresion1 -> <empty>
Rule 120   pn_Expresion2 -> <empty>
Rule 121   pn_Expresion3 -> <empty>
Rule 122   pn_Expresion4 -> <empty>
Rule 123   pn_Expresion5 -> <empty>
Rule 124   pn_Expresion6 -> <empty>
Rule 125   pn_Expresion7 -> <empty>
Rule 126   pn_Expresion8 -> <empty>
Rule 127   pn_Expresion9 -> <empty>
Rule 128   pn_Expresion10 -> <empty>
Rule 129   pn_Expresion11 -> <empty>
Rule 130   pn_Secuencial1 -> <empty>
Rule 131   pn_Secuencial2 -> <empty>
Rule 132   pn_Secuencial3 -> <empty>
Rule 133   pn_Secuencial4 -> <empty>
Rule 134   pn_Secuencial5 -> <empty>
Rule 135   pn_Regresa -> <empty>
Rule 136   pn_Condicion1 -> <empty>
Rule 137   pn_Condicion2 -> <empty>
Rule 138   pn_Condicion3 -> <empty>
Rule 139   pn_loop_condicional1 -> <empty>
Rule 140   pn_loop_condicional2 -> <empty>
Rule 141   pn_loop_condicional3 -> <empty>
Rule 142   pn_loop_no_condicional1 -> <empty>
Rule 143   pn_loop_no_condicional2 -> <empty>
Rule 144   pn_loop_no_condicional3 -> <empty>
Rule 145   pn_loop_no_condicional4 -> <empty>
Rule 146   pn_loop_no_condicional5 -> <empty>
Rule 147   pn_SetCurrentType -> <empty>
Rule 148   pn_AddVariable -> <empty>
Rule 149   pn_VarDim2 -> <empty>
Rule 150   pn_VarDim3 -> <empty>
Rule 151   pn_VarDim4 -> <empty>
Rule 152   pn_VarDim -> <empty>
Rule 153   pn_AccederArreglo -> <empty>
Rule 154   pn_AccederMatriz -> <empty>

Terminals, with rules where they appear

AND_LOG              : 79
ASSIGN               : 40 56 74
CHAR_CTE             : 41
CHAR_TYPE            : 16
COLON                : 4
COMMA                : 8 13 26 50 58 63 71
COMMENT              : 
DESDE                : 56
DIV_OP               : 99
ENTONCES             : 52
EQUAL_LOG            : 89
ESCRIBE              : 68
FLOAT_CTE            : 46
FLOAT_TYPE           : 17
FUNCION              : 20
GTE_LOG              : 87
GT_LOG               : 85
HACER                : 55 56
HASTA                : 56
ID                   : 1 7 20 25 47 57 65 66
INT_CTE              : 12 13 45
INT_TYPE             : 15
LBRACK               : 12 48
LCURLY               : 29
LEE                  : 60
LPAREN               : 20 28 52 55 60 65 66 67 68 101
LTE_LOG              : 86
LT_LOG               : 84
MIENTRAS             : 55
MINUS_OP             : 43 94
MULT_OP              : 98
NEW_LINE             : 
NE_LOG               : 88
OR_LOG               : 80
PLUS_OP              : 93
PRINCIPAL            : 28
PROGRAMA             : 1
RBRACK               : 12 48
RCURLY               : 29
REGRESA              : 67
RPAREN               : 20 28 52 55 60 65 66 67 68 101
SEMIC                : 1 4 40 60 65 67 68
SI                   : 52
SINO                 : 53
STRING_CTE           : 42 69
STRING_TYPE          : 
VARIABLES            : 2
VOID                 : 21
error                : 

Nonterminals, with rules where they appear

DecVarDim            : 7
DecVarDim2           : 10
DecVarDim3           : 12
asignacion           : 32
bloque               : 20 28 52 53 55 56
condicion            : 33
ctes                 : 100
dec_funcion_param    : 20
dec_funciones        : 1 18
dec_funciones2       : 18
dec_variables        : 1 20
dec_variables2       : 2 5
dec_variables3       : 4
else                 : 52
empty                : 3 6 9 11 14 19 24 27 31 49 51 54 59 62 64 72 75 78 83 92 97
escritura            : 38
escritura2           : 68 71
escritura3           : 69 70
estatuto             : 30
estatutos            : 29 30
exp                  : 67 81 82 91 101
exp1                 : 90
expresion            : 40 48 50 52 55 56 56 61 70 74
expresion1           : 73
factor               : 95
lectura              : 39
lista_ids            : 4 8
lista_ids2           : 7
lista_parametros     : 23 26
lista_parametros2    : 25
llamada_funcion      : 37 103
llamada_param        : 63 65 66
llamada_param2       : 61
loop_condicional     : 35
loop_no_condicional  : 36
meg                  : 76
mega_exp             : 73 77
num                  : 43 44
op_a                 : 91
op_a1                : 96
op_l                 : 77
op_r                 : 82
pn_AccederArreglo    : 
pn_AccederMatriz     : 
pn_AddFunc           : 20
pn_AddVariable       : 7
pn_CTEChar           : 41
pn_CTEFloat          : 46
pn_CTEInt            : 45
pn_CTENeg            : 43
pn_CTEString         : 42
pn_Condicion1        : 52
pn_Condicion2        : 52
pn_Condicion3        : 53
pn_Expresion1        : 47 57
pn_Expresion10       : 77
pn_Expresion11       : 77
pn_Expresion2        : 93 94
pn_Expresion3        : 98 99
pn_Expresion4        : 90
pn_Expresion5        : 95
pn_Expresion6        : 65 66 101
pn_Expresion7        : 65 66 101
pn_Expresion8        : 84 85 86 87 88 89
pn_Expresion9        : 82
pn_Funcion1          : 25
pn_Funcion2          : 20
pn_Funcion3          : 20
pn_FuncionLlamada1   : 65 66
pn_FuncionLlamada2   : 61
pn_FuncionLlamada3   : 65 66
pn_GOTOprincipal     : 1
pn_Principal1        : 28
pn_Regresa           : 67
pn_Secuencial1       : 40 56
pn_Secuencial2       : 40
pn_Secuencial3       : 60 67 68
pn_Secuencial4       : 58 59 69 70
pn_Secuencial5       : 60 68
pn_SetCurrentType    : 15 16 17 21
pn_VarDim            : 10
pn_VarDim2           : 12
pn_VarDim3           : 12
pn_VarDim4           : 
pn_loop_condicional1 : 55
pn_loop_condicional2 : 55
pn_loop_condicional3 : 55
pn_loop_no_condicional1 : 56
pn_loop_no_condicional2 : 56
pn_loop_no_condicional3 : 56
pn_loop_no_condicional4 : 56
pn_loop_no_condicional5 : 56
principal            : 1
programa             : 0
regresa              : 34
sp                   : 81
super_exp            : 76
term                 : 95
termino              : 90 96
tipo                 : 4 22 25
tipo_func            : 20
varDim               : 47 57
varDim2              : 48
varLectura           : 58 60
varLectura2          : 57
variable             : 40 56 102

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    SEMIC           shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMIC . dec_variables pn_GOTOprincipal dec_funciones principal
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (104) empty -> .

    VARIABLES       shift and go to state 6
    FUNCION         reduce using rule 104 (empty -> .)
    PRINCIPAL       reduce using rule 104 (empty -> .)

    dec_variables                  shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMIC dec_variables . pn_GOTOprincipal dec_funciones principal
    (105) pn_GOTOprincipal -> .

    FUNCION         reduce using rule 105 (pn_GOTOprincipal -> .)
    PRINCIPAL       reduce using rule 105 (pn_GOTOprincipal -> .)

    pn_GOTOprincipal               shift and go to state 8

state 6

    (2) dec_variables -> VARIABLES . dec_variables2
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_variables2                 shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (3) dec_variables -> empty .

    FUNCION         reduce using rule 3 (dec_variables -> empty .)
    PRINCIPAL       reduce using rule 3 (dec_variables -> empty .)
    LCURLY          reduce using rule 3 (dec_variables -> empty .)


state 8

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal . dec_funciones principal
    (18) dec_funciones -> . dec_funciones2 dec_funciones
    (19) dec_funciones -> . empty
    (20) dec_funciones2 -> . FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (104) empty -> .

    FUNCION         shift and go to state 17
    PRINCIPAL       reduce using rule 104 (empty -> .)

    dec_funciones                  shift and go to state 14
    dec_funciones2                 shift and go to state 15
    empty                          shift and go to state 16

state 9

    (2) dec_variables -> VARIABLES dec_variables2 .

    FUNCION         reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    PRINCIPAL       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    LCURLY          reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)


state 10

    (4) dec_variables2 -> tipo . COLON lista_ids SEMIC dec_variables3

    COLON           shift and go to state 18


state 11

    (15) tipo -> INT_TYPE . pn_SetCurrentType
    (147) pn_SetCurrentType -> .

    COLON           reduce using rule 147 (pn_SetCurrentType -> .)
    ID              reduce using rule 147 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 19

state 12

    (16) tipo -> CHAR_TYPE . pn_SetCurrentType
    (147) pn_SetCurrentType -> .

    COLON           reduce using rule 147 (pn_SetCurrentType -> .)
    ID              reduce using rule 147 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 20

state 13

    (17) tipo -> FLOAT_TYPE . pn_SetCurrentType
    (147) pn_SetCurrentType -> .

    COLON           reduce using rule 147 (pn_SetCurrentType -> .)
    ID              reduce using rule 147 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 21

state 14

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones . principal
    (28) principal -> . PRINCIPAL pn_Principal1 LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 23

    principal                      shift and go to state 22

state 15

    (18) dec_funciones -> dec_funciones2 . dec_funciones
    (18) dec_funciones -> . dec_funciones2 dec_funciones
    (19) dec_funciones -> . empty
    (20) dec_funciones2 -> . FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (104) empty -> .

    FUNCION         shift and go to state 17
    PRINCIPAL       reduce using rule 104 (empty -> .)

    dec_funciones2                 shift and go to state 15
    dec_funciones                  shift and go to state 24
    empty                          shift and go to state 16

state 16

    (19) dec_funciones -> empty .

    PRINCIPAL       reduce using rule 19 (dec_funciones -> empty .)


state 17

    (20) dec_funciones2 -> FUNCION . tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (21) tipo_func -> . VOID pn_SetCurrentType
    (22) tipo_func -> . tipo
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 26
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    tipo_func                      shift and go to state 25
    tipo                           shift and go to state 27

state 18

    (4) dec_variables2 -> tipo COLON . lista_ids SEMIC dec_variables3
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 29

    lista_ids                      shift and go to state 28

state 19

    (15) tipo -> INT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    ID              reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)


state 20

    (16) tipo -> CHAR_TYPE pn_SetCurrentType .

    COLON           reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    ID              reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)


state 21

    (17) tipo -> FLOAT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    ID              reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)


state 22

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .)


state 23

    (28) principal -> PRINCIPAL . pn_Principal1 LPAREN RPAREN bloque
    (106) pn_Principal1 -> .

    LPAREN          reduce using rule 106 (pn_Principal1 -> .)

    pn_Principal1                  shift and go to state 30

state 24

    (18) dec_funciones -> dec_funciones2 dec_funciones .

    PRINCIPAL       reduce using rule 18 (dec_funciones -> dec_funciones2 dec_funciones .)


state 25

    (20) dec_funciones2 -> FUNCION tipo_func . ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    ID              shift and go to state 31


state 26

    (21) tipo_func -> VOID . pn_SetCurrentType
    (147) pn_SetCurrentType -> .

    ID              reduce using rule 147 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 32

state 27

    (22) tipo_func -> tipo .

    ID              reduce using rule 22 (tipo_func -> tipo .)


state 28

    (4) dec_variables2 -> tipo COLON lista_ids . SEMIC dec_variables3

    SEMIC           shift and go to state 33


state 29

    (7) lista_ids -> ID . pn_AddVariable DecVarDim lista_ids2
    (148) pn_AddVariable -> .

    LBRACK          reduce using rule 148 (pn_AddVariable -> .)
    COMMA           reduce using rule 148 (pn_AddVariable -> .)
    SEMIC           reduce using rule 148 (pn_AddVariable -> .)

    pn_AddVariable                 shift and go to state 34

state 30

    (28) principal -> PRINCIPAL pn_Principal1 . LPAREN RPAREN bloque

    LPAREN          shift and go to state 35


state 31

    (20) dec_funciones2 -> FUNCION tipo_func ID . pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (107) pn_AddFunc -> .

    LPAREN          reduce using rule 107 (pn_AddFunc -> .)

    pn_AddFunc                     shift and go to state 36

state 32

    (21) tipo_func -> VOID pn_SetCurrentType .

    ID              reduce using rule 21 (tipo_func -> VOID pn_SetCurrentType .)


state 33

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC . dec_variables3
    (5) dec_variables3 -> . dec_variables2
    (6) dec_variables3 -> . empty
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (104) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    FUNCION         reduce using rule 104 (empty -> .)
    PRINCIPAL       reduce using rule 104 (empty -> .)
    LCURLY          reduce using rule 104 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    tipo                           shift and go to state 10
    dec_variables3                 shift and go to state 37
    dec_variables2                 shift and go to state 38
    empty                          shift and go to state 39

state 34

    (7) lista_ids -> ID pn_AddVariable . DecVarDim lista_ids2
    (10) DecVarDim -> . DecVarDim2 pn_VarDim
    (11) DecVarDim -> . empty
    (12) DecVarDim2 -> . LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
    (104) empty -> .

    LBRACK          shift and go to state 43
    COMMA           reduce using rule 104 (empty -> .)
    SEMIC           reduce using rule 104 (empty -> .)

    DecVarDim                      shift and go to state 40
    DecVarDim2                     shift and go to state 41
    empty                          shift and go to state 42

state 35

    (28) principal -> PRINCIPAL pn_Principal1 LPAREN . RPAREN bloque

    RPAREN          shift and go to state 44


state 36

    (20) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc . LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    LPAREN          shift and go to state 45


state 37

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .

    FUNCION         reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    PRINCIPAL       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    LCURLY          reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)


state 38

    (5) dec_variables3 -> dec_variables2 .

    FUNCION         reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    PRINCIPAL       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    LCURLY          reduce using rule 5 (dec_variables3 -> dec_variables2 .)


state 39

    (6) dec_variables3 -> empty .

    FUNCION         reduce using rule 6 (dec_variables3 -> empty .)
    PRINCIPAL       reduce using rule 6 (dec_variables3 -> empty .)
    LCURLY          reduce using rule 6 (dec_variables3 -> empty .)


state 40

    (7) lista_ids -> ID pn_AddVariable DecVarDim . lista_ids2
    (8) lista_ids2 -> . COMMA lista_ids
    (9) lista_ids2 -> . empty
    (104) empty -> .

    COMMA           shift and go to state 47
    SEMIC           reduce using rule 104 (empty -> .)

    lista_ids2                     shift and go to state 46
    empty                          shift and go to state 48

state 41

    (10) DecVarDim -> DecVarDim2 . pn_VarDim
    (152) pn_VarDim -> .

    COMMA           reduce using rule 152 (pn_VarDim -> .)
    SEMIC           reduce using rule 152 (pn_VarDim -> .)

    pn_VarDim                      shift and go to state 49

state 42

    (11) DecVarDim -> empty .

    COMMA           reduce using rule 11 (DecVarDim -> empty .)
    SEMIC           reduce using rule 11 (DecVarDim -> empty .)


state 43

    (12) DecVarDim2 -> LBRACK . pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
    (149) pn_VarDim2 -> .

    INT_CTE         reduce using rule 149 (pn_VarDim2 -> .)

    pn_VarDim2                     shift and go to state 50

state 44

    (28) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN . bloque
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 51

state 45

    (20) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN . dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (23) dec_funcion_param -> . lista_parametros
    (24) dec_funcion_param -> . empty
    (25) lista_parametros -> . tipo ID pn_Funcion1 lista_parametros2
    (104) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    RPAREN          reduce using rule 104 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_funcion_param              shift and go to state 53
    lista_parametros               shift and go to state 54
    empty                          shift and go to state 55
    tipo                           shift and go to state 56

state 46

    (7) lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .

    SEMIC           reduce using rule 7 (lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .)


state 47

    (8) lista_ids2 -> COMMA . lista_ids
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 29

    lista_ids                      shift and go to state 57

state 48

    (9) lista_ids2 -> empty .

    SEMIC           reduce using rule 9 (lista_ids2 -> empty .)


state 49

    (10) DecVarDim -> DecVarDim2 pn_VarDim .

    COMMA           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)
    SEMIC           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)


state 50

    (12) DecVarDim2 -> LBRACK pn_VarDim2 . INT_CTE pn_VarDim3 DecVarDim3 RBRACK

    INT_CTE         shift and go to state 58


state 51

    (28) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .

    $end            reduce using rule 28 (principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .)


state 52

    (29) bloque -> LCURLY . estatutos RCURLY
    (30) estatutos -> . estatuto estatutos
    (31) estatutos -> . empty
    (32) estatuto -> . asignacion
    (33) estatuto -> . condicion
    (34) estatuto -> . regresa
    (35) estatuto -> . loop_condicional
    (36) estatuto -> . loop_no_condicional
    (37) estatuto -> . llamada_funcion
    (38) estatuto -> . escritura
    (39) estatuto -> . lectura
    (104) empty -> .
    (40) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (52) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (67) regresa -> . REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (55) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (56) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (68) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (60) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (47) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 104 (empty -> .)
    SI              shift and go to state 71
    REGRESA         shift and go to state 72
    MIENTRAS        shift and go to state 73
    DESDE           shift and go to state 74
    ID              shift and go to state 75
    ESCRIBE         shift and go to state 76
    LEE             shift and go to state 77

    estatutos                      shift and go to state 59
    estatuto                       shift and go to state 60
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    condicion                      shift and go to state 63
    regresa                        shift and go to state 64
    loop_condicional               shift and go to state 65
    loop_no_condicional            shift and go to state 66
    llamada_funcion                shift and go to state 67
    escritura                      shift and go to state 68
    lectura                        shift and go to state 69
    variable                       shift and go to state 70

state 53

    (20) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param . RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    RPAREN          shift and go to state 78


state 54

    (23) dec_funcion_param -> lista_parametros .

    RPAREN          reduce using rule 23 (dec_funcion_param -> lista_parametros .)


state 55

    (24) dec_funcion_param -> empty .

    RPAREN          reduce using rule 24 (dec_funcion_param -> empty .)


state 56

    (25) lista_parametros -> tipo . ID pn_Funcion1 lista_parametros2

    ID              shift and go to state 79


state 57

    (8) lista_ids2 -> COMMA lista_ids .

    SEMIC           reduce using rule 8 (lista_ids2 -> COMMA lista_ids .)


state 58

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE . pn_VarDim3 DecVarDim3 RBRACK
    (150) pn_VarDim3 -> .

    COMMA           reduce using rule 150 (pn_VarDim3 -> .)
    RBRACK          reduce using rule 150 (pn_VarDim3 -> .)

    pn_VarDim3                     shift and go to state 80

state 59

    (29) bloque -> LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 81


state 60

    (30) estatutos -> estatuto . estatutos
    (30) estatutos -> . estatuto estatutos
    (31) estatutos -> . empty
    (32) estatuto -> . asignacion
    (33) estatuto -> . condicion
    (34) estatuto -> . regresa
    (35) estatuto -> . loop_condicional
    (36) estatuto -> . loop_no_condicional
    (37) estatuto -> . llamada_funcion
    (38) estatuto -> . escritura
    (39) estatuto -> . lectura
    (104) empty -> .
    (40) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (52) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (67) regresa -> . REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (55) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (56) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (68) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (60) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (47) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 104 (empty -> .)
    SI              shift and go to state 71
    REGRESA         shift and go to state 72
    MIENTRAS        shift and go to state 73
    DESDE           shift and go to state 74
    ID              shift and go to state 75
    ESCRIBE         shift and go to state 76
    LEE             shift and go to state 77

    estatuto                       shift and go to state 60
    estatutos                      shift and go to state 82
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    condicion                      shift and go to state 63
    regresa                        shift and go to state 64
    loop_condicional               shift and go to state 65
    loop_no_condicional            shift and go to state 66
    llamada_funcion                shift and go to state 67
    escritura                      shift and go to state 68
    lectura                        shift and go to state 69
    variable                       shift and go to state 70

state 61

    (31) estatutos -> empty .

    RCURLY          reduce using rule 31 (estatutos -> empty .)


state 62

    (32) estatuto -> asignacion .

    SI              reduce using rule 32 (estatuto -> asignacion .)
    REGRESA         reduce using rule 32 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 32 (estatuto -> asignacion .)
    DESDE           reduce using rule 32 (estatuto -> asignacion .)
    ID              reduce using rule 32 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 32 (estatuto -> asignacion .)
    LEE             reduce using rule 32 (estatuto -> asignacion .)
    RCURLY          reduce using rule 32 (estatuto -> asignacion .)


state 63

    (33) estatuto -> condicion .

    SI              reduce using rule 33 (estatuto -> condicion .)
    REGRESA         reduce using rule 33 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 33 (estatuto -> condicion .)
    DESDE           reduce using rule 33 (estatuto -> condicion .)
    ID              reduce using rule 33 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 33 (estatuto -> condicion .)
    LEE             reduce using rule 33 (estatuto -> condicion .)
    RCURLY          reduce using rule 33 (estatuto -> condicion .)


state 64

    (34) estatuto -> regresa .

    SI              reduce using rule 34 (estatuto -> regresa .)
    REGRESA         reduce using rule 34 (estatuto -> regresa .)
    MIENTRAS        reduce using rule 34 (estatuto -> regresa .)
    DESDE           reduce using rule 34 (estatuto -> regresa .)
    ID              reduce using rule 34 (estatuto -> regresa .)
    ESCRIBE         reduce using rule 34 (estatuto -> regresa .)
    LEE             reduce using rule 34 (estatuto -> regresa .)
    RCURLY          reduce using rule 34 (estatuto -> regresa .)


state 65

    (35) estatuto -> loop_condicional .

    SI              reduce using rule 35 (estatuto -> loop_condicional .)
    REGRESA         reduce using rule 35 (estatuto -> loop_condicional .)
    MIENTRAS        reduce using rule 35 (estatuto -> loop_condicional .)
    DESDE           reduce using rule 35 (estatuto -> loop_condicional .)
    ID              reduce using rule 35 (estatuto -> loop_condicional .)
    ESCRIBE         reduce using rule 35 (estatuto -> loop_condicional .)
    LEE             reduce using rule 35 (estatuto -> loop_condicional .)
    RCURLY          reduce using rule 35 (estatuto -> loop_condicional .)


state 66

    (36) estatuto -> loop_no_condicional .

    SI              reduce using rule 36 (estatuto -> loop_no_condicional .)
    REGRESA         reduce using rule 36 (estatuto -> loop_no_condicional .)
    MIENTRAS        reduce using rule 36 (estatuto -> loop_no_condicional .)
    DESDE           reduce using rule 36 (estatuto -> loop_no_condicional .)
    ID              reduce using rule 36 (estatuto -> loop_no_condicional .)
    ESCRIBE         reduce using rule 36 (estatuto -> loop_no_condicional .)
    LEE             reduce using rule 36 (estatuto -> loop_no_condicional .)
    RCURLY          reduce using rule 36 (estatuto -> loop_no_condicional .)


state 67

    (37) estatuto -> llamada_funcion .

    SI              reduce using rule 37 (estatuto -> llamada_funcion .)
    REGRESA         reduce using rule 37 (estatuto -> llamada_funcion .)
    MIENTRAS        reduce using rule 37 (estatuto -> llamada_funcion .)
    DESDE           reduce using rule 37 (estatuto -> llamada_funcion .)
    ID              reduce using rule 37 (estatuto -> llamada_funcion .)
    ESCRIBE         reduce using rule 37 (estatuto -> llamada_funcion .)
    LEE             reduce using rule 37 (estatuto -> llamada_funcion .)
    RCURLY          reduce using rule 37 (estatuto -> llamada_funcion .)


state 68

    (38) estatuto -> escritura .

    SI              reduce using rule 38 (estatuto -> escritura .)
    REGRESA         reduce using rule 38 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 38 (estatuto -> escritura .)
    DESDE           reduce using rule 38 (estatuto -> escritura .)
    ID              reduce using rule 38 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 38 (estatuto -> escritura .)
    LEE             reduce using rule 38 (estatuto -> escritura .)
    RCURLY          reduce using rule 38 (estatuto -> escritura .)


state 69

    (39) estatuto -> lectura .

    SI              reduce using rule 39 (estatuto -> lectura .)
    REGRESA         reduce using rule 39 (estatuto -> lectura .)
    MIENTRAS        reduce using rule 39 (estatuto -> lectura .)
    DESDE           reduce using rule 39 (estatuto -> lectura .)
    ID              reduce using rule 39 (estatuto -> lectura .)
    ESCRIBE         reduce using rule 39 (estatuto -> lectura .)
    LEE             reduce using rule 39 (estatuto -> lectura .)
    RCURLY          reduce using rule 39 (estatuto -> lectura .)


state 70

    (40) asignacion -> variable . ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2

    ASSIGN          shift and go to state 83


state 71

    (52) condicion -> SI . LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    LPAREN          shift and go to state 84


state 72

    (67) regresa -> REGRESA . pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (132) pn_Secuencial3 -> .

    LPAREN          reduce using rule 132 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 85

state 73

    (55) loop_condicional -> MIENTRAS . pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (139) pn_loop_condicional1 -> .

    LPAREN          reduce using rule 139 (pn_loop_condicional1 -> .)

    pn_loop_condicional1           shift and go to state 86

state 74

    (56) loop_no_condicional -> DESDE . pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (142) pn_loop_no_condicional1 -> .

    ID              reduce using rule 142 (pn_loop_no_condicional1 -> .)

    pn_loop_no_condicional1        shift and go to state 87

state 75

    (65) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (47) variable -> ID . pn_Expresion1 varDim
    (111) pn_FuncionLlamada1 -> .
    (119) pn_Expresion1 -> .

    LPAREN          reduce using rule 111 (pn_FuncionLlamada1 -> .)
    LBRACK          reduce using rule 119 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 119 (pn_Expresion1 -> .)

    pn_FuncionLlamada1             shift and go to state 88
    pn_Expresion1                  shift and go to state 89

state 76

    (68) escritura -> ESCRIBE . pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (132) pn_Secuencial3 -> .

    LPAREN          reduce using rule 132 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 90

state 77

    (60) lectura -> LEE . pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (132) pn_Secuencial3 -> .

    LPAREN          reduce using rule 132 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 91

state 78

    (20) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN . pn_Funcion2 dec_variables bloque pn_Funcion3
    (109) pn_Funcion2 -> .

    VARIABLES       reduce using rule 109 (pn_Funcion2 -> .)
    LCURLY          reduce using rule 109 (pn_Funcion2 -> .)

    pn_Funcion2                    shift and go to state 92

state 79

    (25) lista_parametros -> tipo ID . pn_Funcion1 lista_parametros2
    (108) pn_Funcion1 -> .

    COMMA           reduce using rule 108 (pn_Funcion1 -> .)
    RPAREN          reduce using rule 108 (pn_Funcion1 -> .)

    pn_Funcion1                    shift and go to state 93

state 80

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 . DecVarDim3 RBRACK
    (13) DecVarDim3 -> . COMMA INT_CTE
    (14) DecVarDim3 -> . empty
    (104) empty -> .

    COMMA           shift and go to state 95
    RBRACK          reduce using rule 104 (empty -> .)

    DecVarDim3                     shift and go to state 94
    empty                          shift and go to state 96

state 81

    (29) bloque -> LCURLY estatutos RCURLY .

    $end            reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    FUNCION         reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    PRINCIPAL       reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    SINO            reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    SI              reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    REGRESA         reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    MIENTRAS        reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    DESDE           reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    ID              reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    ESCRIBE         reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    LEE             reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)


state 82

    (30) estatutos -> estatuto estatutos .

    RCURLY          reduce using rule 30 (estatutos -> estatuto estatutos .)


state 83

    (40) asignacion -> variable ASSIGN . pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (130) pn_Secuencial1 -> .

    LPAREN          reduce using rule 130 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 130 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 130 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 130 (pn_Secuencial1 -> .)
    ID              reduce using rule 130 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 130 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 130 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 97

state 84

    (52) condicion -> SI LPAREN . expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (73) expresion -> . mega_exp expresion1
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    expresion                      shift and go to state 99
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 85

    (67) regresa -> REGRESA pn_Secuencial3 . LPAREN exp RPAREN pn_Regresa SEMIC

    LPAREN          shift and go to state 115


state 86

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 . LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    LPAREN          shift and go to state 116


state 87

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 . variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (47) variable -> . ID pn_Expresion1 varDim

    ID              shift and go to state 118

    variable                       shift and go to state 117

state 88

    (65) llamada_funcion -> ID pn_FuncionLlamada1 . LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> ID pn_FuncionLlamada1 . LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3

    LPAREN          shift and go to state 119


state 89

    (47) variable -> ID pn_Expresion1 . varDim
    (48) varDim -> . LBRACK expresion varDim2 RBRACK
    (49) varDim -> . empty
    (104) empty -> .

    LBRACK          shift and go to state 121
    ASSIGN          reduce using rule 104 (empty -> .)
    MULT_OP         reduce using rule 104 (empty -> .)
    DIV_OP          reduce using rule 104 (empty -> .)
    PLUS_OP         reduce using rule 104 (empty -> .)
    MINUS_OP        reduce using rule 104 (empty -> .)
    LT_LOG          reduce using rule 104 (empty -> .)
    GT_LOG          reduce using rule 104 (empty -> .)
    LTE_LOG         reduce using rule 104 (empty -> .)
    GTE_LOG         reduce using rule 104 (empty -> .)
    NE_LOG          reduce using rule 104 (empty -> .)
    EQUAL_LOG       reduce using rule 104 (empty -> .)
    AND_LOG         reduce using rule 104 (empty -> .)
    OR_LOG          reduce using rule 104 (empty -> .)
    RPAREN          reduce using rule 104 (empty -> .)
    SEMIC           reduce using rule 104 (empty -> .)
    COMMA           reduce using rule 104 (empty -> .)
    RBRACK          reduce using rule 104 (empty -> .)
    HASTA           reduce using rule 104 (empty -> .)
    HACER           reduce using rule 104 (empty -> .)

    varDim                         shift and go to state 120
    empty                          shift and go to state 122

state 90

    (68) escritura -> ESCRIBE pn_Secuencial3 . LPAREN escritura2 RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 123


state 91

    (60) lectura -> LEE pn_Secuencial3 . LPAREN varLectura RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 124


state 92

    (20) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 . dec_variables bloque pn_Funcion3
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (104) empty -> .

    VARIABLES       shift and go to state 6
    LCURLY          reduce using rule 104 (empty -> .)

    dec_variables                  shift and go to state 125
    empty                          shift and go to state 7

state 93

    (25) lista_parametros -> tipo ID pn_Funcion1 . lista_parametros2
    (26) lista_parametros2 -> . COMMA lista_parametros
    (27) lista_parametros2 -> . empty
    (104) empty -> .

    COMMA           shift and go to state 127
    RPAREN          reduce using rule 104 (empty -> .)

    lista_parametros2              shift and go to state 126
    empty                          shift and go to state 128

state 94

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 . RBRACK

    RBRACK          shift and go to state 129


state 95

    (13) DecVarDim3 -> COMMA . INT_CTE

    INT_CTE         shift and go to state 130


state 96

    (14) DecVarDim3 -> empty .

    RBRACK          reduce using rule 14 (DecVarDim3 -> empty .)


state 97

    (40) asignacion -> variable ASSIGN pn_Secuencial1 . expresion SEMIC pn_Secuencial2
    (73) expresion -> . mega_exp expresion1
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    variable                       shift and go to state 106
    expresion                      shift and go to state 131
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 98

    (101) factor -> LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7
    (124) pn_Expresion6 -> .

    LPAREN          reduce using rule 124 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 124 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 124 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 124 (pn_Expresion6 -> .)
    ID              reduce using rule 124 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 124 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 124 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 132

state 99

    (52) condicion -> SI LPAREN expresion . RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    RPAREN          shift and go to state 133


state 100

    (73) expresion -> mega_exp . expresion1
    (74) expresion1 -> . ASSIGN expresion
    (75) expresion1 -> . empty
    (104) empty -> .

    ASSIGN          shift and go to state 135
    RPAREN          reduce using rule 104 (empty -> .)
    SEMIC           reduce using rule 104 (empty -> .)
    COMMA           reduce using rule 104 (empty -> .)
    RBRACK          reduce using rule 104 (empty -> .)
    HASTA           reduce using rule 104 (empty -> .)
    HACER           reduce using rule 104 (empty -> .)

    expresion1                     shift and go to state 134
    empty                          shift and go to state 136

state 101

    (76) mega_exp -> super_exp . meg
    (77) meg -> . op_l pn_Expresion10 mega_exp pn_Expresion11
    (78) meg -> . empty
    (79) op_l -> . AND_LOG
    (80) op_l -> . OR_LOG
    (104) empty -> .

    AND_LOG         shift and go to state 140
    OR_LOG          shift and go to state 141
    ASSIGN          reduce using rule 104 (empty -> .)
    RPAREN          reduce using rule 104 (empty -> .)
    SEMIC           reduce using rule 104 (empty -> .)
    COMMA           reduce using rule 104 (empty -> .)
    RBRACK          reduce using rule 104 (empty -> .)
    HASTA           reduce using rule 104 (empty -> .)
    HACER           reduce using rule 104 (empty -> .)

    meg                            shift and go to state 137
    op_l                           shift and go to state 138
    empty                          shift and go to state 139

state 102

    (81) super_exp -> exp . sp
    (82) sp -> . op_r exp pn_Expresion9
    (83) sp -> . empty
    (84) op_r -> . LT_LOG pn_Expresion8
    (85) op_r -> . GT_LOG pn_Expresion8
    (86) op_r -> . LTE_LOG pn_Expresion8
    (87) op_r -> . GTE_LOG pn_Expresion8
    (88) op_r -> . NE_LOG pn_Expresion8
    (89) op_r -> . EQUAL_LOG pn_Expresion8
    (104) empty -> .

    LT_LOG          shift and go to state 145
    GT_LOG          shift and go to state 146
    LTE_LOG         shift and go to state 147
    GTE_LOG         shift and go to state 148
    NE_LOG          shift and go to state 149
    EQUAL_LOG       shift and go to state 150
    AND_LOG         reduce using rule 104 (empty -> .)
    OR_LOG          reduce using rule 104 (empty -> .)
    ASSIGN          reduce using rule 104 (empty -> .)
    RPAREN          reduce using rule 104 (empty -> .)
    SEMIC           reduce using rule 104 (empty -> .)
    COMMA           reduce using rule 104 (empty -> .)
    RBRACK          reduce using rule 104 (empty -> .)
    HASTA           reduce using rule 104 (empty -> .)
    HACER           reduce using rule 104 (empty -> .)

    sp                             shift and go to state 142
    op_r                           shift and go to state 143
    empty                          shift and go to state 144

state 103

    (90) exp -> termino . pn_Expresion4 exp1
    (122) pn_Expresion4 -> .

    PLUS_OP         reduce using rule 122 (pn_Expresion4 -> .)
    MINUS_OP        reduce using rule 122 (pn_Expresion4 -> .)
    LT_LOG          reduce using rule 122 (pn_Expresion4 -> .)
    GT_LOG          reduce using rule 122 (pn_Expresion4 -> .)
    LTE_LOG         reduce using rule 122 (pn_Expresion4 -> .)
    GTE_LOG         reduce using rule 122 (pn_Expresion4 -> .)
    NE_LOG          reduce using rule 122 (pn_Expresion4 -> .)
    EQUAL_LOG       reduce using rule 122 (pn_Expresion4 -> .)
    AND_LOG         reduce using rule 122 (pn_Expresion4 -> .)
    OR_LOG          reduce using rule 122 (pn_Expresion4 -> .)
    ASSIGN          reduce using rule 122 (pn_Expresion4 -> .)
    RPAREN          reduce using rule 122 (pn_Expresion4 -> .)
    SEMIC           reduce using rule 122 (pn_Expresion4 -> .)
    COMMA           reduce using rule 122 (pn_Expresion4 -> .)
    RBRACK          reduce using rule 122 (pn_Expresion4 -> .)
    HASTA           reduce using rule 122 (pn_Expresion4 -> .)
    HACER           reduce using rule 122 (pn_Expresion4 -> .)

    pn_Expresion4                  shift and go to state 151

state 104

    (95) termino -> factor . pn_Expresion5 term
    (123) pn_Expresion5 -> .

    MULT_OP         reduce using rule 123 (pn_Expresion5 -> .)
    DIV_OP          reduce using rule 123 (pn_Expresion5 -> .)
    PLUS_OP         reduce using rule 123 (pn_Expresion5 -> .)
    MINUS_OP        reduce using rule 123 (pn_Expresion5 -> .)
    LT_LOG          reduce using rule 123 (pn_Expresion5 -> .)
    GT_LOG          reduce using rule 123 (pn_Expresion5 -> .)
    LTE_LOG         reduce using rule 123 (pn_Expresion5 -> .)
    GTE_LOG         reduce using rule 123 (pn_Expresion5 -> .)
    NE_LOG          reduce using rule 123 (pn_Expresion5 -> .)
    EQUAL_LOG       reduce using rule 123 (pn_Expresion5 -> .)
    AND_LOG         reduce using rule 123 (pn_Expresion5 -> .)
    OR_LOG          reduce using rule 123 (pn_Expresion5 -> .)
    ASSIGN          reduce using rule 123 (pn_Expresion5 -> .)
    RPAREN          reduce using rule 123 (pn_Expresion5 -> .)
    SEMIC           reduce using rule 123 (pn_Expresion5 -> .)
    COMMA           reduce using rule 123 (pn_Expresion5 -> .)
    RBRACK          reduce using rule 123 (pn_Expresion5 -> .)
    HASTA           reduce using rule 123 (pn_Expresion5 -> .)
    HACER           reduce using rule 123 (pn_Expresion5 -> .)

    pn_Expresion5                  shift and go to state 152

state 105

    (100) factor -> ctes .

    MULT_OP         reduce using rule 100 (factor -> ctes .)
    DIV_OP          reduce using rule 100 (factor -> ctes .)
    PLUS_OP         reduce using rule 100 (factor -> ctes .)
    MINUS_OP        reduce using rule 100 (factor -> ctes .)
    LT_LOG          reduce using rule 100 (factor -> ctes .)
    GT_LOG          reduce using rule 100 (factor -> ctes .)
    LTE_LOG         reduce using rule 100 (factor -> ctes .)
    GTE_LOG         reduce using rule 100 (factor -> ctes .)
    NE_LOG          reduce using rule 100 (factor -> ctes .)
    EQUAL_LOG       reduce using rule 100 (factor -> ctes .)
    AND_LOG         reduce using rule 100 (factor -> ctes .)
    OR_LOG          reduce using rule 100 (factor -> ctes .)
    ASSIGN          reduce using rule 100 (factor -> ctes .)
    RPAREN          reduce using rule 100 (factor -> ctes .)
    SEMIC           reduce using rule 100 (factor -> ctes .)
    COMMA           reduce using rule 100 (factor -> ctes .)
    RBRACK          reduce using rule 100 (factor -> ctes .)
    HASTA           reduce using rule 100 (factor -> ctes .)
    HACER           reduce using rule 100 (factor -> ctes .)


state 106

    (102) factor -> variable .

    MULT_OP         reduce using rule 102 (factor -> variable .)
    DIV_OP          reduce using rule 102 (factor -> variable .)
    PLUS_OP         reduce using rule 102 (factor -> variable .)
    MINUS_OP        reduce using rule 102 (factor -> variable .)
    LT_LOG          reduce using rule 102 (factor -> variable .)
    GT_LOG          reduce using rule 102 (factor -> variable .)
    LTE_LOG         reduce using rule 102 (factor -> variable .)
    GTE_LOG         reduce using rule 102 (factor -> variable .)
    NE_LOG          reduce using rule 102 (factor -> variable .)
    EQUAL_LOG       reduce using rule 102 (factor -> variable .)
    AND_LOG         reduce using rule 102 (factor -> variable .)
    OR_LOG          reduce using rule 102 (factor -> variable .)
    ASSIGN          reduce using rule 102 (factor -> variable .)
    RPAREN          reduce using rule 102 (factor -> variable .)
    SEMIC           reduce using rule 102 (factor -> variable .)
    COMMA           reduce using rule 102 (factor -> variable .)
    RBRACK          reduce using rule 102 (factor -> variable .)
    HASTA           reduce using rule 102 (factor -> variable .)
    HACER           reduce using rule 102 (factor -> variable .)


state 107

    (103) factor -> llamada_funcion .

    MULT_OP         reduce using rule 103 (factor -> llamada_funcion .)
    DIV_OP          reduce using rule 103 (factor -> llamada_funcion .)
    PLUS_OP         reduce using rule 103 (factor -> llamada_funcion .)
    MINUS_OP        reduce using rule 103 (factor -> llamada_funcion .)
    LT_LOG          reduce using rule 103 (factor -> llamada_funcion .)
    GT_LOG          reduce using rule 103 (factor -> llamada_funcion .)
    LTE_LOG         reduce using rule 103 (factor -> llamada_funcion .)
    GTE_LOG         reduce using rule 103 (factor -> llamada_funcion .)
    NE_LOG          reduce using rule 103 (factor -> llamada_funcion .)
    EQUAL_LOG       reduce using rule 103 (factor -> llamada_funcion .)
    AND_LOG         reduce using rule 103 (factor -> llamada_funcion .)
    OR_LOG          reduce using rule 103 (factor -> llamada_funcion .)
    ASSIGN          reduce using rule 103 (factor -> llamada_funcion .)
    RPAREN          reduce using rule 103 (factor -> llamada_funcion .)
    SEMIC           reduce using rule 103 (factor -> llamada_funcion .)
    COMMA           reduce using rule 103 (factor -> llamada_funcion .)
    RBRACK          reduce using rule 103 (factor -> llamada_funcion .)
    HASTA           reduce using rule 103 (factor -> llamada_funcion .)
    HACER           reduce using rule 103 (factor -> llamada_funcion .)


state 108

    (41) ctes -> CHAR_CTE . pn_CTEChar
    (117) pn_CTEChar -> .

    MULT_OP         reduce using rule 117 (pn_CTEChar -> .)
    DIV_OP          reduce using rule 117 (pn_CTEChar -> .)
    PLUS_OP         reduce using rule 117 (pn_CTEChar -> .)
    MINUS_OP        reduce using rule 117 (pn_CTEChar -> .)
    LT_LOG          reduce using rule 117 (pn_CTEChar -> .)
    GT_LOG          reduce using rule 117 (pn_CTEChar -> .)
    LTE_LOG         reduce using rule 117 (pn_CTEChar -> .)
    GTE_LOG         reduce using rule 117 (pn_CTEChar -> .)
    NE_LOG          reduce using rule 117 (pn_CTEChar -> .)
    EQUAL_LOG       reduce using rule 117 (pn_CTEChar -> .)
    AND_LOG         reduce using rule 117 (pn_CTEChar -> .)
    OR_LOG          reduce using rule 117 (pn_CTEChar -> .)
    ASSIGN          reduce using rule 117 (pn_CTEChar -> .)
    RPAREN          reduce using rule 117 (pn_CTEChar -> .)
    SEMIC           reduce using rule 117 (pn_CTEChar -> .)
    COMMA           reduce using rule 117 (pn_CTEChar -> .)
    RBRACK          reduce using rule 117 (pn_CTEChar -> .)
    HASTA           reduce using rule 117 (pn_CTEChar -> .)
    HACER           reduce using rule 117 (pn_CTEChar -> .)

    pn_CTEChar                     shift and go to state 153

state 109

    (42) ctes -> STRING_CTE . pn_CTEString
    (118) pn_CTEString -> .

    MULT_OP         reduce using rule 118 (pn_CTEString -> .)
    DIV_OP          reduce using rule 118 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 118 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 118 (pn_CTEString -> .)
    LT_LOG          reduce using rule 118 (pn_CTEString -> .)
    GT_LOG          reduce using rule 118 (pn_CTEString -> .)
    LTE_LOG         reduce using rule 118 (pn_CTEString -> .)
    GTE_LOG         reduce using rule 118 (pn_CTEString -> .)
    NE_LOG          reduce using rule 118 (pn_CTEString -> .)
    EQUAL_LOG       reduce using rule 118 (pn_CTEString -> .)
    AND_LOG         reduce using rule 118 (pn_CTEString -> .)
    OR_LOG          reduce using rule 118 (pn_CTEString -> .)
    ASSIGN          reduce using rule 118 (pn_CTEString -> .)
    RPAREN          reduce using rule 118 (pn_CTEString -> .)
    SEMIC           reduce using rule 118 (pn_CTEString -> .)
    COMMA           reduce using rule 118 (pn_CTEString -> .)
    RBRACK          reduce using rule 118 (pn_CTEString -> .)
    HASTA           reduce using rule 118 (pn_CTEString -> .)
    HACER           reduce using rule 118 (pn_CTEString -> .)

    pn_CTEString                   shift and go to state 154

state 110

    (43) ctes -> MINUS_OP . pn_CTENeg num
    (114) pn_CTENeg -> .

    INT_CTE         reduce using rule 114 (pn_CTENeg -> .)
    FLOAT_CTE       reduce using rule 114 (pn_CTENeg -> .)

    pn_CTENeg                      shift and go to state 155

state 111

    (44) ctes -> num .

    MULT_OP         reduce using rule 44 (ctes -> num .)
    DIV_OP          reduce using rule 44 (ctes -> num .)
    PLUS_OP         reduce using rule 44 (ctes -> num .)
    MINUS_OP        reduce using rule 44 (ctes -> num .)
    LT_LOG          reduce using rule 44 (ctes -> num .)
    GT_LOG          reduce using rule 44 (ctes -> num .)
    LTE_LOG         reduce using rule 44 (ctes -> num .)
    GTE_LOG         reduce using rule 44 (ctes -> num .)
    NE_LOG          reduce using rule 44 (ctes -> num .)
    EQUAL_LOG       reduce using rule 44 (ctes -> num .)
    AND_LOG         reduce using rule 44 (ctes -> num .)
    OR_LOG          reduce using rule 44 (ctes -> num .)
    ASSIGN          reduce using rule 44 (ctes -> num .)
    RPAREN          reduce using rule 44 (ctes -> num .)
    SEMIC           reduce using rule 44 (ctes -> num .)
    COMMA           reduce using rule 44 (ctes -> num .)
    RBRACK          reduce using rule 44 (ctes -> num .)
    HASTA           reduce using rule 44 (ctes -> num .)
    HACER           reduce using rule 44 (ctes -> num .)


state 112

    (47) variable -> ID . pn_Expresion1 varDim
    (65) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (119) pn_Expresion1 -> .
    (111) pn_FuncionLlamada1 -> .

    LBRACK          reduce using rule 119 (pn_Expresion1 -> .)
    MULT_OP         reduce using rule 119 (pn_Expresion1 -> .)
    DIV_OP          reduce using rule 119 (pn_Expresion1 -> .)
    PLUS_OP         reduce using rule 119 (pn_Expresion1 -> .)
    MINUS_OP        reduce using rule 119 (pn_Expresion1 -> .)
    LT_LOG          reduce using rule 119 (pn_Expresion1 -> .)
    GT_LOG          reduce using rule 119 (pn_Expresion1 -> .)
    LTE_LOG         reduce using rule 119 (pn_Expresion1 -> .)
    GTE_LOG         reduce using rule 119 (pn_Expresion1 -> .)
    NE_LOG          reduce using rule 119 (pn_Expresion1 -> .)
    EQUAL_LOG       reduce using rule 119 (pn_Expresion1 -> .)
    AND_LOG         reduce using rule 119 (pn_Expresion1 -> .)
    OR_LOG          reduce using rule 119 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 119 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 119 (pn_Expresion1 -> .)
    SEMIC           reduce using rule 119 (pn_Expresion1 -> .)
    COMMA           reduce using rule 119 (pn_Expresion1 -> .)
    RBRACK          reduce using rule 119 (pn_Expresion1 -> .)
    HASTA           reduce using rule 119 (pn_Expresion1 -> .)
    HACER           reduce using rule 119 (pn_Expresion1 -> .)
    LPAREN          reduce using rule 111 (pn_FuncionLlamada1 -> .)

    pn_Expresion1                  shift and go to state 89
    pn_FuncionLlamada1             shift and go to state 88

state 113

    (45) num -> INT_CTE . pn_CTEInt
    (115) pn_CTEInt -> .

    MULT_OP         reduce using rule 115 (pn_CTEInt -> .)
    DIV_OP          reduce using rule 115 (pn_CTEInt -> .)
    PLUS_OP         reduce using rule 115 (pn_CTEInt -> .)
    MINUS_OP        reduce using rule 115 (pn_CTEInt -> .)
    LT_LOG          reduce using rule 115 (pn_CTEInt -> .)
    GT_LOG          reduce using rule 115 (pn_CTEInt -> .)
    LTE_LOG         reduce using rule 115 (pn_CTEInt -> .)
    GTE_LOG         reduce using rule 115 (pn_CTEInt -> .)
    NE_LOG          reduce using rule 115 (pn_CTEInt -> .)
    EQUAL_LOG       reduce using rule 115 (pn_CTEInt -> .)
    AND_LOG         reduce using rule 115 (pn_CTEInt -> .)
    OR_LOG          reduce using rule 115 (pn_CTEInt -> .)
    ASSIGN          reduce using rule 115 (pn_CTEInt -> .)
    RPAREN          reduce using rule 115 (pn_CTEInt -> .)
    SEMIC           reduce using rule 115 (pn_CTEInt -> .)
    COMMA           reduce using rule 115 (pn_CTEInt -> .)
    RBRACK          reduce using rule 115 (pn_CTEInt -> .)
    HASTA           reduce using rule 115 (pn_CTEInt -> .)
    HACER           reduce using rule 115 (pn_CTEInt -> .)

    pn_CTEInt                      shift and go to state 156

state 114

    (46) num -> FLOAT_CTE . pn_CTEFloat
    (116) pn_CTEFloat -> .

    MULT_OP         reduce using rule 116 (pn_CTEFloat -> .)
    DIV_OP          reduce using rule 116 (pn_CTEFloat -> .)
    PLUS_OP         reduce using rule 116 (pn_CTEFloat -> .)
    MINUS_OP        reduce using rule 116 (pn_CTEFloat -> .)
    LT_LOG          reduce using rule 116 (pn_CTEFloat -> .)
    GT_LOG          reduce using rule 116 (pn_CTEFloat -> .)
    LTE_LOG         reduce using rule 116 (pn_CTEFloat -> .)
    GTE_LOG         reduce using rule 116 (pn_CTEFloat -> .)
    NE_LOG          reduce using rule 116 (pn_CTEFloat -> .)
    EQUAL_LOG       reduce using rule 116 (pn_CTEFloat -> .)
    AND_LOG         reduce using rule 116 (pn_CTEFloat -> .)
    OR_LOG          reduce using rule 116 (pn_CTEFloat -> .)
    ASSIGN          reduce using rule 116 (pn_CTEFloat -> .)
    RPAREN          reduce using rule 116 (pn_CTEFloat -> .)
    SEMIC           reduce using rule 116 (pn_CTEFloat -> .)
    COMMA           reduce using rule 116 (pn_CTEFloat -> .)
    RBRACK          reduce using rule 116 (pn_CTEFloat -> .)
    HASTA           reduce using rule 116 (pn_CTEFloat -> .)
    HACER           reduce using rule 116 (pn_CTEFloat -> .)

    pn_CTEFloat                    shift and go to state 157

state 115

    (67) regresa -> REGRESA pn_Secuencial3 LPAREN . exp RPAREN pn_Regresa SEMIC
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    exp                            shift and go to state 158
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 116

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN . expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (73) expresion -> . mega_exp expresion1
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    expresion                      shift and go to state 159
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 117

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable . ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    ASSIGN          shift and go to state 160


state 118

    (47) variable -> ID . pn_Expresion1 varDim
    (119) pn_Expresion1 -> .

    LBRACK          reduce using rule 119 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 119 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 89

state 119

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN . pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN . pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (124) pn_Expresion6 -> .

    LPAREN          reduce using rule 124 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 124 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 124 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 124 (pn_Expresion6 -> .)
    ID              reduce using rule 124 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 124 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 124 (pn_Expresion6 -> .)
    RPAREN          reduce using rule 124 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 161

state 120

    (47) variable -> ID pn_Expresion1 varDim .

    ASSIGN          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    MULT_OP         reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    DIV_OP          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    PLUS_OP         reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    MINUS_OP        reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    LT_LOG          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    GT_LOG          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    LTE_LOG         reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    GTE_LOG         reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    NE_LOG          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    EQUAL_LOG       reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    AND_LOG         reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    OR_LOG          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    RPAREN          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    SEMIC           reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    COMMA           reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    RBRACK          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    HASTA           reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    HACER           reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)


state 121

    (48) varDim -> LBRACK . expresion varDim2 RBRACK
    (73) expresion -> . mega_exp expresion1
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    expresion                      shift and go to state 162
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 122

    (49) varDim -> empty .

    ASSIGN          reduce using rule 49 (varDim -> empty .)
    MULT_OP         reduce using rule 49 (varDim -> empty .)
    DIV_OP          reduce using rule 49 (varDim -> empty .)
    PLUS_OP         reduce using rule 49 (varDim -> empty .)
    MINUS_OP        reduce using rule 49 (varDim -> empty .)
    LT_LOG          reduce using rule 49 (varDim -> empty .)
    GT_LOG          reduce using rule 49 (varDim -> empty .)
    LTE_LOG         reduce using rule 49 (varDim -> empty .)
    GTE_LOG         reduce using rule 49 (varDim -> empty .)
    NE_LOG          reduce using rule 49 (varDim -> empty .)
    EQUAL_LOG       reduce using rule 49 (varDim -> empty .)
    AND_LOG         reduce using rule 49 (varDim -> empty .)
    OR_LOG          reduce using rule 49 (varDim -> empty .)
    RPAREN          reduce using rule 49 (varDim -> empty .)
    SEMIC           reduce using rule 49 (varDim -> empty .)
    COMMA           reduce using rule 49 (varDim -> empty .)
    RBRACK          reduce using rule 49 (varDim -> empty .)
    HASTA           reduce using rule 49 (varDim -> empty .)
    HACER           reduce using rule 49 (varDim -> empty .)


state 123

    (68) escritura -> ESCRIBE pn_Secuencial3 LPAREN . escritura2 RPAREN SEMIC pn_Secuencial5
    (69) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (70) escritura2 -> . expresion pn_Secuencial4 escritura3
    (73) expresion -> . mega_exp expresion1
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 164
    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    escritura2                     shift and go to state 163
    expresion                      shift and go to state 165
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 124

    (60) lectura -> LEE pn_Secuencial3 LPAREN . varLectura RPAREN SEMIC pn_Secuencial5
    (57) varLectura -> . ID pn_Expresion1 varDim varLectura2

    ID              shift and go to state 167

    varLectura                     shift and go to state 166

state 125

    (20) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables . bloque pn_Funcion3
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 168

state 126

    (25) lista_parametros -> tipo ID pn_Funcion1 lista_parametros2 .

    RPAREN          reduce using rule 25 (lista_parametros -> tipo ID pn_Funcion1 lista_parametros2 .)


state 127

    (26) lista_parametros2 -> COMMA . lista_parametros
    (25) lista_parametros -> . tipo ID pn_Funcion1 lista_parametros2
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    lista_parametros               shift and go to state 169
    tipo                           shift and go to state 56

state 128

    (27) lista_parametros2 -> empty .

    RPAREN          reduce using rule 27 (lista_parametros2 -> empty .)


state 129

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .

    COMMA           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .)
    SEMIC           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .)


state 130

    (13) DecVarDim3 -> COMMA INT_CTE .

    RBRACK          reduce using rule 13 (DecVarDim3 -> COMMA INT_CTE .)


state 131

    (40) asignacion -> variable ASSIGN pn_Secuencial1 expresion . SEMIC pn_Secuencial2

    SEMIC           shift and go to state 170


state 132

    (101) factor -> LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    exp                            shift and go to state 171
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 133

    (52) condicion -> SI LPAREN expresion RPAREN . pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (136) pn_Condicion1 -> .

    ENTONCES        reduce using rule 136 (pn_Condicion1 -> .)

    pn_Condicion1                  shift and go to state 172

state 134

    (73) expresion -> mega_exp expresion1 .

    RPAREN          reduce using rule 73 (expresion -> mega_exp expresion1 .)
    SEMIC           reduce using rule 73 (expresion -> mega_exp expresion1 .)
    COMMA           reduce using rule 73 (expresion -> mega_exp expresion1 .)
    RBRACK          reduce using rule 73 (expresion -> mega_exp expresion1 .)
    HASTA           reduce using rule 73 (expresion -> mega_exp expresion1 .)
    HACER           reduce using rule 73 (expresion -> mega_exp expresion1 .)


state 135

    (74) expresion1 -> ASSIGN . expresion
    (73) expresion -> . mega_exp expresion1
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    expresion                      shift and go to state 173
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 136

    (75) expresion1 -> empty .

    RPAREN          reduce using rule 75 (expresion1 -> empty .)
    SEMIC           reduce using rule 75 (expresion1 -> empty .)
    COMMA           reduce using rule 75 (expresion1 -> empty .)
    RBRACK          reduce using rule 75 (expresion1 -> empty .)
    HASTA           reduce using rule 75 (expresion1 -> empty .)
    HACER           reduce using rule 75 (expresion1 -> empty .)


state 137

    (76) mega_exp -> super_exp meg .

    ASSIGN          reduce using rule 76 (mega_exp -> super_exp meg .)
    RPAREN          reduce using rule 76 (mega_exp -> super_exp meg .)
    SEMIC           reduce using rule 76 (mega_exp -> super_exp meg .)
    COMMA           reduce using rule 76 (mega_exp -> super_exp meg .)
    RBRACK          reduce using rule 76 (mega_exp -> super_exp meg .)
    HASTA           reduce using rule 76 (mega_exp -> super_exp meg .)
    HACER           reduce using rule 76 (mega_exp -> super_exp meg .)


state 138

    (77) meg -> op_l . pn_Expresion10 mega_exp pn_Expresion11
    (128) pn_Expresion10 -> .

    LPAREN          reduce using rule 128 (pn_Expresion10 -> .)
    CHAR_CTE        reduce using rule 128 (pn_Expresion10 -> .)
    STRING_CTE      reduce using rule 128 (pn_Expresion10 -> .)
    MINUS_OP        reduce using rule 128 (pn_Expresion10 -> .)
    ID              reduce using rule 128 (pn_Expresion10 -> .)
    INT_CTE         reduce using rule 128 (pn_Expresion10 -> .)
    FLOAT_CTE       reduce using rule 128 (pn_Expresion10 -> .)

    pn_Expresion10                 shift and go to state 174

state 139

    (78) meg -> empty .

    ASSIGN          reduce using rule 78 (meg -> empty .)
    RPAREN          reduce using rule 78 (meg -> empty .)
    SEMIC           reduce using rule 78 (meg -> empty .)
    COMMA           reduce using rule 78 (meg -> empty .)
    RBRACK          reduce using rule 78 (meg -> empty .)
    HASTA           reduce using rule 78 (meg -> empty .)
    HACER           reduce using rule 78 (meg -> empty .)


state 140

    (79) op_l -> AND_LOG .

    LPAREN          reduce using rule 79 (op_l -> AND_LOG .)
    CHAR_CTE        reduce using rule 79 (op_l -> AND_LOG .)
    STRING_CTE      reduce using rule 79 (op_l -> AND_LOG .)
    MINUS_OP        reduce using rule 79 (op_l -> AND_LOG .)
    ID              reduce using rule 79 (op_l -> AND_LOG .)
    INT_CTE         reduce using rule 79 (op_l -> AND_LOG .)
    FLOAT_CTE       reduce using rule 79 (op_l -> AND_LOG .)


state 141

    (80) op_l -> OR_LOG .

    LPAREN          reduce using rule 80 (op_l -> OR_LOG .)
    CHAR_CTE        reduce using rule 80 (op_l -> OR_LOG .)
    STRING_CTE      reduce using rule 80 (op_l -> OR_LOG .)
    MINUS_OP        reduce using rule 80 (op_l -> OR_LOG .)
    ID              reduce using rule 80 (op_l -> OR_LOG .)
    INT_CTE         reduce using rule 80 (op_l -> OR_LOG .)
    FLOAT_CTE       reduce using rule 80 (op_l -> OR_LOG .)


state 142

    (81) super_exp -> exp sp .

    AND_LOG         reduce using rule 81 (super_exp -> exp sp .)
    OR_LOG          reduce using rule 81 (super_exp -> exp sp .)
    ASSIGN          reduce using rule 81 (super_exp -> exp sp .)
    RPAREN          reduce using rule 81 (super_exp -> exp sp .)
    SEMIC           reduce using rule 81 (super_exp -> exp sp .)
    COMMA           reduce using rule 81 (super_exp -> exp sp .)
    RBRACK          reduce using rule 81 (super_exp -> exp sp .)
    HASTA           reduce using rule 81 (super_exp -> exp sp .)
    HACER           reduce using rule 81 (super_exp -> exp sp .)


state 143

    (82) sp -> op_r . exp pn_Expresion9
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    exp                            shift and go to state 175
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 144

    (83) sp -> empty .

    AND_LOG         reduce using rule 83 (sp -> empty .)
    OR_LOG          reduce using rule 83 (sp -> empty .)
    ASSIGN          reduce using rule 83 (sp -> empty .)
    RPAREN          reduce using rule 83 (sp -> empty .)
    SEMIC           reduce using rule 83 (sp -> empty .)
    COMMA           reduce using rule 83 (sp -> empty .)
    RBRACK          reduce using rule 83 (sp -> empty .)
    HASTA           reduce using rule 83 (sp -> empty .)
    HACER           reduce using rule 83 (sp -> empty .)


state 145

    (84) op_r -> LT_LOG . pn_Expresion8
    (126) pn_Expresion8 -> .

    LPAREN          reduce using rule 126 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 126 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 126 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 126 (pn_Expresion8 -> .)
    ID              reduce using rule 126 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 126 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 126 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 176

state 146

    (85) op_r -> GT_LOG . pn_Expresion8
    (126) pn_Expresion8 -> .

    LPAREN          reduce using rule 126 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 126 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 126 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 126 (pn_Expresion8 -> .)
    ID              reduce using rule 126 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 126 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 126 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 177

state 147

    (86) op_r -> LTE_LOG . pn_Expresion8
    (126) pn_Expresion8 -> .

    LPAREN          reduce using rule 126 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 126 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 126 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 126 (pn_Expresion8 -> .)
    ID              reduce using rule 126 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 126 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 126 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 178

state 148

    (87) op_r -> GTE_LOG . pn_Expresion8
    (126) pn_Expresion8 -> .

    LPAREN          reduce using rule 126 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 126 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 126 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 126 (pn_Expresion8 -> .)
    ID              reduce using rule 126 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 126 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 126 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 179

state 149

    (88) op_r -> NE_LOG . pn_Expresion8
    (126) pn_Expresion8 -> .

    LPAREN          reduce using rule 126 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 126 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 126 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 126 (pn_Expresion8 -> .)
    ID              reduce using rule 126 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 126 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 126 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 180

state 150

    (89) op_r -> EQUAL_LOG . pn_Expresion8
    (126) pn_Expresion8 -> .

    LPAREN          reduce using rule 126 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 126 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 126 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 126 (pn_Expresion8 -> .)
    ID              reduce using rule 126 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 126 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 126 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 181

state 151

    (90) exp -> termino pn_Expresion4 . exp1
    (91) exp1 -> . op_a exp
    (92) exp1 -> . empty
    (93) op_a -> . PLUS_OP pn_Expresion2
    (94) op_a -> . MINUS_OP pn_Expresion2
    (104) empty -> .

    PLUS_OP         shift and go to state 185
    MINUS_OP        shift and go to state 186
    LT_LOG          reduce using rule 104 (empty -> .)
    GT_LOG          reduce using rule 104 (empty -> .)
    LTE_LOG         reduce using rule 104 (empty -> .)
    GTE_LOG         reduce using rule 104 (empty -> .)
    NE_LOG          reduce using rule 104 (empty -> .)
    EQUAL_LOG       reduce using rule 104 (empty -> .)
    AND_LOG         reduce using rule 104 (empty -> .)
    OR_LOG          reduce using rule 104 (empty -> .)
    ASSIGN          reduce using rule 104 (empty -> .)
    RPAREN          reduce using rule 104 (empty -> .)
    SEMIC           reduce using rule 104 (empty -> .)
    COMMA           reduce using rule 104 (empty -> .)
    RBRACK          reduce using rule 104 (empty -> .)
    HASTA           reduce using rule 104 (empty -> .)
    HACER           reduce using rule 104 (empty -> .)

    exp1                           shift and go to state 182
    op_a                           shift and go to state 183
    empty                          shift and go to state 184

state 152

    (95) termino -> factor pn_Expresion5 . term
    (96) term -> . op_a1 termino
    (97) term -> . empty
    (98) op_a1 -> . MULT_OP pn_Expresion3
    (99) op_a1 -> . DIV_OP pn_Expresion3
    (104) empty -> .

    MULT_OP         shift and go to state 190
    DIV_OP          shift and go to state 191
    PLUS_OP         reduce using rule 104 (empty -> .)
    MINUS_OP        reduce using rule 104 (empty -> .)
    LT_LOG          reduce using rule 104 (empty -> .)
    GT_LOG          reduce using rule 104 (empty -> .)
    LTE_LOG         reduce using rule 104 (empty -> .)
    GTE_LOG         reduce using rule 104 (empty -> .)
    NE_LOG          reduce using rule 104 (empty -> .)
    EQUAL_LOG       reduce using rule 104 (empty -> .)
    AND_LOG         reduce using rule 104 (empty -> .)
    OR_LOG          reduce using rule 104 (empty -> .)
    ASSIGN          reduce using rule 104 (empty -> .)
    RPAREN          reduce using rule 104 (empty -> .)
    SEMIC           reduce using rule 104 (empty -> .)
    COMMA           reduce using rule 104 (empty -> .)
    RBRACK          reduce using rule 104 (empty -> .)
    HASTA           reduce using rule 104 (empty -> .)
    HACER           reduce using rule 104 (empty -> .)

    term                           shift and go to state 187
    op_a1                          shift and go to state 188
    empty                          shift and go to state 189

state 153

    (41) ctes -> CHAR_CTE pn_CTEChar .

    MULT_OP         reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    DIV_OP          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    PLUS_OP         reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    MINUS_OP        reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    LT_LOG          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    GT_LOG          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    LTE_LOG         reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    GTE_LOG         reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    NE_LOG          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    EQUAL_LOG       reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    AND_LOG         reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    OR_LOG          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    ASSIGN          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    RPAREN          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    SEMIC           reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    COMMA           reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    RBRACK          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    HASTA           reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    HACER           reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)


state 154

    (42) ctes -> STRING_CTE pn_CTEString .

    MULT_OP         reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    DIV_OP          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    PLUS_OP         reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    MINUS_OP        reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    LT_LOG          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    GT_LOG          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    LTE_LOG         reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    GTE_LOG         reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    NE_LOG          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    EQUAL_LOG       reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    AND_LOG         reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    OR_LOG          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    ASSIGN          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    RPAREN          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    SEMIC           reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    COMMA           reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    RBRACK          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    HASTA           reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    HACER           reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)


state 155

    (43) ctes -> MINUS_OP pn_CTENeg . num
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    num                            shift and go to state 192

state 156

    (45) num -> INT_CTE pn_CTEInt .

    MULT_OP         reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    DIV_OP          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    PLUS_OP         reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    MINUS_OP        reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    LT_LOG          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    GT_LOG          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    LTE_LOG         reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    GTE_LOG         reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    NE_LOG          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    EQUAL_LOG       reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    AND_LOG         reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    OR_LOG          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    ASSIGN          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    RPAREN          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    SEMIC           reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    COMMA           reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    RBRACK          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    HASTA           reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    HACER           reduce using rule 45 (num -> INT_CTE pn_CTEInt .)


state 157

    (46) num -> FLOAT_CTE pn_CTEFloat .

    MULT_OP         reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    DIV_OP          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    PLUS_OP         reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    MINUS_OP        reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    LT_LOG          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    GT_LOG          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    LTE_LOG         reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    GTE_LOG         reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    NE_LOG          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    EQUAL_LOG       reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    AND_LOG         reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    OR_LOG          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    ASSIGN          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    RPAREN          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    SEMIC           reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    COMMA           reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    RBRACK          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    HASTA           reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    HACER           reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)


state 158

    (67) regresa -> REGRESA pn_Secuencial3 LPAREN exp . RPAREN pn_Regresa SEMIC

    RPAREN          shift and go to state 193


state 159

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion . RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    RPAREN          shift and go to state 194


state 160

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN . pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (130) pn_Secuencial1 -> .

    LPAREN          reduce using rule 130 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 130 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 130 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 130 (pn_Secuencial1 -> .)
    ID              reduce using rule 130 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 130 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 130 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 195

state 161

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 . llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 . llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (61) llamada_param -> . expresion pn_FuncionLlamada2 llamada_param2
    (62) llamada_param -> . empty
    (73) expresion -> . mega_exp expresion1
    (104) empty -> .
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    RPAREN          reduce using rule 104 (empty -> .)
    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    llamada_param                  shift and go to state 196
    expresion                      shift and go to state 197
    empty                          shift and go to state 198
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 162

    (48) varDim -> LBRACK expresion . varDim2 RBRACK
    (50) varDim2 -> . COMMA expresion
    (51) varDim2 -> . empty
    (104) empty -> .

    COMMA           shift and go to state 200
    RBRACK          reduce using rule 104 (empty -> .)

    varDim2                        shift and go to state 199
    empty                          shift and go to state 201

state 163

    (68) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 202


state 164

    (69) escritura2 -> STRING_CTE . pn_Secuencial4 escritura3
    (42) ctes -> STRING_CTE . pn_CTEString
    (133) pn_Secuencial4 -> .
    (118) pn_CTEString -> .

  ! reduce/reduce conflict for COMMA resolved using rule 118 (pn_CTEString -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 118 (pn_CTEString -> .)
    MULT_OP         reduce using rule 118 (pn_CTEString -> .)
    DIV_OP          reduce using rule 118 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 118 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 118 (pn_CTEString -> .)
    LT_LOG          reduce using rule 118 (pn_CTEString -> .)
    GT_LOG          reduce using rule 118 (pn_CTEString -> .)
    LTE_LOG         reduce using rule 118 (pn_CTEString -> .)
    GTE_LOG         reduce using rule 118 (pn_CTEString -> .)
    NE_LOG          reduce using rule 118 (pn_CTEString -> .)
    EQUAL_LOG       reduce using rule 118 (pn_CTEString -> .)
    AND_LOG         reduce using rule 118 (pn_CTEString -> .)
    OR_LOG          reduce using rule 118 (pn_CTEString -> .)
    ASSIGN          reduce using rule 118 (pn_CTEString -> .)
    COMMA           reduce using rule 118 (pn_CTEString -> .)
    RPAREN          reduce using rule 118 (pn_CTEString -> .)

  ! COMMA           [ reduce using rule 133 (pn_Secuencial4 -> .) ]
  ! RPAREN          [ reduce using rule 133 (pn_Secuencial4 -> .) ]

    pn_Secuencial4                 shift and go to state 203
    pn_CTEString                   shift and go to state 154

state 165

    (70) escritura2 -> expresion . pn_Secuencial4 escritura3
    (133) pn_Secuencial4 -> .

    COMMA           reduce using rule 133 (pn_Secuencial4 -> .)
    RPAREN          reduce using rule 133 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 204

state 166

    (60) lectura -> LEE pn_Secuencial3 LPAREN varLectura . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 205


state 167

    (57) varLectura -> ID . pn_Expresion1 varDim varLectura2
    (119) pn_Expresion1 -> .

    LBRACK          reduce using rule 119 (pn_Expresion1 -> .)
    COMMA           reduce using rule 119 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 119 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 206

state 168

    (20) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque . pn_Funcion3
    (110) pn_Funcion3 -> .

    FUNCION         reduce using rule 110 (pn_Funcion3 -> .)
    PRINCIPAL       reduce using rule 110 (pn_Funcion3 -> .)

    pn_Funcion3                    shift and go to state 207

state 169

    (26) lista_parametros2 -> COMMA lista_parametros .

    RPAREN          reduce using rule 26 (lista_parametros2 -> COMMA lista_parametros .)


state 170

    (40) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC . pn_Secuencial2
    (131) pn_Secuencial2 -> .

    SI              reduce using rule 131 (pn_Secuencial2 -> .)
    REGRESA         reduce using rule 131 (pn_Secuencial2 -> .)
    MIENTRAS        reduce using rule 131 (pn_Secuencial2 -> .)
    DESDE           reduce using rule 131 (pn_Secuencial2 -> .)
    ID              reduce using rule 131 (pn_Secuencial2 -> .)
    ESCRIBE         reduce using rule 131 (pn_Secuencial2 -> .)
    LEE             reduce using rule 131 (pn_Secuencial2 -> .)
    RCURLY          reduce using rule 131 (pn_Secuencial2 -> .)

    pn_Secuencial2                 shift and go to state 208

state 171

    (101) factor -> LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7

    RPAREN          shift and go to state 209


state 172

    (52) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 . ENTONCES bloque else pn_Condicion2

    ENTONCES        shift and go to state 210


state 173

    (74) expresion1 -> ASSIGN expresion .

    RPAREN          reduce using rule 74 (expresion1 -> ASSIGN expresion .)
    SEMIC           reduce using rule 74 (expresion1 -> ASSIGN expresion .)
    COMMA           reduce using rule 74 (expresion1 -> ASSIGN expresion .)
    RBRACK          reduce using rule 74 (expresion1 -> ASSIGN expresion .)
    HASTA           reduce using rule 74 (expresion1 -> ASSIGN expresion .)
    HACER           reduce using rule 74 (expresion1 -> ASSIGN expresion .)


state 174

    (77) meg -> op_l pn_Expresion10 . mega_exp pn_Expresion11
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    mega_exp                       shift and go to state 211
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 175

    (82) sp -> op_r exp . pn_Expresion9
    (127) pn_Expresion9 -> .

    AND_LOG         reduce using rule 127 (pn_Expresion9 -> .)
    OR_LOG          reduce using rule 127 (pn_Expresion9 -> .)
    ASSIGN          reduce using rule 127 (pn_Expresion9 -> .)
    RPAREN          reduce using rule 127 (pn_Expresion9 -> .)
    SEMIC           reduce using rule 127 (pn_Expresion9 -> .)
    COMMA           reduce using rule 127 (pn_Expresion9 -> .)
    RBRACK          reduce using rule 127 (pn_Expresion9 -> .)
    HASTA           reduce using rule 127 (pn_Expresion9 -> .)
    HACER           reduce using rule 127 (pn_Expresion9 -> .)

    pn_Expresion9                  shift and go to state 212

state 176

    (84) op_r -> LT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 84 (op_r -> LT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 84 (op_r -> LT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 84 (op_r -> LT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 84 (op_r -> LT_LOG pn_Expresion8 .)
    ID              reduce using rule 84 (op_r -> LT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 84 (op_r -> LT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 84 (op_r -> LT_LOG pn_Expresion8 .)


state 177

    (85) op_r -> GT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 85 (op_r -> GT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 85 (op_r -> GT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 85 (op_r -> GT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 85 (op_r -> GT_LOG pn_Expresion8 .)
    ID              reduce using rule 85 (op_r -> GT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 85 (op_r -> GT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 85 (op_r -> GT_LOG pn_Expresion8 .)


state 178

    (86) op_r -> LTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 86 (op_r -> LTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 86 (op_r -> LTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 86 (op_r -> LTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 86 (op_r -> LTE_LOG pn_Expresion8 .)
    ID              reduce using rule 86 (op_r -> LTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 86 (op_r -> LTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 86 (op_r -> LTE_LOG pn_Expresion8 .)


state 179

    (87) op_r -> GTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 87 (op_r -> GTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 87 (op_r -> GTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 87 (op_r -> GTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 87 (op_r -> GTE_LOG pn_Expresion8 .)
    ID              reduce using rule 87 (op_r -> GTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 87 (op_r -> GTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 87 (op_r -> GTE_LOG pn_Expresion8 .)


state 180

    (88) op_r -> NE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 88 (op_r -> NE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 88 (op_r -> NE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 88 (op_r -> NE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 88 (op_r -> NE_LOG pn_Expresion8 .)
    ID              reduce using rule 88 (op_r -> NE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 88 (op_r -> NE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 88 (op_r -> NE_LOG pn_Expresion8 .)


state 181

    (89) op_r -> EQUAL_LOG pn_Expresion8 .

    LPAREN          reduce using rule 89 (op_r -> EQUAL_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 89 (op_r -> EQUAL_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 89 (op_r -> EQUAL_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 89 (op_r -> EQUAL_LOG pn_Expresion8 .)
    ID              reduce using rule 89 (op_r -> EQUAL_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 89 (op_r -> EQUAL_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 89 (op_r -> EQUAL_LOG pn_Expresion8 .)


state 182

    (90) exp -> termino pn_Expresion4 exp1 .

    LT_LOG          reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    GT_LOG          reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    LTE_LOG         reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    GTE_LOG         reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    NE_LOG          reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    EQUAL_LOG       reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    AND_LOG         reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    OR_LOG          reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    ASSIGN          reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    RPAREN          reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    SEMIC           reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    COMMA           reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    RBRACK          reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    HASTA           reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)
    HACER           reduce using rule 90 (exp -> termino pn_Expresion4 exp1 .)


state 183

    (91) exp1 -> op_a . exp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    exp                            shift and go to state 213
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 184

    (92) exp1 -> empty .

    LT_LOG          reduce using rule 92 (exp1 -> empty .)
    GT_LOG          reduce using rule 92 (exp1 -> empty .)
    LTE_LOG         reduce using rule 92 (exp1 -> empty .)
    GTE_LOG         reduce using rule 92 (exp1 -> empty .)
    NE_LOG          reduce using rule 92 (exp1 -> empty .)
    EQUAL_LOG       reduce using rule 92 (exp1 -> empty .)
    AND_LOG         reduce using rule 92 (exp1 -> empty .)
    OR_LOG          reduce using rule 92 (exp1 -> empty .)
    ASSIGN          reduce using rule 92 (exp1 -> empty .)
    RPAREN          reduce using rule 92 (exp1 -> empty .)
    SEMIC           reduce using rule 92 (exp1 -> empty .)
    COMMA           reduce using rule 92 (exp1 -> empty .)
    RBRACK          reduce using rule 92 (exp1 -> empty .)
    HASTA           reduce using rule 92 (exp1 -> empty .)
    HACER           reduce using rule 92 (exp1 -> empty .)


state 185

    (93) op_a -> PLUS_OP . pn_Expresion2
    (120) pn_Expresion2 -> .

    LPAREN          reduce using rule 120 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 120 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 120 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 120 (pn_Expresion2 -> .)
    ID              reduce using rule 120 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 120 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 120 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 214

state 186

    (94) op_a -> MINUS_OP . pn_Expresion2
    (120) pn_Expresion2 -> .

    LPAREN          reduce using rule 120 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 120 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 120 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 120 (pn_Expresion2 -> .)
    ID              reduce using rule 120 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 120 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 120 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 215

state 187

    (95) termino -> factor pn_Expresion5 term .

    PLUS_OP         reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    MINUS_OP        reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    LT_LOG          reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    GT_LOG          reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    LTE_LOG         reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    GTE_LOG         reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    NE_LOG          reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    EQUAL_LOG       reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    AND_LOG         reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    OR_LOG          reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    ASSIGN          reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    RPAREN          reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    SEMIC           reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    COMMA           reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    RBRACK          reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    HASTA           reduce using rule 95 (termino -> factor pn_Expresion5 term .)
    HACER           reduce using rule 95 (termino -> factor pn_Expresion5 term .)


state 188

    (96) term -> op_a1 . termino
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    termino                        shift and go to state 216
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 189

    (97) term -> empty .

    PLUS_OP         reduce using rule 97 (term -> empty .)
    MINUS_OP        reduce using rule 97 (term -> empty .)
    LT_LOG          reduce using rule 97 (term -> empty .)
    GT_LOG          reduce using rule 97 (term -> empty .)
    LTE_LOG         reduce using rule 97 (term -> empty .)
    GTE_LOG         reduce using rule 97 (term -> empty .)
    NE_LOG          reduce using rule 97 (term -> empty .)
    EQUAL_LOG       reduce using rule 97 (term -> empty .)
    AND_LOG         reduce using rule 97 (term -> empty .)
    OR_LOG          reduce using rule 97 (term -> empty .)
    ASSIGN          reduce using rule 97 (term -> empty .)
    RPAREN          reduce using rule 97 (term -> empty .)
    SEMIC           reduce using rule 97 (term -> empty .)
    COMMA           reduce using rule 97 (term -> empty .)
    RBRACK          reduce using rule 97 (term -> empty .)
    HASTA           reduce using rule 97 (term -> empty .)
    HACER           reduce using rule 97 (term -> empty .)


state 190

    (98) op_a1 -> MULT_OP . pn_Expresion3
    (121) pn_Expresion3 -> .

    LPAREN          reduce using rule 121 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 121 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 121 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 121 (pn_Expresion3 -> .)
    ID              reduce using rule 121 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 121 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 121 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 217

state 191

    (99) op_a1 -> DIV_OP . pn_Expresion3
    (121) pn_Expresion3 -> .

    LPAREN          reduce using rule 121 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 121 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 121 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 121 (pn_Expresion3 -> .)
    ID              reduce using rule 121 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 121 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 121 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 218

state 192

    (43) ctes -> MINUS_OP pn_CTENeg num .

    MULT_OP         reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    DIV_OP          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    PLUS_OP         reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    MINUS_OP        reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    LT_LOG          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    GT_LOG          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    LTE_LOG         reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    GTE_LOG         reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    NE_LOG          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    EQUAL_LOG       reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    AND_LOG         reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    OR_LOG          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    ASSIGN          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    RPAREN          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    SEMIC           reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    COMMA           reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    RBRACK          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    HASTA           reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    HACER           reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)


state 193

    (67) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN . pn_Regresa SEMIC
    (135) pn_Regresa -> .

    SEMIC           reduce using rule 135 (pn_Regresa -> .)

    pn_Regresa                     shift and go to state 219

state 194

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN . pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (140) pn_loop_condicional2 -> .

    HACER           reduce using rule 140 (pn_loop_condicional2 -> .)

    pn_loop_condicional2           shift and go to state 220

state 195

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 . expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (73) expresion -> . mega_exp expresion1
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    variable                       shift and go to state 106
    expresion                      shift and go to state 221
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 196

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param . RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param . RPAREN pn_Expresion7 pn_FuncionLlamada3

    RPAREN          shift and go to state 222


state 197

    (61) llamada_param -> expresion . pn_FuncionLlamada2 llamada_param2
    (112) pn_FuncionLlamada2 -> .

    COMMA           reduce using rule 112 (pn_FuncionLlamada2 -> .)
    RPAREN          reduce using rule 112 (pn_FuncionLlamada2 -> .)

    pn_FuncionLlamada2             shift and go to state 223

state 198

    (62) llamada_param -> empty .

    RPAREN          reduce using rule 62 (llamada_param -> empty .)


state 199

    (48) varDim -> LBRACK expresion varDim2 . RBRACK

    RBRACK          shift and go to state 224


state 200

    (50) varDim2 -> COMMA . expresion
    (73) expresion -> . mega_exp expresion1
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    expresion                      shift and go to state 225
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 201

    (51) varDim2 -> empty .

    RBRACK          reduce using rule 51 (varDim2 -> empty .)


state 202

    (68) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 226


state 203

    (69) escritura2 -> STRING_CTE pn_Secuencial4 . escritura3
    (71) escritura3 -> . COMMA escritura2
    (72) escritura3 -> . empty
    (104) empty -> .

    COMMA           shift and go to state 228
    RPAREN          reduce using rule 104 (empty -> .)

    escritura3                     shift and go to state 227
    empty                          shift and go to state 229

state 204

    (70) escritura2 -> expresion pn_Secuencial4 . escritura3
    (71) escritura3 -> . COMMA escritura2
    (72) escritura3 -> . empty
    (104) empty -> .

    COMMA           shift and go to state 228
    RPAREN          reduce using rule 104 (empty -> .)

    escritura3                     shift and go to state 230
    empty                          shift and go to state 229

state 205

    (60) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 231


state 206

    (57) varLectura -> ID pn_Expresion1 . varDim varLectura2
    (48) varDim -> . LBRACK expresion varDim2 RBRACK
    (49) varDim -> . empty
    (104) empty -> .

    LBRACK          shift and go to state 121
    COMMA           reduce using rule 104 (empty -> .)
    RPAREN          reduce using rule 104 (empty -> .)

    varDim                         shift and go to state 232
    empty                          shift and go to state 122

state 207

    (20) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .

    FUNCION         reduce using rule 20 (dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)
    PRINCIPAL       reduce using rule 20 (dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)


state 208

    (40) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .

    SI              reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    REGRESA         reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    MIENTRAS        reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    DESDE           reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ID              reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ESCRIBE         reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    LEE             reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    RCURLY          reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)


state 209

    (101) factor -> LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7
    (125) pn_Expresion7 -> .

    MULT_OP         reduce using rule 125 (pn_Expresion7 -> .)
    DIV_OP          reduce using rule 125 (pn_Expresion7 -> .)
    PLUS_OP         reduce using rule 125 (pn_Expresion7 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion7 -> .)
    LT_LOG          reduce using rule 125 (pn_Expresion7 -> .)
    GT_LOG          reduce using rule 125 (pn_Expresion7 -> .)
    LTE_LOG         reduce using rule 125 (pn_Expresion7 -> .)
    GTE_LOG         reduce using rule 125 (pn_Expresion7 -> .)
    NE_LOG          reduce using rule 125 (pn_Expresion7 -> .)
    EQUAL_LOG       reduce using rule 125 (pn_Expresion7 -> .)
    AND_LOG         reduce using rule 125 (pn_Expresion7 -> .)
    OR_LOG          reduce using rule 125 (pn_Expresion7 -> .)
    ASSIGN          reduce using rule 125 (pn_Expresion7 -> .)
    RPAREN          reduce using rule 125 (pn_Expresion7 -> .)
    SEMIC           reduce using rule 125 (pn_Expresion7 -> .)
    COMMA           reduce using rule 125 (pn_Expresion7 -> .)
    RBRACK          reduce using rule 125 (pn_Expresion7 -> .)
    HASTA           reduce using rule 125 (pn_Expresion7 -> .)
    HACER           reduce using rule 125 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 233

state 210

    (52) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES . bloque else pn_Condicion2
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 234

state 211

    (77) meg -> op_l pn_Expresion10 mega_exp . pn_Expresion11
    (129) pn_Expresion11 -> .

    ASSIGN          reduce using rule 129 (pn_Expresion11 -> .)
    RPAREN          reduce using rule 129 (pn_Expresion11 -> .)
    SEMIC           reduce using rule 129 (pn_Expresion11 -> .)
    COMMA           reduce using rule 129 (pn_Expresion11 -> .)
    RBRACK          reduce using rule 129 (pn_Expresion11 -> .)
    HASTA           reduce using rule 129 (pn_Expresion11 -> .)
    HACER           reduce using rule 129 (pn_Expresion11 -> .)

    pn_Expresion11                 shift and go to state 235

state 212

    (82) sp -> op_r exp pn_Expresion9 .

    AND_LOG         reduce using rule 82 (sp -> op_r exp pn_Expresion9 .)
    OR_LOG          reduce using rule 82 (sp -> op_r exp pn_Expresion9 .)
    ASSIGN          reduce using rule 82 (sp -> op_r exp pn_Expresion9 .)
    RPAREN          reduce using rule 82 (sp -> op_r exp pn_Expresion9 .)
    SEMIC           reduce using rule 82 (sp -> op_r exp pn_Expresion9 .)
    COMMA           reduce using rule 82 (sp -> op_r exp pn_Expresion9 .)
    RBRACK          reduce using rule 82 (sp -> op_r exp pn_Expresion9 .)
    HASTA           reduce using rule 82 (sp -> op_r exp pn_Expresion9 .)
    HACER           reduce using rule 82 (sp -> op_r exp pn_Expresion9 .)


state 213

    (91) exp1 -> op_a exp .

    LT_LOG          reduce using rule 91 (exp1 -> op_a exp .)
    GT_LOG          reduce using rule 91 (exp1 -> op_a exp .)
    LTE_LOG         reduce using rule 91 (exp1 -> op_a exp .)
    GTE_LOG         reduce using rule 91 (exp1 -> op_a exp .)
    NE_LOG          reduce using rule 91 (exp1 -> op_a exp .)
    EQUAL_LOG       reduce using rule 91 (exp1 -> op_a exp .)
    AND_LOG         reduce using rule 91 (exp1 -> op_a exp .)
    OR_LOG          reduce using rule 91 (exp1 -> op_a exp .)
    ASSIGN          reduce using rule 91 (exp1 -> op_a exp .)
    RPAREN          reduce using rule 91 (exp1 -> op_a exp .)
    SEMIC           reduce using rule 91 (exp1 -> op_a exp .)
    COMMA           reduce using rule 91 (exp1 -> op_a exp .)
    RBRACK          reduce using rule 91 (exp1 -> op_a exp .)
    HASTA           reduce using rule 91 (exp1 -> op_a exp .)
    HACER           reduce using rule 91 (exp1 -> op_a exp .)


state 214

    (93) op_a -> PLUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 93 (op_a -> PLUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 93 (op_a -> PLUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 93 (op_a -> PLUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 93 (op_a -> PLUS_OP pn_Expresion2 .)
    ID              reduce using rule 93 (op_a -> PLUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 93 (op_a -> PLUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 93 (op_a -> PLUS_OP pn_Expresion2 .)


state 215

    (94) op_a -> MINUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 94 (op_a -> MINUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 94 (op_a -> MINUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 94 (op_a -> MINUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 94 (op_a -> MINUS_OP pn_Expresion2 .)
    ID              reduce using rule 94 (op_a -> MINUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 94 (op_a -> MINUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 94 (op_a -> MINUS_OP pn_Expresion2 .)


state 216

    (96) term -> op_a1 termino .

    PLUS_OP         reduce using rule 96 (term -> op_a1 termino .)
    MINUS_OP        reduce using rule 96 (term -> op_a1 termino .)
    LT_LOG          reduce using rule 96 (term -> op_a1 termino .)
    GT_LOG          reduce using rule 96 (term -> op_a1 termino .)
    LTE_LOG         reduce using rule 96 (term -> op_a1 termino .)
    GTE_LOG         reduce using rule 96 (term -> op_a1 termino .)
    NE_LOG          reduce using rule 96 (term -> op_a1 termino .)
    EQUAL_LOG       reduce using rule 96 (term -> op_a1 termino .)
    AND_LOG         reduce using rule 96 (term -> op_a1 termino .)
    OR_LOG          reduce using rule 96 (term -> op_a1 termino .)
    ASSIGN          reduce using rule 96 (term -> op_a1 termino .)
    RPAREN          reduce using rule 96 (term -> op_a1 termino .)
    SEMIC           reduce using rule 96 (term -> op_a1 termino .)
    COMMA           reduce using rule 96 (term -> op_a1 termino .)
    RBRACK          reduce using rule 96 (term -> op_a1 termino .)
    HASTA           reduce using rule 96 (term -> op_a1 termino .)
    HACER           reduce using rule 96 (term -> op_a1 termino .)


state 217

    (98) op_a1 -> MULT_OP pn_Expresion3 .

    LPAREN          reduce using rule 98 (op_a1 -> MULT_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 98 (op_a1 -> MULT_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 98 (op_a1 -> MULT_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 98 (op_a1 -> MULT_OP pn_Expresion3 .)
    ID              reduce using rule 98 (op_a1 -> MULT_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 98 (op_a1 -> MULT_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 98 (op_a1 -> MULT_OP pn_Expresion3 .)


state 218

    (99) op_a1 -> DIV_OP pn_Expresion3 .

    LPAREN          reduce using rule 99 (op_a1 -> DIV_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 99 (op_a1 -> DIV_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 99 (op_a1 -> DIV_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 99 (op_a1 -> DIV_OP pn_Expresion3 .)
    ID              reduce using rule 99 (op_a1 -> DIV_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 99 (op_a1 -> DIV_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 99 (op_a1 -> DIV_OP pn_Expresion3 .)


state 219

    (67) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa . SEMIC

    SEMIC           shift and go to state 236


state 220

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 . HACER bloque pn_loop_condicional3

    HACER           shift and go to state 237


state 221

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion . pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (143) pn_loop_no_condicional2 -> .

    HASTA           reduce using rule 143 (pn_loop_no_condicional2 -> .)

    pn_loop_no_condicional2        shift and go to state 238

state 222

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN . pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN . pn_Expresion7 pn_FuncionLlamada3
    (125) pn_Expresion7 -> .

    SEMIC           reduce using rule 125 (pn_Expresion7 -> .)
    SI              reduce using rule 125 (pn_Expresion7 -> .)
    REGRESA         reduce using rule 125 (pn_Expresion7 -> .)
    MIENTRAS        reduce using rule 125 (pn_Expresion7 -> .)
    DESDE           reduce using rule 125 (pn_Expresion7 -> .)
    ID              reduce using rule 125 (pn_Expresion7 -> .)
    ESCRIBE         reduce using rule 125 (pn_Expresion7 -> .)
    LEE             reduce using rule 125 (pn_Expresion7 -> .)
    RCURLY          reduce using rule 125 (pn_Expresion7 -> .)
    MULT_OP         reduce using rule 125 (pn_Expresion7 -> .)
    DIV_OP          reduce using rule 125 (pn_Expresion7 -> .)
    PLUS_OP         reduce using rule 125 (pn_Expresion7 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion7 -> .)
    LT_LOG          reduce using rule 125 (pn_Expresion7 -> .)
    GT_LOG          reduce using rule 125 (pn_Expresion7 -> .)
    LTE_LOG         reduce using rule 125 (pn_Expresion7 -> .)
    GTE_LOG         reduce using rule 125 (pn_Expresion7 -> .)
    NE_LOG          reduce using rule 125 (pn_Expresion7 -> .)
    EQUAL_LOG       reduce using rule 125 (pn_Expresion7 -> .)
    AND_LOG         reduce using rule 125 (pn_Expresion7 -> .)
    OR_LOG          reduce using rule 125 (pn_Expresion7 -> .)
    ASSIGN          reduce using rule 125 (pn_Expresion7 -> .)
    RPAREN          reduce using rule 125 (pn_Expresion7 -> .)
    COMMA           reduce using rule 125 (pn_Expresion7 -> .)
    RBRACK          reduce using rule 125 (pn_Expresion7 -> .)
    HASTA           reduce using rule 125 (pn_Expresion7 -> .)
    HACER           reduce using rule 125 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 239

state 223

    (61) llamada_param -> expresion pn_FuncionLlamada2 . llamada_param2
    (63) llamada_param2 -> . COMMA llamada_param
    (64) llamada_param2 -> . empty
    (104) empty -> .

    COMMA           shift and go to state 241
    RPAREN          reduce using rule 104 (empty -> .)

    llamada_param2                 shift and go to state 240
    empty                          shift and go to state 242

state 224

    (48) varDim -> LBRACK expresion varDim2 RBRACK .

    ASSIGN          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    MULT_OP         reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    DIV_OP          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    PLUS_OP         reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    MINUS_OP        reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    LT_LOG          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    GT_LOG          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    LTE_LOG         reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    GTE_LOG         reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    NE_LOG          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    EQUAL_LOG       reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    AND_LOG         reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    OR_LOG          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    RPAREN          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    SEMIC           reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    COMMA           reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    RBRACK          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    HASTA           reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    HACER           reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)


state 225

    (50) varDim2 -> COMMA expresion .

    RBRACK          reduce using rule 50 (varDim2 -> COMMA expresion .)


state 226

    (68) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC . pn_Secuencial5
    (134) pn_Secuencial5 -> .

    SI              reduce using rule 134 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 134 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 134 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 134 (pn_Secuencial5 -> .)
    ID              reduce using rule 134 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 134 (pn_Secuencial5 -> .)
    LEE             reduce using rule 134 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 134 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 243

state 227

    (69) escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 69 (escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .)


state 228

    (71) escritura3 -> COMMA . escritura2
    (69) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (70) escritura2 -> . expresion pn_Secuencial4 escritura3
    (73) expresion -> . mega_exp expresion1
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 164
    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    escritura2                     shift and go to state 244
    expresion                      shift and go to state 165
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 229

    (72) escritura3 -> empty .

    RPAREN          reduce using rule 72 (escritura3 -> empty .)


state 230

    (70) escritura2 -> expresion pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 70 (escritura2 -> expresion pn_Secuencial4 escritura3 .)


state 231

    (60) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC . pn_Secuencial5
    (134) pn_Secuencial5 -> .

    SI              reduce using rule 134 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 134 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 134 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 134 (pn_Secuencial5 -> .)
    ID              reduce using rule 134 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 134 (pn_Secuencial5 -> .)
    LEE             reduce using rule 134 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 134 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 245

state 232

    (57) varLectura -> ID pn_Expresion1 varDim . varLectura2
    (58) varLectura2 -> . COMMA pn_Secuencial4 varLectura
    (59) varLectura2 -> . empty pn_Secuencial4
    (104) empty -> .

    COMMA           shift and go to state 247
    RPAREN          reduce using rule 104 (empty -> .)

    varLectura2                    shift and go to state 246
    empty                          shift and go to state 248

state 233

    (101) factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .

    MULT_OP         reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    DIV_OP          reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    PLUS_OP         reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    MINUS_OP        reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LT_LOG          reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GT_LOG          reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LTE_LOG         reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GTE_LOG         reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    NE_LOG          reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    EQUAL_LOG       reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    AND_LOG         reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    OR_LOG          reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    ASSIGN          reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RPAREN          reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    SEMIC           reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    COMMA           reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RBRACK          reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HASTA           reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HACER           reduce using rule 101 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)


state 234

    (52) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque . else pn_Condicion2
    (53) else -> . SINO pn_Condicion3 bloque
    (54) else -> . empty
    (104) empty -> .

    SINO            shift and go to state 250
    SI              reduce using rule 104 (empty -> .)
    REGRESA         reduce using rule 104 (empty -> .)
    MIENTRAS        reduce using rule 104 (empty -> .)
    DESDE           reduce using rule 104 (empty -> .)
    ID              reduce using rule 104 (empty -> .)
    ESCRIBE         reduce using rule 104 (empty -> .)
    LEE             reduce using rule 104 (empty -> .)
    RCURLY          reduce using rule 104 (empty -> .)

    else                           shift and go to state 249
    empty                          shift and go to state 251

state 235

    (77) meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .

    ASSIGN          reduce using rule 77 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    RPAREN          reduce using rule 77 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    SEMIC           reduce using rule 77 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    COMMA           reduce using rule 77 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    RBRACK          reduce using rule 77 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    HASTA           reduce using rule 77 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    HACER           reduce using rule 77 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)


state 236

    (67) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .

    SI              reduce using rule 67 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    REGRESA         reduce using rule 67 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    MIENTRAS        reduce using rule 67 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    DESDE           reduce using rule 67 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ID              reduce using rule 67 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ESCRIBE         reduce using rule 67 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    LEE             reduce using rule 67 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    RCURLY          reduce using rule 67 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)


state 237

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER . bloque pn_loop_condicional3
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 252

state 238

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 . HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    HASTA           shift and go to state 253


state 239

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 . pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 . pn_FuncionLlamada3
    (113) pn_FuncionLlamada3 -> .

    SEMIC           reduce using rule 113 (pn_FuncionLlamada3 -> .)
    SI              reduce using rule 113 (pn_FuncionLlamada3 -> .)
    REGRESA         reduce using rule 113 (pn_FuncionLlamada3 -> .)
    MIENTRAS        reduce using rule 113 (pn_FuncionLlamada3 -> .)
    DESDE           reduce using rule 113 (pn_FuncionLlamada3 -> .)
    ID              reduce using rule 113 (pn_FuncionLlamada3 -> .)
    ESCRIBE         reduce using rule 113 (pn_FuncionLlamada3 -> .)
    LEE             reduce using rule 113 (pn_FuncionLlamada3 -> .)
    RCURLY          reduce using rule 113 (pn_FuncionLlamada3 -> .)
    MULT_OP         reduce using rule 113 (pn_FuncionLlamada3 -> .)
    DIV_OP          reduce using rule 113 (pn_FuncionLlamada3 -> .)
    PLUS_OP         reduce using rule 113 (pn_FuncionLlamada3 -> .)
    MINUS_OP        reduce using rule 113 (pn_FuncionLlamada3 -> .)
    LT_LOG          reduce using rule 113 (pn_FuncionLlamada3 -> .)
    GT_LOG          reduce using rule 113 (pn_FuncionLlamada3 -> .)
    LTE_LOG         reduce using rule 113 (pn_FuncionLlamada3 -> .)
    GTE_LOG         reduce using rule 113 (pn_FuncionLlamada3 -> .)
    NE_LOG          reduce using rule 113 (pn_FuncionLlamada3 -> .)
    EQUAL_LOG       reduce using rule 113 (pn_FuncionLlamada3 -> .)
    AND_LOG         reduce using rule 113 (pn_FuncionLlamada3 -> .)
    OR_LOG          reduce using rule 113 (pn_FuncionLlamada3 -> .)
    ASSIGN          reduce using rule 113 (pn_FuncionLlamada3 -> .)
    RPAREN          reduce using rule 113 (pn_FuncionLlamada3 -> .)
    COMMA           reduce using rule 113 (pn_FuncionLlamada3 -> .)
    RBRACK          reduce using rule 113 (pn_FuncionLlamada3 -> .)
    HASTA           reduce using rule 113 (pn_FuncionLlamada3 -> .)
    HACER           reduce using rule 113 (pn_FuncionLlamada3 -> .)

    pn_FuncionLlamada3             shift and go to state 254

state 240

    (61) llamada_param -> expresion pn_FuncionLlamada2 llamada_param2 .

    RPAREN          reduce using rule 61 (llamada_param -> expresion pn_FuncionLlamada2 llamada_param2 .)


state 241

    (63) llamada_param2 -> COMMA . llamada_param
    (61) llamada_param -> . expresion pn_FuncionLlamada2 llamada_param2
    (62) llamada_param -> . empty
    (73) expresion -> . mega_exp expresion1
    (104) empty -> .
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    RPAREN          reduce using rule 104 (empty -> .)
    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    llamada_param                  shift and go to state 255
    expresion                      shift and go to state 197
    empty                          shift and go to state 198
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    variable                       shift and go to state 106
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 242

    (64) llamada_param2 -> empty .

    RPAREN          reduce using rule 64 (llamada_param2 -> empty .)


state 243

    (68) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 68 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 68 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 68 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 68 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 68 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 68 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 68 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 68 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)


state 244

    (71) escritura3 -> COMMA escritura2 .

    RPAREN          reduce using rule 71 (escritura3 -> COMMA escritura2 .)


state 245

    (60) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)


state 246

    (57) varLectura -> ID pn_Expresion1 varDim varLectura2 .

    RPAREN          reduce using rule 57 (varLectura -> ID pn_Expresion1 varDim varLectura2 .)


state 247

    (58) varLectura2 -> COMMA . pn_Secuencial4 varLectura
    (133) pn_Secuencial4 -> .

    ID              reduce using rule 133 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 256

state 248

    (59) varLectura2 -> empty . pn_Secuencial4
    (133) pn_Secuencial4 -> .

    RPAREN          reduce using rule 133 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 257

state 249

    (52) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else . pn_Condicion2
    (137) pn_Condicion2 -> .

    SI              reduce using rule 137 (pn_Condicion2 -> .)
    REGRESA         reduce using rule 137 (pn_Condicion2 -> .)
    MIENTRAS        reduce using rule 137 (pn_Condicion2 -> .)
    DESDE           reduce using rule 137 (pn_Condicion2 -> .)
    ID              reduce using rule 137 (pn_Condicion2 -> .)
    ESCRIBE         reduce using rule 137 (pn_Condicion2 -> .)
    LEE             reduce using rule 137 (pn_Condicion2 -> .)
    RCURLY          reduce using rule 137 (pn_Condicion2 -> .)

    pn_Condicion2                  shift and go to state 258

state 250

    (53) else -> SINO . pn_Condicion3 bloque
    (138) pn_Condicion3 -> .

    LCURLY          reduce using rule 138 (pn_Condicion3 -> .)

    pn_Condicion3                  shift and go to state 259

state 251

    (54) else -> empty .

    SI              reduce using rule 54 (else -> empty .)
    REGRESA         reduce using rule 54 (else -> empty .)
    MIENTRAS        reduce using rule 54 (else -> empty .)
    DESDE           reduce using rule 54 (else -> empty .)
    ID              reduce using rule 54 (else -> empty .)
    ESCRIBE         reduce using rule 54 (else -> empty .)
    LEE             reduce using rule 54 (else -> empty .)
    RCURLY          reduce using rule 54 (else -> empty .)


state 252

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque . pn_loop_condicional3
    (141) pn_loop_condicional3 -> .

    SI              reduce using rule 141 (pn_loop_condicional3 -> .)
    REGRESA         reduce using rule 141 (pn_loop_condicional3 -> .)
    MIENTRAS        reduce using rule 141 (pn_loop_condicional3 -> .)
    DESDE           reduce using rule 141 (pn_loop_condicional3 -> .)
    ID              reduce using rule 141 (pn_loop_condicional3 -> .)
    ESCRIBE         reduce using rule 141 (pn_loop_condicional3 -> .)
    LEE             reduce using rule 141 (pn_loop_condicional3 -> .)
    RCURLY          reduce using rule 141 (pn_loop_condicional3 -> .)

    pn_loop_condicional3           shift and go to state 260

state 253

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA . pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (144) pn_loop_no_condicional3 -> .

    LPAREN          reduce using rule 144 (pn_loop_no_condicional3 -> .)
    CHAR_CTE        reduce using rule 144 (pn_loop_no_condicional3 -> .)
    STRING_CTE      reduce using rule 144 (pn_loop_no_condicional3 -> .)
    MINUS_OP        reduce using rule 144 (pn_loop_no_condicional3 -> .)
    ID              reduce using rule 144 (pn_loop_no_condicional3 -> .)
    INT_CTE         reduce using rule 144 (pn_loop_no_condicional3 -> .)
    FLOAT_CTE       reduce using rule 144 (pn_loop_no_condicional3 -> .)

    pn_loop_no_condicional3        shift and go to state 261

state 254

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 . SEMIC
    (66) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .

  ! shift/reduce conflict for SEMIC resolved as shift
    SEMIC           shift and go to state 262
    SI              reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    REGRESA         reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MIENTRAS        reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    DESDE           reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ID              reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ESCRIBE         reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LEE             reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RCURLY          reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MULT_OP         reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    DIV_OP          reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    PLUS_OP         reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MINUS_OP        reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LT_LOG          reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    GT_LOG          reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LTE_LOG         reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    GTE_LOG         reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    NE_LOG          reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    EQUAL_LOG       reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    AND_LOG         reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    OR_LOG          reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ASSIGN          reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RPAREN          reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    COMMA           reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RBRACK          reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    HASTA           reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    HACER           reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)

  ! SEMIC           [ reduce using rule 66 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .) ]


state 255

    (63) llamada_param2 -> COMMA llamada_param .

    RPAREN          reduce using rule 63 (llamada_param2 -> COMMA llamada_param .)


state 256

    (58) varLectura2 -> COMMA pn_Secuencial4 . varLectura
    (57) varLectura -> . ID pn_Expresion1 varDim varLectura2

    ID              shift and go to state 167

    varLectura                     shift and go to state 263

state 257

    (59) varLectura2 -> empty pn_Secuencial4 .

    RPAREN          reduce using rule 59 (varLectura2 -> empty pn_Secuencial4 .)


state 258

    (52) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .

    SI              reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    REGRESA         reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    MIENTRAS        reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    DESDE           reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ID              reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ESCRIBE         reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    LEE             reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    RCURLY          reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)


state 259

    (53) else -> SINO pn_Condicion3 . bloque
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 264

state 260

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .

    SI              reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    REGRESA         reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    MIENTRAS        reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    DESDE           reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ID              reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ESCRIBE         reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    LEE             reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    RCURLY          reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)


state 261

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 . expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (73) expresion -> . mega_exp expresion1
    (76) mega_exp -> . super_exp meg
    (81) super_exp -> . exp sp
    (90) exp -> . termino pn_Expresion4 exp1
    (95) termino -> . factor pn_Expresion5 term
    (100) factor -> . ctes
    (101) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (102) factor -> . variable
    (103) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (66) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 98
    CHAR_CTE        shift and go to state 108
    STRING_CTE      shift and go to state 109
    MINUS_OP        shift and go to state 110
    ID              shift and go to state 112
    INT_CTE         shift and go to state 113
    FLOAT_CTE       shift and go to state 114

    variable                       shift and go to state 106
    expresion                      shift and go to state 265
    mega_exp                       shift and go to state 100
    super_exp                      shift and go to state 101
    exp                            shift and go to state 102
    termino                        shift and go to state 103
    factor                         shift and go to state 104
    ctes                           shift and go to state 105
    llamada_funcion                shift and go to state 107
    num                            shift and go to state 111

state 262

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .

    SI              reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    REGRESA         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    MIENTRAS        reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    DESDE           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    ID              reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    ESCRIBE         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    LEE             reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    RCURLY          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    MULT_OP         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    DIV_OP          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    PLUS_OP         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    MINUS_OP        reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    LT_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    GT_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    LTE_LOG         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    GTE_LOG         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    NE_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    EQUAL_LOG       reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    AND_LOG         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    OR_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    ASSIGN          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    RPAREN          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    SEMIC           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    COMMA           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    RBRACK          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    HASTA           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    HACER           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)


state 263

    (58) varLectura2 -> COMMA pn_Secuencial4 varLectura .

    RPAREN          reduce using rule 58 (varLectura2 -> COMMA pn_Secuencial4 varLectura .)


state 264

    (53) else -> SINO pn_Condicion3 bloque .

    SI              reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    REGRESA         reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    MIENTRAS        reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    DESDE           reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    ID              reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    ESCRIBE         reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    LEE             reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    RCURLY          reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)


state 265

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion . pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (145) pn_loop_no_condicional4 -> .

    HACER           reduce using rule 145 (pn_loop_no_condicional4 -> .)

    pn_loop_no_condicional4        shift and go to state 266

state 266

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 . HACER bloque pn_loop_no_condicional5

    HACER           shift and go to state 267


state 267

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER . bloque pn_loop_no_condicional5
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 268

state 268

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque . pn_loop_no_condicional5
    (146) pn_loop_no_condicional5 -> .

    SI              reduce using rule 146 (pn_loop_no_condicional5 -> .)
    REGRESA         reduce using rule 146 (pn_loop_no_condicional5 -> .)
    MIENTRAS        reduce using rule 146 (pn_loop_no_condicional5 -> .)
    DESDE           reduce using rule 146 (pn_loop_no_condicional5 -> .)
    ID              reduce using rule 146 (pn_loop_no_condicional5 -> .)
    ESCRIBE         reduce using rule 146 (pn_loop_no_condicional5 -> .)
    LEE             reduce using rule 146 (pn_loop_no_condicional5 -> .)
    RCURLY          reduce using rule 146 (pn_loop_no_condicional5 -> .)

    pn_loop_no_condicional5        shift and go to state 269

state 269

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .

    SI              reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    REGRESA         reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    MIENTRAS        reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    DESDE           reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ID              reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ESCRIBE         reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    LEE             reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    RCURLY          reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMIC in state 254 resolved as shift
WARNING: reduce/reduce conflict in state 164 resolved using rule (pn_CTEString -> <empty>)
WARNING: rejected rule (pn_Secuencial4 -> <empty>) in state 164
