Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    NEW_LINE
    STRING_TYPE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal
Rule 2     dec_variables -> VARIABLES dec_variables2
Rule 3     dec_variables -> empty
Rule 4     dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3
Rule 5     dec_variables3 -> dec_variables2
Rule 6     dec_variables3 -> empty
Rule 7     lista_ids -> ID pn_AddVariable DecVarDim lista_ids2
Rule 8     lista_ids2 -> COMMA lista_ids
Rule 9     lista_ids2 -> empty
Rule 10    DecVarDim -> DecVarDim2 pn_VarDim
Rule 11    DecVarDim -> empty
Rule 12    DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK
Rule 13    tipo -> INT_TYPE pn_SetCurrentType
Rule 14    tipo -> CHAR_TYPE pn_SetCurrentType
Rule 15    tipo -> FLOAT_TYPE pn_SetCurrentType
Rule 16    dec_funciones -> dec_funciones2 dec_funciones
Rule 17    dec_funciones -> empty
Rule 18    dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
Rule 19    tipo_func -> VOID pn_SetCurrentType
Rule 20    tipo_func -> tipo
Rule 21    dec_funcion_param -> lista_parametros
Rule 22    dec_funcion_param -> empty
Rule 23    lista_parametros -> tipo ID pn_Funcion1 lista_parametros2
Rule 24    lista_parametros2 -> COMMA lista_parametros
Rule 25    lista_parametros2 -> empty
Rule 26    principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque
Rule 27    bloque -> LCURLY estatutos RCURLY
Rule 28    estatutos -> estatuto estatutos
Rule 29    estatutos -> empty
Rule 30    estatuto -> asignacion
Rule 31    estatuto -> condicion
Rule 32    estatuto -> regresa
Rule 33    estatuto -> loop_condicional
Rule 34    estatuto -> loop_no_condicional
Rule 35    estatuto -> llamada_funcion
Rule 36    estatuto -> escritura
Rule 37    estatuto -> lectura
Rule 38    estatuto -> funcion_especial_void
Rule 39    funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 40    funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 41    funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 42    funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 43    funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 44    funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
Rule 45    funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
Rule 46    funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 47    funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
Rule 48    direccion -> FORWARD pn_SetDireccion
Rule 49    direccion -> BACKWARD pn_SetDireccion
Rule 50    direccion -> RIGHTTURN pn_SetDireccion
Rule 51    direccion -> LEFTTURN pn_SetDireccion
Rule 52    asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
Rule 53    ctes -> CHAR_CTE pn_CTEChar
Rule 54    ctes -> STRING_CTE pn_CTEString
Rule 55    ctes -> MINUS_OP pn_CTENeg num
Rule 56    ctes -> num
Rule 57    num -> INT_CTE pn_CTEInt
Rule 58    num -> FLOAT_CTE pn_CTEFloat
Rule 59    variable -> ID pn_Expresion1 varDim
Rule 60    varDim -> LBRACK expresion RBRACK
Rule 61    varDim -> empty
Rule 62    condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
Rule 63    else -> SINO pn_Condicion3 bloque
Rule 64    else -> empty
Rule 65    loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
Rule 66    loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
Rule 67    varLectura -> ID pn_Expresion1 varLectura2
Rule 68    varLectura2 -> COMMA pn_Secuencial4 varLectura
Rule 69    varLectura2 -> empty pn_Secuencial4
Rule 70    lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
Rule 71    llamada_param -> expresion pn_FuncionLlamada2 llamada_param2
Rule 72    llamada_param -> empty
Rule 73    llamada_param2 -> COMMA llamada_param
Rule 74    llamada_param2 -> empty
Rule 75    llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
Rule 76    regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
Rule 77    escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
Rule 78    escritura2 -> STRING_CTE pn_Secuencial4 escritura3
Rule 79    escritura2 -> exp pn_Secuencial4 escritura3
Rule 80    escritura3 -> COMMA escritura2
Rule 81    escritura3 -> empty
Rule 82    expresion -> mega_exp expresion1
Rule 83    expresion1 -> ASSIGN expresion
Rule 84    expresion1 -> empty
Rule 85    mega_exp -> super_exp meg
Rule 86    meg -> op_l pn_Expresion10 mega_exp pn_Expresion11
Rule 87    meg -> empty
Rule 88    op_l -> AND_LOG
Rule 89    op_l -> OR_LOG
Rule 90    super_exp -> exp sp
Rule 91    sp -> op_r exp pn_Expresion9
Rule 92    sp -> empty
Rule 93    op_r -> LT_LOG pn_Expresion8
Rule 94    op_r -> GT_LOG pn_Expresion8
Rule 95    op_r -> LTE_LOG pn_Expresion8
Rule 96    op_r -> GTE_LOG pn_Expresion8
Rule 97    op_r -> NE_LOG pn_Expresion8
Rule 98    op_r -> EQUAL_LOG pn_Expresion8
Rule 99    exp -> termino pn_Expresion4 exp1
Rule 100   exp1 -> op_a exp
Rule 101   exp1 -> empty
Rule 102   op_a -> PLUS_OP pn_Expresion2
Rule 103   op_a -> MINUS_OP pn_Expresion2
Rule 104   termino -> factor pn_Expresion5 term
Rule 105   term -> op_a1 termino
Rule 106   term -> empty
Rule 107   op_a1 -> MULT_OP pn_Expresion3
Rule 108   op_a1 -> DIV_OP pn_Expresion3
Rule 109   factor -> ctes
Rule 110   factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
Rule 111   factor -> variable
Rule 112   factor -> llamada_funcion
Rule 113   empty -> <empty>
Rule 114   pn_GOTOprincipal -> <empty>
Rule 115   pn_Principal1 -> <empty>
Rule 116   pn_AddFunc -> <empty>
Rule 117   pn_Funcion1 -> <empty>
Rule 118   pn_Funcion2 -> <empty>
Rule 119   pn_Funcion3 -> <empty>
Rule 120   pn_SetDireccion -> <empty>
Rule 121   pn_FuncionEspecial -> <empty>
Rule 122   pn_FuncionEspecial2 -> <empty>
Rule 123   pn_FuncionLlamada1 -> <empty>
Rule 124   pn_FuncionLlamada2 -> <empty>
Rule 125   pn_FuncionLlamada3 -> <empty>
Rule 126   pn_CTENeg -> <empty>
Rule 127   pn_CTEInt -> <empty>
Rule 128   pn_CTEFloat -> <empty>
Rule 129   pn_CTEChar -> <empty>
Rule 130   pn_CTEString -> <empty>
Rule 131   pn_Expresion1 -> <empty>
Rule 132   pn_Expresion2 -> <empty>
Rule 133   pn_Expresion3 -> <empty>
Rule 134   pn_Expresion4 -> <empty>
Rule 135   pn_Expresion5 -> <empty>
Rule 136   pn_Expresion6 -> <empty>
Rule 137   pn_Expresion7 -> <empty>
Rule 138   pn_Expresion8 -> <empty>
Rule 139   pn_Expresion9 -> <empty>
Rule 140   pn_Expresion10 -> <empty>
Rule 141   pn_Expresion11 -> <empty>
Rule 142   pn_Secuencial1 -> <empty>
Rule 143   pn_Secuencial2 -> <empty>
Rule 144   pn_Secuencial3 -> <empty>
Rule 145   pn_Secuencial4 -> <empty>
Rule 146   pn_Secuencial5 -> <empty>
Rule 147   pn_Regresa -> <empty>
Rule 148   pn_Condicion1 -> <empty>
Rule 149   pn_Condicion2 -> <empty>
Rule 150   pn_Condicion3 -> <empty>
Rule 151   pn_loop_condicional1 -> <empty>
Rule 152   pn_loop_condicional2 -> <empty>
Rule 153   pn_loop_condicional3 -> <empty>
Rule 154   pn_loop_no_condicional1 -> <empty>
Rule 155   pn_loop_no_condicional2 -> <empty>
Rule 156   pn_loop_no_condicional3 -> <empty>
Rule 157   pn_loop_no_condicional4 -> <empty>
Rule 158   pn_loop_no_condicional5 -> <empty>
Rule 159   pn_SetCurrentType -> <empty>
Rule 160   pn_AddVariable -> <empty>
Rule 161   pn_Renglones -> <empty>
Rule 162   pn_VarDim2 -> <empty>
Rule 163   pn_VarDim3 -> <empty>
Rule 164   pn_VarDim -> <empty>
Rule 165   pn_DimAccess -> <empty>
Rule 166   pn_AccederArreglo -> <empty>

Terminals, with rules where they appear

AND_LOG              : 88
ARCO                 : 43
ASSIGN               : 52 66 83
BACKWARD             : 49
CHAR_CTE             : 53
CHAR_TYPE            : 14
CIRCULO              : 41
COLON                : 4
COLOR                : 42
COMMA                : 8 24 39 40 43 68 73 80
COMMENT              : 
DESDE                : 66
DIV_OP               : 108
ENTONCES             : 62
EQUAL_LOG            : 98
ESCRIBE              : 77
FLOAT_CTE            : 58
FLOAT_TYPE           : 15
FORWARD              : 48
FUNCION              : 18
GROSOR               : 46
GTE_LOG              : 96
GT_LOG               : 94
HACER                : 65 66
HASTA                : 66
ID                   : 1 7 18 23 59 67 75
INT_CTE              : 12 57
INT_TYPE             : 13
LBRACK               : 12 60
LCURLY               : 27
LEE                  : 70
LEFTTURN             : 51
LIMPIAR              : 47
LINEA                : 39
LPAREN               : 18 26 39 40 41 42 43 44 45 46 47 62 65 70 75 76 77 110
LTE_LOG              : 95
LT_LOG               : 93
MIENTRAS             : 65
MINUS_OP             : 55 103
MULT_OP              : 107
NEW_LINE             : 
NE_LOG               : 97
OR_LOG               : 89
PENDOWN              : 45
PENUP                : 44
PLUS_OP              : 102
PRINCIPAL            : 26
PROGRAMA             : 1
PUNTO                : 40
RBRACK               : 12 60
RCURLY               : 27
REGRESA              : 76
RIGHTTURN            : 50
RPAREN               : 18 26 39 40 41 42 43 44 45 46 47 62 65 70 75 76 77 110
SEMIC                : 1 4 39 40 41 42 43 44 45 46 47 52 70 76 77
SI                   : 62
SINO                 : 63
STRING_CTE           : 54 78
STRING_TYPE          : 
VARIABLES            : 2
VOID                 : 19
error                : 

Nonterminals, with rules where they appear

DecVarDim            : 7
DecVarDim2           : 10
asignacion           : 30
bloque               : 18 26 62 63 65 66
condicion            : 31
ctes                 : 109
dec_funcion_param    : 18
dec_funciones        : 1 16
dec_funciones2       : 16
dec_variables        : 1 18
dec_variables2       : 2 5
dec_variables3       : 4
direccion            : 39
else                 : 62
empty                : 3 6 9 11 17 22 25 29 61 64 69 72 74 81 84 87 92 101 106
escritura            : 36
escritura2           : 77 80
escritura3           : 78 79
estatuto             : 28
estatutos            : 27 28
exp                  : 39 40 40 41 42 43 43 46 66 66 76 79 90 91 100 110
exp1                 : 99
expresion            : 52 60 62 65 71 83
expresion1           : 82
factor               : 104
funcion_especial_void : 38
lectura              : 37
lista_ids            : 4 8
lista_ids2           : 7
lista_parametros     : 21 24
lista_parametros2    : 23
llamada_funcion      : 35 112
llamada_param        : 73 75
llamada_param2       : 71
loop_condicional     : 33
loop_no_condicional  : 34
meg                  : 85
mega_exp             : 82 86
num                  : 55 56
op_a                 : 100
op_a1                : 105
op_l                 : 86
op_r                 : 91
pn_AccederArreglo    : 
pn_AddFunc           : 18
pn_AddVariable       : 7
pn_CTEChar           : 53
pn_CTEFloat          : 58
pn_CTEInt            : 57
pn_CTENeg            : 55
pn_CTEString         : 54
pn_Condicion1        : 62
pn_Condicion2        : 62
pn_Condicion3        : 63
pn_DimAccess         : 
pn_Expresion1        : 59 67
pn_Expresion10       : 86
pn_Expresion11       : 86
pn_Expresion2        : 102 103
pn_Expresion3        : 107 108
pn_Expresion4        : 99
pn_Expresion5        : 104
pn_Expresion6        : 39 40 41 42 43 46 75 110
pn_Expresion7        : 39 40 41 42 43 46 75 110
pn_Expresion8        : 93 94 95 96 97 98
pn_Expresion9        : 91
pn_Funcion1          : 23
pn_Funcion2          : 18
pn_Funcion3          : 18
pn_FuncionEspecial   : 39 40 41 42 43 44 45 46 47
pn_FuncionEspecial2  : 39 40 41 42 43 44 45 46 47
pn_FuncionLlamada1   : 75
pn_FuncionLlamada2   : 71
pn_FuncionLlamada3   : 75
pn_GOTOprincipal     : 1
pn_Principal1        : 26
pn_Regresa           : 76
pn_Renglones         : 
pn_Secuencial1       : 52 66
pn_Secuencial2       : 52
pn_Secuencial3       : 70 76 77
pn_Secuencial4       : 68 69 78 79
pn_Secuencial5       : 70 77
pn_SetCurrentType    : 13 14 15 19
pn_SetDireccion      : 48 49 50 51
pn_VarDim            : 10
pn_VarDim2           : 12
pn_VarDim3           : 12
pn_loop_condicional1 : 65
pn_loop_condicional2 : 65
pn_loop_condicional3 : 65
pn_loop_no_condicional1 : 66
pn_loop_no_condicional2 : 66
pn_loop_no_condicional3 : 66
pn_loop_no_condicional4 : 66
pn_loop_no_condicional5 : 66
principal            : 1
programa             : 0
regresa              : 32
sp                   : 90
super_exp            : 85
term                 : 104
termino              : 99 105
tipo                 : 4 20 23
tipo_func            : 18
varDim               : 59
varLectura           : 68 70
varLectura2          : 67
variable             : 52 66 111

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    SEMIC           shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMIC . dec_variables pn_GOTOprincipal dec_funciones principal
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (113) empty -> .

    VARIABLES       shift and go to state 6
    FUNCION         reduce using rule 113 (empty -> .)
    PRINCIPAL       reduce using rule 113 (empty -> .)

    dec_variables                  shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMIC dec_variables . pn_GOTOprincipal dec_funciones principal
    (114) pn_GOTOprincipal -> .

    FUNCION         reduce using rule 114 (pn_GOTOprincipal -> .)
    PRINCIPAL       reduce using rule 114 (pn_GOTOprincipal -> .)

    pn_GOTOprincipal               shift and go to state 8

state 6

    (2) dec_variables -> VARIABLES . dec_variables2
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (13) tipo -> . INT_TYPE pn_SetCurrentType
    (14) tipo -> . CHAR_TYPE pn_SetCurrentType
    (15) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_variables2                 shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (3) dec_variables -> empty .

    FUNCION         reduce using rule 3 (dec_variables -> empty .)
    PRINCIPAL       reduce using rule 3 (dec_variables -> empty .)
    LCURLY          reduce using rule 3 (dec_variables -> empty .)


state 8

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal . dec_funciones principal
    (16) dec_funciones -> . dec_funciones2 dec_funciones
    (17) dec_funciones -> . empty
    (18) dec_funciones2 -> . FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (113) empty -> .

    FUNCION         shift and go to state 17
    PRINCIPAL       reduce using rule 113 (empty -> .)

    dec_funciones                  shift and go to state 14
    dec_funciones2                 shift and go to state 15
    empty                          shift and go to state 16

state 9

    (2) dec_variables -> VARIABLES dec_variables2 .

    FUNCION         reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    PRINCIPAL       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    LCURLY          reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)


state 10

    (4) dec_variables2 -> tipo . COLON lista_ids SEMIC dec_variables3

    COLON           shift and go to state 18


state 11

    (13) tipo -> INT_TYPE . pn_SetCurrentType
    (159) pn_SetCurrentType -> .

    COLON           reduce using rule 159 (pn_SetCurrentType -> .)
    ID              reduce using rule 159 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 19

state 12

    (14) tipo -> CHAR_TYPE . pn_SetCurrentType
    (159) pn_SetCurrentType -> .

    COLON           reduce using rule 159 (pn_SetCurrentType -> .)
    ID              reduce using rule 159 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 20

state 13

    (15) tipo -> FLOAT_TYPE . pn_SetCurrentType
    (159) pn_SetCurrentType -> .

    COLON           reduce using rule 159 (pn_SetCurrentType -> .)
    ID              reduce using rule 159 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 21

state 14

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones . principal
    (26) principal -> . PRINCIPAL pn_Principal1 LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 23

    principal                      shift and go to state 22

state 15

    (16) dec_funciones -> dec_funciones2 . dec_funciones
    (16) dec_funciones -> . dec_funciones2 dec_funciones
    (17) dec_funciones -> . empty
    (18) dec_funciones2 -> . FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (113) empty -> .

    FUNCION         shift and go to state 17
    PRINCIPAL       reduce using rule 113 (empty -> .)

    dec_funciones2                 shift and go to state 15
    dec_funciones                  shift and go to state 24
    empty                          shift and go to state 16

state 16

    (17) dec_funciones -> empty .

    PRINCIPAL       reduce using rule 17 (dec_funciones -> empty .)


state 17

    (18) dec_funciones2 -> FUNCION . tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (19) tipo_func -> . VOID pn_SetCurrentType
    (20) tipo_func -> . tipo
    (13) tipo -> . INT_TYPE pn_SetCurrentType
    (14) tipo -> . CHAR_TYPE pn_SetCurrentType
    (15) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 26
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    tipo_func                      shift and go to state 25
    tipo                           shift and go to state 27

state 18

    (4) dec_variables2 -> tipo COLON . lista_ids SEMIC dec_variables3
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 29

    lista_ids                      shift and go to state 28

state 19

    (13) tipo -> INT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 13 (tipo -> INT_TYPE pn_SetCurrentType .)
    ID              reduce using rule 13 (tipo -> INT_TYPE pn_SetCurrentType .)


state 20

    (14) tipo -> CHAR_TYPE pn_SetCurrentType .

    COLON           reduce using rule 14 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    ID              reduce using rule 14 (tipo -> CHAR_TYPE pn_SetCurrentType .)


state 21

    (15) tipo -> FLOAT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 15 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    ID              reduce using rule 15 (tipo -> FLOAT_TYPE pn_SetCurrentType .)


state 22

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .)


state 23

    (26) principal -> PRINCIPAL . pn_Principal1 LPAREN RPAREN bloque
    (115) pn_Principal1 -> .

    LPAREN          reduce using rule 115 (pn_Principal1 -> .)

    pn_Principal1                  shift and go to state 30

state 24

    (16) dec_funciones -> dec_funciones2 dec_funciones .

    PRINCIPAL       reduce using rule 16 (dec_funciones -> dec_funciones2 dec_funciones .)


state 25

    (18) dec_funciones2 -> FUNCION tipo_func . ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    ID              shift and go to state 31


state 26

    (19) tipo_func -> VOID . pn_SetCurrentType
    (159) pn_SetCurrentType -> .

    ID              reduce using rule 159 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 32

state 27

    (20) tipo_func -> tipo .

    ID              reduce using rule 20 (tipo_func -> tipo .)


state 28

    (4) dec_variables2 -> tipo COLON lista_ids . SEMIC dec_variables3

    SEMIC           shift and go to state 33


state 29

    (7) lista_ids -> ID . pn_AddVariable DecVarDim lista_ids2
    (160) pn_AddVariable -> .

    LBRACK          reduce using rule 160 (pn_AddVariable -> .)
    COMMA           reduce using rule 160 (pn_AddVariable -> .)
    SEMIC           reduce using rule 160 (pn_AddVariable -> .)

    pn_AddVariable                 shift and go to state 34

state 30

    (26) principal -> PRINCIPAL pn_Principal1 . LPAREN RPAREN bloque

    LPAREN          shift and go to state 35


state 31

    (18) dec_funciones2 -> FUNCION tipo_func ID . pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (116) pn_AddFunc -> .

    LPAREN          reduce using rule 116 (pn_AddFunc -> .)

    pn_AddFunc                     shift and go to state 36

state 32

    (19) tipo_func -> VOID pn_SetCurrentType .

    ID              reduce using rule 19 (tipo_func -> VOID pn_SetCurrentType .)


state 33

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC . dec_variables3
    (5) dec_variables3 -> . dec_variables2
    (6) dec_variables3 -> . empty
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (113) empty -> .
    (13) tipo -> . INT_TYPE pn_SetCurrentType
    (14) tipo -> . CHAR_TYPE pn_SetCurrentType
    (15) tipo -> . FLOAT_TYPE pn_SetCurrentType

    FUNCION         reduce using rule 113 (empty -> .)
    PRINCIPAL       reduce using rule 113 (empty -> .)
    LCURLY          reduce using rule 113 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    tipo                           shift and go to state 10
    dec_variables3                 shift and go to state 37
    dec_variables2                 shift and go to state 38
    empty                          shift and go to state 39

state 34

    (7) lista_ids -> ID pn_AddVariable . DecVarDim lista_ids2
    (10) DecVarDim -> . DecVarDim2 pn_VarDim
    (11) DecVarDim -> . empty
    (12) DecVarDim2 -> . LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK
    (113) empty -> .

    LBRACK          shift and go to state 43
    COMMA           reduce using rule 113 (empty -> .)
    SEMIC           reduce using rule 113 (empty -> .)

    DecVarDim                      shift and go to state 40
    DecVarDim2                     shift and go to state 41
    empty                          shift and go to state 42

state 35

    (26) principal -> PRINCIPAL pn_Principal1 LPAREN . RPAREN bloque

    RPAREN          shift and go to state 44


state 36

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc . LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    LPAREN          shift and go to state 45


state 37

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .

    FUNCION         reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    PRINCIPAL       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    LCURLY          reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)


state 38

    (5) dec_variables3 -> dec_variables2 .

    FUNCION         reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    PRINCIPAL       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    LCURLY          reduce using rule 5 (dec_variables3 -> dec_variables2 .)


state 39

    (6) dec_variables3 -> empty .

    FUNCION         reduce using rule 6 (dec_variables3 -> empty .)
    PRINCIPAL       reduce using rule 6 (dec_variables3 -> empty .)
    LCURLY          reduce using rule 6 (dec_variables3 -> empty .)


state 40

    (7) lista_ids -> ID pn_AddVariable DecVarDim . lista_ids2
    (8) lista_ids2 -> . COMMA lista_ids
    (9) lista_ids2 -> . empty
    (113) empty -> .

    COMMA           shift and go to state 47
    SEMIC           reduce using rule 113 (empty -> .)

    lista_ids2                     shift and go to state 46
    empty                          shift and go to state 48

state 41

    (10) DecVarDim -> DecVarDim2 . pn_VarDim
    (164) pn_VarDim -> .

    COMMA           reduce using rule 164 (pn_VarDim -> .)
    SEMIC           reduce using rule 164 (pn_VarDim -> .)

    pn_VarDim                      shift and go to state 49

state 42

    (11) DecVarDim -> empty .

    COMMA           reduce using rule 11 (DecVarDim -> empty .)
    SEMIC           reduce using rule 11 (DecVarDim -> empty .)


state 43

    (12) DecVarDim2 -> LBRACK . pn_VarDim2 INT_CTE pn_VarDim3 RBRACK
    (162) pn_VarDim2 -> .

    INT_CTE         reduce using rule 162 (pn_VarDim2 -> .)

    pn_VarDim2                     shift and go to state 50

state 44

    (26) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN . bloque
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 51

state 45

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN . dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (21) dec_funcion_param -> . lista_parametros
    (22) dec_funcion_param -> . empty
    (23) lista_parametros -> . tipo ID pn_Funcion1 lista_parametros2
    (113) empty -> .
    (13) tipo -> . INT_TYPE pn_SetCurrentType
    (14) tipo -> . CHAR_TYPE pn_SetCurrentType
    (15) tipo -> . FLOAT_TYPE pn_SetCurrentType

    RPAREN          reduce using rule 113 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_funcion_param              shift and go to state 53
    lista_parametros               shift and go to state 54
    empty                          shift and go to state 55
    tipo                           shift and go to state 56

state 46

    (7) lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .

    SEMIC           reduce using rule 7 (lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .)


state 47

    (8) lista_ids2 -> COMMA . lista_ids
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 29

    lista_ids                      shift and go to state 57

state 48

    (9) lista_ids2 -> empty .

    SEMIC           reduce using rule 9 (lista_ids2 -> empty .)


state 49

    (10) DecVarDim -> DecVarDim2 pn_VarDim .

    COMMA           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)
    SEMIC           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)


state 50

    (12) DecVarDim2 -> LBRACK pn_VarDim2 . INT_CTE pn_VarDim3 RBRACK

    INT_CTE         shift and go to state 58


state 51

    (26) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .

    $end            reduce using rule 26 (principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .)


state 52

    (27) bloque -> LCURLY . estatutos RCURLY
    (28) estatutos -> . estatuto estatutos
    (29) estatutos -> . empty
    (30) estatuto -> . asignacion
    (31) estatuto -> . condicion
    (32) estatuto -> . regresa
    (33) estatuto -> . loop_condicional
    (34) estatuto -> . loop_no_condicional
    (35) estatuto -> . llamada_funcion
    (36) estatuto -> . escritura
    (37) estatuto -> . lectura
    (38) estatuto -> . funcion_especial_void
    (113) empty -> .
    (52) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (62) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (76) regresa -> . REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (65) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (66) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (77) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (70) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (39) funcion_especial_void -> . LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (40) funcion_especial_void -> . PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (41) funcion_especial_void -> . CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (42) funcion_especial_void -> . COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (43) funcion_especial_void -> . ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (44) funcion_especial_void -> . PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (45) funcion_especial_void -> . PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (46) funcion_especial_void -> . GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (47) funcion_especial_void -> . LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (59) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 113 (empty -> .)
    SI              shift and go to state 72
    REGRESA         shift and go to state 73
    MIENTRAS        shift and go to state 74
    DESDE           shift and go to state 75
    ID              shift and go to state 76
    ESCRIBE         shift and go to state 77
    LEE             shift and go to state 78
    LINEA           shift and go to state 79
    PUNTO           shift and go to state 80
    CIRCULO         shift and go to state 81
    COLOR           shift and go to state 82
    ARCO            shift and go to state 83
    PENUP           shift and go to state 84
    PENDOWN         shift and go to state 85
    GROSOR          shift and go to state 86
    LIMPIAR         shift and go to state 87

    estatutos                      shift and go to state 59
    estatuto                       shift and go to state 60
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    condicion                      shift and go to state 63
    regresa                        shift and go to state 64
    loop_condicional               shift and go to state 65
    loop_no_condicional            shift and go to state 66
    llamada_funcion                shift and go to state 67
    escritura                      shift and go to state 68
    lectura                        shift and go to state 69
    funcion_especial_void          shift and go to state 70
    variable                       shift and go to state 71

state 53

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param . RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    RPAREN          shift and go to state 88


state 54

    (21) dec_funcion_param -> lista_parametros .

    RPAREN          reduce using rule 21 (dec_funcion_param -> lista_parametros .)


state 55

    (22) dec_funcion_param -> empty .

    RPAREN          reduce using rule 22 (dec_funcion_param -> empty .)


state 56

    (23) lista_parametros -> tipo . ID pn_Funcion1 lista_parametros2

    ID              shift and go to state 89


state 57

    (8) lista_ids2 -> COMMA lista_ids .

    SEMIC           reduce using rule 8 (lista_ids2 -> COMMA lista_ids .)


state 58

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE . pn_VarDim3 RBRACK
    (163) pn_VarDim3 -> .

    RBRACK          reduce using rule 163 (pn_VarDim3 -> .)

    pn_VarDim3                     shift and go to state 90

state 59

    (27) bloque -> LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 91


state 60

    (28) estatutos -> estatuto . estatutos
    (28) estatutos -> . estatuto estatutos
    (29) estatutos -> . empty
    (30) estatuto -> . asignacion
    (31) estatuto -> . condicion
    (32) estatuto -> . regresa
    (33) estatuto -> . loop_condicional
    (34) estatuto -> . loop_no_condicional
    (35) estatuto -> . llamada_funcion
    (36) estatuto -> . escritura
    (37) estatuto -> . lectura
    (38) estatuto -> . funcion_especial_void
    (113) empty -> .
    (52) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (62) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (76) regresa -> . REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (65) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (66) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (77) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (70) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (39) funcion_especial_void -> . LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (40) funcion_especial_void -> . PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (41) funcion_especial_void -> . CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (42) funcion_especial_void -> . COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (43) funcion_especial_void -> . ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (44) funcion_especial_void -> . PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (45) funcion_especial_void -> . PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (46) funcion_especial_void -> . GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (47) funcion_especial_void -> . LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (59) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 113 (empty -> .)
    SI              shift and go to state 72
    REGRESA         shift and go to state 73
    MIENTRAS        shift and go to state 74
    DESDE           shift and go to state 75
    ID              shift and go to state 76
    ESCRIBE         shift and go to state 77
    LEE             shift and go to state 78
    LINEA           shift and go to state 79
    PUNTO           shift and go to state 80
    CIRCULO         shift and go to state 81
    COLOR           shift and go to state 82
    ARCO            shift and go to state 83
    PENUP           shift and go to state 84
    PENDOWN         shift and go to state 85
    GROSOR          shift and go to state 86
    LIMPIAR         shift and go to state 87

    estatuto                       shift and go to state 60
    estatutos                      shift and go to state 92
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    condicion                      shift and go to state 63
    regresa                        shift and go to state 64
    loop_condicional               shift and go to state 65
    loop_no_condicional            shift and go to state 66
    llamada_funcion                shift and go to state 67
    escritura                      shift and go to state 68
    lectura                        shift and go to state 69
    funcion_especial_void          shift and go to state 70
    variable                       shift and go to state 71

state 61

    (29) estatutos -> empty .

    RCURLY          reduce using rule 29 (estatutos -> empty .)


state 62

    (30) estatuto -> asignacion .

    SI              reduce using rule 30 (estatuto -> asignacion .)
    REGRESA         reduce using rule 30 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 30 (estatuto -> asignacion .)
    DESDE           reduce using rule 30 (estatuto -> asignacion .)
    ID              reduce using rule 30 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 30 (estatuto -> asignacion .)
    LEE             reduce using rule 30 (estatuto -> asignacion .)
    LINEA           reduce using rule 30 (estatuto -> asignacion .)
    PUNTO           reduce using rule 30 (estatuto -> asignacion .)
    CIRCULO         reduce using rule 30 (estatuto -> asignacion .)
    COLOR           reduce using rule 30 (estatuto -> asignacion .)
    ARCO            reduce using rule 30 (estatuto -> asignacion .)
    PENUP           reduce using rule 30 (estatuto -> asignacion .)
    PENDOWN         reduce using rule 30 (estatuto -> asignacion .)
    GROSOR          reduce using rule 30 (estatuto -> asignacion .)
    LIMPIAR         reduce using rule 30 (estatuto -> asignacion .)
    RCURLY          reduce using rule 30 (estatuto -> asignacion .)


state 63

    (31) estatuto -> condicion .

    SI              reduce using rule 31 (estatuto -> condicion .)
    REGRESA         reduce using rule 31 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 31 (estatuto -> condicion .)
    DESDE           reduce using rule 31 (estatuto -> condicion .)
    ID              reduce using rule 31 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 31 (estatuto -> condicion .)
    LEE             reduce using rule 31 (estatuto -> condicion .)
    LINEA           reduce using rule 31 (estatuto -> condicion .)
    PUNTO           reduce using rule 31 (estatuto -> condicion .)
    CIRCULO         reduce using rule 31 (estatuto -> condicion .)
    COLOR           reduce using rule 31 (estatuto -> condicion .)
    ARCO            reduce using rule 31 (estatuto -> condicion .)
    PENUP           reduce using rule 31 (estatuto -> condicion .)
    PENDOWN         reduce using rule 31 (estatuto -> condicion .)
    GROSOR          reduce using rule 31 (estatuto -> condicion .)
    LIMPIAR         reduce using rule 31 (estatuto -> condicion .)
    RCURLY          reduce using rule 31 (estatuto -> condicion .)


state 64

    (32) estatuto -> regresa .

    SI              reduce using rule 32 (estatuto -> regresa .)
    REGRESA         reduce using rule 32 (estatuto -> regresa .)
    MIENTRAS        reduce using rule 32 (estatuto -> regresa .)
    DESDE           reduce using rule 32 (estatuto -> regresa .)
    ID              reduce using rule 32 (estatuto -> regresa .)
    ESCRIBE         reduce using rule 32 (estatuto -> regresa .)
    LEE             reduce using rule 32 (estatuto -> regresa .)
    LINEA           reduce using rule 32 (estatuto -> regresa .)
    PUNTO           reduce using rule 32 (estatuto -> regresa .)
    CIRCULO         reduce using rule 32 (estatuto -> regresa .)
    COLOR           reduce using rule 32 (estatuto -> regresa .)
    ARCO            reduce using rule 32 (estatuto -> regresa .)
    PENUP           reduce using rule 32 (estatuto -> regresa .)
    PENDOWN         reduce using rule 32 (estatuto -> regresa .)
    GROSOR          reduce using rule 32 (estatuto -> regresa .)
    LIMPIAR         reduce using rule 32 (estatuto -> regresa .)
    RCURLY          reduce using rule 32 (estatuto -> regresa .)


state 65

    (33) estatuto -> loop_condicional .

    SI              reduce using rule 33 (estatuto -> loop_condicional .)
    REGRESA         reduce using rule 33 (estatuto -> loop_condicional .)
    MIENTRAS        reduce using rule 33 (estatuto -> loop_condicional .)
    DESDE           reduce using rule 33 (estatuto -> loop_condicional .)
    ID              reduce using rule 33 (estatuto -> loop_condicional .)
    ESCRIBE         reduce using rule 33 (estatuto -> loop_condicional .)
    LEE             reduce using rule 33 (estatuto -> loop_condicional .)
    LINEA           reduce using rule 33 (estatuto -> loop_condicional .)
    PUNTO           reduce using rule 33 (estatuto -> loop_condicional .)
    CIRCULO         reduce using rule 33 (estatuto -> loop_condicional .)
    COLOR           reduce using rule 33 (estatuto -> loop_condicional .)
    ARCO            reduce using rule 33 (estatuto -> loop_condicional .)
    PENUP           reduce using rule 33 (estatuto -> loop_condicional .)
    PENDOWN         reduce using rule 33 (estatuto -> loop_condicional .)
    GROSOR          reduce using rule 33 (estatuto -> loop_condicional .)
    LIMPIAR         reduce using rule 33 (estatuto -> loop_condicional .)
    RCURLY          reduce using rule 33 (estatuto -> loop_condicional .)


state 66

    (34) estatuto -> loop_no_condicional .

    SI              reduce using rule 34 (estatuto -> loop_no_condicional .)
    REGRESA         reduce using rule 34 (estatuto -> loop_no_condicional .)
    MIENTRAS        reduce using rule 34 (estatuto -> loop_no_condicional .)
    DESDE           reduce using rule 34 (estatuto -> loop_no_condicional .)
    ID              reduce using rule 34 (estatuto -> loop_no_condicional .)
    ESCRIBE         reduce using rule 34 (estatuto -> loop_no_condicional .)
    LEE             reduce using rule 34 (estatuto -> loop_no_condicional .)
    LINEA           reduce using rule 34 (estatuto -> loop_no_condicional .)
    PUNTO           reduce using rule 34 (estatuto -> loop_no_condicional .)
    CIRCULO         reduce using rule 34 (estatuto -> loop_no_condicional .)
    COLOR           reduce using rule 34 (estatuto -> loop_no_condicional .)
    ARCO            reduce using rule 34 (estatuto -> loop_no_condicional .)
    PENUP           reduce using rule 34 (estatuto -> loop_no_condicional .)
    PENDOWN         reduce using rule 34 (estatuto -> loop_no_condicional .)
    GROSOR          reduce using rule 34 (estatuto -> loop_no_condicional .)
    LIMPIAR         reduce using rule 34 (estatuto -> loop_no_condicional .)
    RCURLY          reduce using rule 34 (estatuto -> loop_no_condicional .)


state 67

    (35) estatuto -> llamada_funcion .

    SI              reduce using rule 35 (estatuto -> llamada_funcion .)
    REGRESA         reduce using rule 35 (estatuto -> llamada_funcion .)
    MIENTRAS        reduce using rule 35 (estatuto -> llamada_funcion .)
    DESDE           reduce using rule 35 (estatuto -> llamada_funcion .)
    ID              reduce using rule 35 (estatuto -> llamada_funcion .)
    ESCRIBE         reduce using rule 35 (estatuto -> llamada_funcion .)
    LEE             reduce using rule 35 (estatuto -> llamada_funcion .)
    LINEA           reduce using rule 35 (estatuto -> llamada_funcion .)
    PUNTO           reduce using rule 35 (estatuto -> llamada_funcion .)
    CIRCULO         reduce using rule 35 (estatuto -> llamada_funcion .)
    COLOR           reduce using rule 35 (estatuto -> llamada_funcion .)
    ARCO            reduce using rule 35 (estatuto -> llamada_funcion .)
    PENUP           reduce using rule 35 (estatuto -> llamada_funcion .)
    PENDOWN         reduce using rule 35 (estatuto -> llamada_funcion .)
    GROSOR          reduce using rule 35 (estatuto -> llamada_funcion .)
    LIMPIAR         reduce using rule 35 (estatuto -> llamada_funcion .)
    RCURLY          reduce using rule 35 (estatuto -> llamada_funcion .)


state 68

    (36) estatuto -> escritura .

    SI              reduce using rule 36 (estatuto -> escritura .)
    REGRESA         reduce using rule 36 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 36 (estatuto -> escritura .)
    DESDE           reduce using rule 36 (estatuto -> escritura .)
    ID              reduce using rule 36 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 36 (estatuto -> escritura .)
    LEE             reduce using rule 36 (estatuto -> escritura .)
    LINEA           reduce using rule 36 (estatuto -> escritura .)
    PUNTO           reduce using rule 36 (estatuto -> escritura .)
    CIRCULO         reduce using rule 36 (estatuto -> escritura .)
    COLOR           reduce using rule 36 (estatuto -> escritura .)
    ARCO            reduce using rule 36 (estatuto -> escritura .)
    PENUP           reduce using rule 36 (estatuto -> escritura .)
    PENDOWN         reduce using rule 36 (estatuto -> escritura .)
    GROSOR          reduce using rule 36 (estatuto -> escritura .)
    LIMPIAR         reduce using rule 36 (estatuto -> escritura .)
    RCURLY          reduce using rule 36 (estatuto -> escritura .)


state 69

    (37) estatuto -> lectura .

    SI              reduce using rule 37 (estatuto -> lectura .)
    REGRESA         reduce using rule 37 (estatuto -> lectura .)
    MIENTRAS        reduce using rule 37 (estatuto -> lectura .)
    DESDE           reduce using rule 37 (estatuto -> lectura .)
    ID              reduce using rule 37 (estatuto -> lectura .)
    ESCRIBE         reduce using rule 37 (estatuto -> lectura .)
    LEE             reduce using rule 37 (estatuto -> lectura .)
    LINEA           reduce using rule 37 (estatuto -> lectura .)
    PUNTO           reduce using rule 37 (estatuto -> lectura .)
    CIRCULO         reduce using rule 37 (estatuto -> lectura .)
    COLOR           reduce using rule 37 (estatuto -> lectura .)
    ARCO            reduce using rule 37 (estatuto -> lectura .)
    PENUP           reduce using rule 37 (estatuto -> lectura .)
    PENDOWN         reduce using rule 37 (estatuto -> lectura .)
    GROSOR          reduce using rule 37 (estatuto -> lectura .)
    LIMPIAR         reduce using rule 37 (estatuto -> lectura .)
    RCURLY          reduce using rule 37 (estatuto -> lectura .)


state 70

    (38) estatuto -> funcion_especial_void .

    SI              reduce using rule 38 (estatuto -> funcion_especial_void .)
    REGRESA         reduce using rule 38 (estatuto -> funcion_especial_void .)
    MIENTRAS        reduce using rule 38 (estatuto -> funcion_especial_void .)
    DESDE           reduce using rule 38 (estatuto -> funcion_especial_void .)
    ID              reduce using rule 38 (estatuto -> funcion_especial_void .)
    ESCRIBE         reduce using rule 38 (estatuto -> funcion_especial_void .)
    LEE             reduce using rule 38 (estatuto -> funcion_especial_void .)
    LINEA           reduce using rule 38 (estatuto -> funcion_especial_void .)
    PUNTO           reduce using rule 38 (estatuto -> funcion_especial_void .)
    CIRCULO         reduce using rule 38 (estatuto -> funcion_especial_void .)
    COLOR           reduce using rule 38 (estatuto -> funcion_especial_void .)
    ARCO            reduce using rule 38 (estatuto -> funcion_especial_void .)
    PENUP           reduce using rule 38 (estatuto -> funcion_especial_void .)
    PENDOWN         reduce using rule 38 (estatuto -> funcion_especial_void .)
    GROSOR          reduce using rule 38 (estatuto -> funcion_especial_void .)
    LIMPIAR         reduce using rule 38 (estatuto -> funcion_especial_void .)
    RCURLY          reduce using rule 38 (estatuto -> funcion_especial_void .)


state 71

    (52) asignacion -> variable . ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2

    ASSIGN          shift and go to state 93


state 72

    (62) condicion -> SI . LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    LPAREN          shift and go to state 94


state 73

    (76) regresa -> REGRESA . pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (144) pn_Secuencial3 -> .

    LPAREN          reduce using rule 144 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 95

state 74

    (65) loop_condicional -> MIENTRAS . pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (151) pn_loop_condicional1 -> .

    LPAREN          reduce using rule 151 (pn_loop_condicional1 -> .)

    pn_loop_condicional1           shift and go to state 96

state 75

    (66) loop_no_condicional -> DESDE . pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (154) pn_loop_no_condicional1 -> .

    ID              reduce using rule 154 (pn_loop_no_condicional1 -> .)

    pn_loop_no_condicional1        shift and go to state 97

state 76

    (75) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (59) variable -> ID . pn_Expresion1 varDim
    (123) pn_FuncionLlamada1 -> .
    (131) pn_Expresion1 -> .

    LPAREN          reduce using rule 123 (pn_FuncionLlamada1 -> .)
    LBRACK          reduce using rule 131 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 131 (pn_Expresion1 -> .)

    pn_FuncionLlamada1             shift and go to state 98
    pn_Expresion1                  shift and go to state 99

state 77

    (77) escritura -> ESCRIBE . pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (144) pn_Secuencial3 -> .

    LPAREN          reduce using rule 144 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 100

state 78

    (70) lectura -> LEE . pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (144) pn_Secuencial3 -> .

    LPAREN          reduce using rule 144 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 101

state 79

    (39) funcion_especial_void -> LINEA . pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (121) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 121 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 102

state 80

    (40) funcion_especial_void -> PUNTO . pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (121) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 121 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 103

state 81

    (41) funcion_especial_void -> CIRCULO . pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (121) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 121 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 104

state 82

    (42) funcion_especial_void -> COLOR . pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (121) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 121 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 105

state 83

    (43) funcion_especial_void -> ARCO . pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (121) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 121 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 106

state 84

    (44) funcion_especial_void -> PENUP . pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (121) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 121 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 107

state 85

    (45) funcion_especial_void -> PENDOWN . pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (121) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 121 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 108

state 86

    (46) funcion_especial_void -> GROSOR . pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (121) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 121 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 109

state 87

    (47) funcion_especial_void -> LIMPIAR . pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (121) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 121 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 110

state 88

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN . pn_Funcion2 dec_variables bloque pn_Funcion3
    (118) pn_Funcion2 -> .

    VARIABLES       reduce using rule 118 (pn_Funcion2 -> .)
    LCURLY          reduce using rule 118 (pn_Funcion2 -> .)

    pn_Funcion2                    shift and go to state 111

state 89

    (23) lista_parametros -> tipo ID . pn_Funcion1 lista_parametros2
    (117) pn_Funcion1 -> .

    COMMA           reduce using rule 117 (pn_Funcion1 -> .)
    RPAREN          reduce using rule 117 (pn_Funcion1 -> .)

    pn_Funcion1                    shift and go to state 112

state 90

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 . RBRACK

    RBRACK          shift and go to state 113


state 91

    (27) bloque -> LCURLY estatutos RCURLY .

    $end            reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    FUNCION         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    PRINCIPAL       reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    SINO            reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    SI              reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    REGRESA         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    MIENTRAS        reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    DESDE           reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    ID              reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    ESCRIBE         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    LEE             reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    LINEA           reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    PUNTO           reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    CIRCULO         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    COLOR           reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    ARCO            reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    PENUP           reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    PENDOWN         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    GROSOR          reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    LIMPIAR         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)


state 92

    (28) estatutos -> estatuto estatutos .

    RCURLY          reduce using rule 28 (estatutos -> estatuto estatutos .)


state 93

    (52) asignacion -> variable ASSIGN . pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (142) pn_Secuencial1 -> .

    LPAREN          reduce using rule 142 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 142 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 142 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 142 (pn_Secuencial1 -> .)
    ID              reduce using rule 142 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 142 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 142 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 114

state 94

    (62) condicion -> SI LPAREN . expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (82) expresion -> . mega_exp expresion1
    (85) mega_exp -> . super_exp meg
    (90) super_exp -> . exp sp
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    expresion                      shift and go to state 116
    mega_exp                       shift and go to state 117
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 95

    (76) regresa -> REGRESA pn_Secuencial3 . LPAREN exp RPAREN pn_Regresa SEMIC

    LPAREN          shift and go to state 132


state 96

    (65) loop_condicional -> MIENTRAS pn_loop_condicional1 . LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    LPAREN          shift and go to state 133


state 97

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 . variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (59) variable -> . ID pn_Expresion1 varDim

    ID              shift and go to state 135

    variable                       shift and go to state 134

state 98

    (75) llamada_funcion -> ID pn_FuncionLlamada1 . LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3

    LPAREN          shift and go to state 136


state 99

    (59) variable -> ID pn_Expresion1 . varDim
    (60) varDim -> . LBRACK expresion RBRACK
    (61) varDim -> . empty
    (113) empty -> .

    LBRACK          shift and go to state 138
    ASSIGN          reduce using rule 113 (empty -> .)
    MULT_OP         reduce using rule 113 (empty -> .)
    DIV_OP          reduce using rule 113 (empty -> .)
    PLUS_OP         reduce using rule 113 (empty -> .)
    MINUS_OP        reduce using rule 113 (empty -> .)
    LT_LOG          reduce using rule 113 (empty -> .)
    GT_LOG          reduce using rule 113 (empty -> .)
    LTE_LOG         reduce using rule 113 (empty -> .)
    GTE_LOG         reduce using rule 113 (empty -> .)
    NE_LOG          reduce using rule 113 (empty -> .)
    EQUAL_LOG       reduce using rule 113 (empty -> .)
    AND_LOG         reduce using rule 113 (empty -> .)
    OR_LOG          reduce using rule 113 (empty -> .)
    RPAREN          reduce using rule 113 (empty -> .)
    SEMIC           reduce using rule 113 (empty -> .)
    RBRACK          reduce using rule 113 (empty -> .)
    COMMA           reduce using rule 113 (empty -> .)
    HASTA           reduce using rule 113 (empty -> .)
    HACER           reduce using rule 113 (empty -> .)

    varDim                         shift and go to state 137
    empty                          shift and go to state 139

state 100

    (77) escritura -> ESCRIBE pn_Secuencial3 . LPAREN escritura2 RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 140


state 101

    (70) lectura -> LEE pn_Secuencial3 . LPAREN varLectura RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 141


state 102

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial . LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 142


state 103

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial . LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 143


state 104

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 144


state 105

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 145


state 106

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial . LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 146


state 107

    (44) funcion_especial_void -> PENUP pn_FuncionEspecial . LPAREN RPAREN SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 147


state 108

    (45) funcion_especial_void -> PENDOWN pn_FuncionEspecial . LPAREN RPAREN SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 148


state 109

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 149


state 110

    (47) funcion_especial_void -> LIMPIAR pn_FuncionEspecial . LPAREN RPAREN SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 150


state 111

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 . dec_variables bloque pn_Funcion3
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (113) empty -> .

    VARIABLES       shift and go to state 6
    LCURLY          reduce using rule 113 (empty -> .)

    dec_variables                  shift and go to state 151
    empty                          shift and go to state 7

state 112

    (23) lista_parametros -> tipo ID pn_Funcion1 . lista_parametros2
    (24) lista_parametros2 -> . COMMA lista_parametros
    (25) lista_parametros2 -> . empty
    (113) empty -> .

    COMMA           shift and go to state 153
    RPAREN          reduce using rule 113 (empty -> .)

    lista_parametros2              shift and go to state 152
    empty                          shift and go to state 154

state 113

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK .

    COMMA           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK .)
    SEMIC           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK .)


state 114

    (52) asignacion -> variable ASSIGN pn_Secuencial1 . expresion SEMIC pn_Secuencial2
    (82) expresion -> . mega_exp expresion1
    (85) mega_exp -> . super_exp meg
    (90) super_exp -> . exp sp
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    variable                       shift and go to state 123
    expresion                      shift and go to state 155
    mega_exp                       shift and go to state 117
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 115

    (110) factor -> LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7
    (136) pn_Expresion6 -> .

    LPAREN          reduce using rule 136 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion6 -> .)
    ID              reduce using rule 136 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 156

state 116

    (62) condicion -> SI LPAREN expresion . RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    RPAREN          shift and go to state 157


state 117

    (82) expresion -> mega_exp . expresion1
    (83) expresion1 -> . ASSIGN expresion
    (84) expresion1 -> . empty
    (113) empty -> .

    ASSIGN          shift and go to state 159
    RPAREN          reduce using rule 113 (empty -> .)
    SEMIC           reduce using rule 113 (empty -> .)
    RBRACK          reduce using rule 113 (empty -> .)
    COMMA           reduce using rule 113 (empty -> .)

    expresion1                     shift and go to state 158
    empty                          shift and go to state 160

state 118

    (85) mega_exp -> super_exp . meg
    (86) meg -> . op_l pn_Expresion10 mega_exp pn_Expresion11
    (87) meg -> . empty
    (88) op_l -> . AND_LOG
    (89) op_l -> . OR_LOG
    (113) empty -> .

    AND_LOG         shift and go to state 164
    OR_LOG          shift and go to state 165
    ASSIGN          reduce using rule 113 (empty -> .)
    RPAREN          reduce using rule 113 (empty -> .)
    SEMIC           reduce using rule 113 (empty -> .)
    RBRACK          reduce using rule 113 (empty -> .)
    COMMA           reduce using rule 113 (empty -> .)

    meg                            shift and go to state 161
    op_l                           shift and go to state 162
    empty                          shift and go to state 163

state 119

    (90) super_exp -> exp . sp
    (91) sp -> . op_r exp pn_Expresion9
    (92) sp -> . empty
    (93) op_r -> . LT_LOG pn_Expresion8
    (94) op_r -> . GT_LOG pn_Expresion8
    (95) op_r -> . LTE_LOG pn_Expresion8
    (96) op_r -> . GTE_LOG pn_Expresion8
    (97) op_r -> . NE_LOG pn_Expresion8
    (98) op_r -> . EQUAL_LOG pn_Expresion8
    (113) empty -> .

    LT_LOG          shift and go to state 169
    GT_LOG          shift and go to state 170
    LTE_LOG         shift and go to state 171
    GTE_LOG         shift and go to state 172
    NE_LOG          shift and go to state 173
    EQUAL_LOG       shift and go to state 174
    AND_LOG         reduce using rule 113 (empty -> .)
    OR_LOG          reduce using rule 113 (empty -> .)
    ASSIGN          reduce using rule 113 (empty -> .)
    RPAREN          reduce using rule 113 (empty -> .)
    SEMIC           reduce using rule 113 (empty -> .)
    RBRACK          reduce using rule 113 (empty -> .)
    COMMA           reduce using rule 113 (empty -> .)

    sp                             shift and go to state 166
    op_r                           shift and go to state 167
    empty                          shift and go to state 168

state 120

    (99) exp -> termino . pn_Expresion4 exp1
    (134) pn_Expresion4 -> .

    PLUS_OP         reduce using rule 134 (pn_Expresion4 -> .)
    MINUS_OP        reduce using rule 134 (pn_Expresion4 -> .)
    LT_LOG          reduce using rule 134 (pn_Expresion4 -> .)
    GT_LOG          reduce using rule 134 (pn_Expresion4 -> .)
    LTE_LOG         reduce using rule 134 (pn_Expresion4 -> .)
    GTE_LOG         reduce using rule 134 (pn_Expresion4 -> .)
    NE_LOG          reduce using rule 134 (pn_Expresion4 -> .)
    EQUAL_LOG       reduce using rule 134 (pn_Expresion4 -> .)
    AND_LOG         reduce using rule 134 (pn_Expresion4 -> .)
    OR_LOG          reduce using rule 134 (pn_Expresion4 -> .)
    ASSIGN          reduce using rule 134 (pn_Expresion4 -> .)
    RPAREN          reduce using rule 134 (pn_Expresion4 -> .)
    SEMIC           reduce using rule 134 (pn_Expresion4 -> .)
    RBRACK          reduce using rule 134 (pn_Expresion4 -> .)
    COMMA           reduce using rule 134 (pn_Expresion4 -> .)
    HASTA           reduce using rule 134 (pn_Expresion4 -> .)
    HACER           reduce using rule 134 (pn_Expresion4 -> .)

    pn_Expresion4                  shift and go to state 175

state 121

    (104) termino -> factor . pn_Expresion5 term
    (135) pn_Expresion5 -> .

    MULT_OP         reduce using rule 135 (pn_Expresion5 -> .)
    DIV_OP          reduce using rule 135 (pn_Expresion5 -> .)
    PLUS_OP         reduce using rule 135 (pn_Expresion5 -> .)
    MINUS_OP        reduce using rule 135 (pn_Expresion5 -> .)
    LT_LOG          reduce using rule 135 (pn_Expresion5 -> .)
    GT_LOG          reduce using rule 135 (pn_Expresion5 -> .)
    LTE_LOG         reduce using rule 135 (pn_Expresion5 -> .)
    GTE_LOG         reduce using rule 135 (pn_Expresion5 -> .)
    NE_LOG          reduce using rule 135 (pn_Expresion5 -> .)
    EQUAL_LOG       reduce using rule 135 (pn_Expresion5 -> .)
    AND_LOG         reduce using rule 135 (pn_Expresion5 -> .)
    OR_LOG          reduce using rule 135 (pn_Expresion5 -> .)
    ASSIGN          reduce using rule 135 (pn_Expresion5 -> .)
    RPAREN          reduce using rule 135 (pn_Expresion5 -> .)
    SEMIC           reduce using rule 135 (pn_Expresion5 -> .)
    RBRACK          reduce using rule 135 (pn_Expresion5 -> .)
    COMMA           reduce using rule 135 (pn_Expresion5 -> .)
    HASTA           reduce using rule 135 (pn_Expresion5 -> .)
    HACER           reduce using rule 135 (pn_Expresion5 -> .)

    pn_Expresion5                  shift and go to state 176

state 122

    (109) factor -> ctes .

    MULT_OP         reduce using rule 109 (factor -> ctes .)
    DIV_OP          reduce using rule 109 (factor -> ctes .)
    PLUS_OP         reduce using rule 109 (factor -> ctes .)
    MINUS_OP        reduce using rule 109 (factor -> ctes .)
    LT_LOG          reduce using rule 109 (factor -> ctes .)
    GT_LOG          reduce using rule 109 (factor -> ctes .)
    LTE_LOG         reduce using rule 109 (factor -> ctes .)
    GTE_LOG         reduce using rule 109 (factor -> ctes .)
    NE_LOG          reduce using rule 109 (factor -> ctes .)
    EQUAL_LOG       reduce using rule 109 (factor -> ctes .)
    AND_LOG         reduce using rule 109 (factor -> ctes .)
    OR_LOG          reduce using rule 109 (factor -> ctes .)
    ASSIGN          reduce using rule 109 (factor -> ctes .)
    RPAREN          reduce using rule 109 (factor -> ctes .)
    SEMIC           reduce using rule 109 (factor -> ctes .)
    RBRACK          reduce using rule 109 (factor -> ctes .)
    COMMA           reduce using rule 109 (factor -> ctes .)
    HASTA           reduce using rule 109 (factor -> ctes .)
    HACER           reduce using rule 109 (factor -> ctes .)


state 123

    (111) factor -> variable .

    MULT_OP         reduce using rule 111 (factor -> variable .)
    DIV_OP          reduce using rule 111 (factor -> variable .)
    PLUS_OP         reduce using rule 111 (factor -> variable .)
    MINUS_OP        reduce using rule 111 (factor -> variable .)
    LT_LOG          reduce using rule 111 (factor -> variable .)
    GT_LOG          reduce using rule 111 (factor -> variable .)
    LTE_LOG         reduce using rule 111 (factor -> variable .)
    GTE_LOG         reduce using rule 111 (factor -> variable .)
    NE_LOG          reduce using rule 111 (factor -> variable .)
    EQUAL_LOG       reduce using rule 111 (factor -> variable .)
    AND_LOG         reduce using rule 111 (factor -> variable .)
    OR_LOG          reduce using rule 111 (factor -> variable .)
    ASSIGN          reduce using rule 111 (factor -> variable .)
    RPAREN          reduce using rule 111 (factor -> variable .)
    SEMIC           reduce using rule 111 (factor -> variable .)
    RBRACK          reduce using rule 111 (factor -> variable .)
    COMMA           reduce using rule 111 (factor -> variable .)
    HASTA           reduce using rule 111 (factor -> variable .)
    HACER           reduce using rule 111 (factor -> variable .)


state 124

    (112) factor -> llamada_funcion .

    MULT_OP         reduce using rule 112 (factor -> llamada_funcion .)
    DIV_OP          reduce using rule 112 (factor -> llamada_funcion .)
    PLUS_OP         reduce using rule 112 (factor -> llamada_funcion .)
    MINUS_OP        reduce using rule 112 (factor -> llamada_funcion .)
    LT_LOG          reduce using rule 112 (factor -> llamada_funcion .)
    GT_LOG          reduce using rule 112 (factor -> llamada_funcion .)
    LTE_LOG         reduce using rule 112 (factor -> llamada_funcion .)
    GTE_LOG         reduce using rule 112 (factor -> llamada_funcion .)
    NE_LOG          reduce using rule 112 (factor -> llamada_funcion .)
    EQUAL_LOG       reduce using rule 112 (factor -> llamada_funcion .)
    AND_LOG         reduce using rule 112 (factor -> llamada_funcion .)
    OR_LOG          reduce using rule 112 (factor -> llamada_funcion .)
    ASSIGN          reduce using rule 112 (factor -> llamada_funcion .)
    RPAREN          reduce using rule 112 (factor -> llamada_funcion .)
    SEMIC           reduce using rule 112 (factor -> llamada_funcion .)
    RBRACK          reduce using rule 112 (factor -> llamada_funcion .)
    COMMA           reduce using rule 112 (factor -> llamada_funcion .)
    HASTA           reduce using rule 112 (factor -> llamada_funcion .)
    HACER           reduce using rule 112 (factor -> llamada_funcion .)


state 125

    (53) ctes -> CHAR_CTE . pn_CTEChar
    (129) pn_CTEChar -> .

    MULT_OP         reduce using rule 129 (pn_CTEChar -> .)
    DIV_OP          reduce using rule 129 (pn_CTEChar -> .)
    PLUS_OP         reduce using rule 129 (pn_CTEChar -> .)
    MINUS_OP        reduce using rule 129 (pn_CTEChar -> .)
    LT_LOG          reduce using rule 129 (pn_CTEChar -> .)
    GT_LOG          reduce using rule 129 (pn_CTEChar -> .)
    LTE_LOG         reduce using rule 129 (pn_CTEChar -> .)
    GTE_LOG         reduce using rule 129 (pn_CTEChar -> .)
    NE_LOG          reduce using rule 129 (pn_CTEChar -> .)
    EQUAL_LOG       reduce using rule 129 (pn_CTEChar -> .)
    AND_LOG         reduce using rule 129 (pn_CTEChar -> .)
    OR_LOG          reduce using rule 129 (pn_CTEChar -> .)
    ASSIGN          reduce using rule 129 (pn_CTEChar -> .)
    RPAREN          reduce using rule 129 (pn_CTEChar -> .)
    SEMIC           reduce using rule 129 (pn_CTEChar -> .)
    RBRACK          reduce using rule 129 (pn_CTEChar -> .)
    COMMA           reduce using rule 129 (pn_CTEChar -> .)
    HASTA           reduce using rule 129 (pn_CTEChar -> .)
    HACER           reduce using rule 129 (pn_CTEChar -> .)

    pn_CTEChar                     shift and go to state 177

state 126

    (54) ctes -> STRING_CTE . pn_CTEString
    (130) pn_CTEString -> .

    MULT_OP         reduce using rule 130 (pn_CTEString -> .)
    DIV_OP          reduce using rule 130 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 130 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 130 (pn_CTEString -> .)
    LT_LOG          reduce using rule 130 (pn_CTEString -> .)
    GT_LOG          reduce using rule 130 (pn_CTEString -> .)
    LTE_LOG         reduce using rule 130 (pn_CTEString -> .)
    GTE_LOG         reduce using rule 130 (pn_CTEString -> .)
    NE_LOG          reduce using rule 130 (pn_CTEString -> .)
    EQUAL_LOG       reduce using rule 130 (pn_CTEString -> .)
    AND_LOG         reduce using rule 130 (pn_CTEString -> .)
    OR_LOG          reduce using rule 130 (pn_CTEString -> .)
    ASSIGN          reduce using rule 130 (pn_CTEString -> .)
    RPAREN          reduce using rule 130 (pn_CTEString -> .)
    SEMIC           reduce using rule 130 (pn_CTEString -> .)
    RBRACK          reduce using rule 130 (pn_CTEString -> .)
    COMMA           reduce using rule 130 (pn_CTEString -> .)
    HASTA           reduce using rule 130 (pn_CTEString -> .)
    HACER           reduce using rule 130 (pn_CTEString -> .)

    pn_CTEString                   shift and go to state 178

state 127

    (55) ctes -> MINUS_OP . pn_CTENeg num
    (126) pn_CTENeg -> .

    INT_CTE         reduce using rule 126 (pn_CTENeg -> .)
    FLOAT_CTE       reduce using rule 126 (pn_CTENeg -> .)

    pn_CTENeg                      shift and go to state 179

state 128

    (56) ctes -> num .

    MULT_OP         reduce using rule 56 (ctes -> num .)
    DIV_OP          reduce using rule 56 (ctes -> num .)
    PLUS_OP         reduce using rule 56 (ctes -> num .)
    MINUS_OP        reduce using rule 56 (ctes -> num .)
    LT_LOG          reduce using rule 56 (ctes -> num .)
    GT_LOG          reduce using rule 56 (ctes -> num .)
    LTE_LOG         reduce using rule 56 (ctes -> num .)
    GTE_LOG         reduce using rule 56 (ctes -> num .)
    NE_LOG          reduce using rule 56 (ctes -> num .)
    EQUAL_LOG       reduce using rule 56 (ctes -> num .)
    AND_LOG         reduce using rule 56 (ctes -> num .)
    OR_LOG          reduce using rule 56 (ctes -> num .)
    ASSIGN          reduce using rule 56 (ctes -> num .)
    RPAREN          reduce using rule 56 (ctes -> num .)
    SEMIC           reduce using rule 56 (ctes -> num .)
    RBRACK          reduce using rule 56 (ctes -> num .)
    COMMA           reduce using rule 56 (ctes -> num .)
    HASTA           reduce using rule 56 (ctes -> num .)
    HACER           reduce using rule 56 (ctes -> num .)


state 129

    (59) variable -> ID . pn_Expresion1 varDim
    (75) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (131) pn_Expresion1 -> .
    (123) pn_FuncionLlamada1 -> .

    LBRACK          reduce using rule 131 (pn_Expresion1 -> .)
    MULT_OP         reduce using rule 131 (pn_Expresion1 -> .)
    DIV_OP          reduce using rule 131 (pn_Expresion1 -> .)
    PLUS_OP         reduce using rule 131 (pn_Expresion1 -> .)
    MINUS_OP        reduce using rule 131 (pn_Expresion1 -> .)
    LT_LOG          reduce using rule 131 (pn_Expresion1 -> .)
    GT_LOG          reduce using rule 131 (pn_Expresion1 -> .)
    LTE_LOG         reduce using rule 131 (pn_Expresion1 -> .)
    GTE_LOG         reduce using rule 131 (pn_Expresion1 -> .)
    NE_LOG          reduce using rule 131 (pn_Expresion1 -> .)
    EQUAL_LOG       reduce using rule 131 (pn_Expresion1 -> .)
    AND_LOG         reduce using rule 131 (pn_Expresion1 -> .)
    OR_LOG          reduce using rule 131 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 131 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 131 (pn_Expresion1 -> .)
    SEMIC           reduce using rule 131 (pn_Expresion1 -> .)
    RBRACK          reduce using rule 131 (pn_Expresion1 -> .)
    COMMA           reduce using rule 131 (pn_Expresion1 -> .)
    HASTA           reduce using rule 131 (pn_Expresion1 -> .)
    HACER           reduce using rule 131 (pn_Expresion1 -> .)
    LPAREN          reduce using rule 123 (pn_FuncionLlamada1 -> .)

    pn_Expresion1                  shift and go to state 99
    pn_FuncionLlamada1             shift and go to state 98

state 130

    (57) num -> INT_CTE . pn_CTEInt
    (127) pn_CTEInt -> .

    MULT_OP         reduce using rule 127 (pn_CTEInt -> .)
    DIV_OP          reduce using rule 127 (pn_CTEInt -> .)
    PLUS_OP         reduce using rule 127 (pn_CTEInt -> .)
    MINUS_OP        reduce using rule 127 (pn_CTEInt -> .)
    LT_LOG          reduce using rule 127 (pn_CTEInt -> .)
    GT_LOG          reduce using rule 127 (pn_CTEInt -> .)
    LTE_LOG         reduce using rule 127 (pn_CTEInt -> .)
    GTE_LOG         reduce using rule 127 (pn_CTEInt -> .)
    NE_LOG          reduce using rule 127 (pn_CTEInt -> .)
    EQUAL_LOG       reduce using rule 127 (pn_CTEInt -> .)
    AND_LOG         reduce using rule 127 (pn_CTEInt -> .)
    OR_LOG          reduce using rule 127 (pn_CTEInt -> .)
    ASSIGN          reduce using rule 127 (pn_CTEInt -> .)
    RPAREN          reduce using rule 127 (pn_CTEInt -> .)
    SEMIC           reduce using rule 127 (pn_CTEInt -> .)
    RBRACK          reduce using rule 127 (pn_CTEInt -> .)
    COMMA           reduce using rule 127 (pn_CTEInt -> .)
    HASTA           reduce using rule 127 (pn_CTEInt -> .)
    HACER           reduce using rule 127 (pn_CTEInt -> .)

    pn_CTEInt                      shift and go to state 180

state 131

    (58) num -> FLOAT_CTE . pn_CTEFloat
    (128) pn_CTEFloat -> .

    MULT_OP         reduce using rule 128 (pn_CTEFloat -> .)
    DIV_OP          reduce using rule 128 (pn_CTEFloat -> .)
    PLUS_OP         reduce using rule 128 (pn_CTEFloat -> .)
    MINUS_OP        reduce using rule 128 (pn_CTEFloat -> .)
    LT_LOG          reduce using rule 128 (pn_CTEFloat -> .)
    GT_LOG          reduce using rule 128 (pn_CTEFloat -> .)
    LTE_LOG         reduce using rule 128 (pn_CTEFloat -> .)
    GTE_LOG         reduce using rule 128 (pn_CTEFloat -> .)
    NE_LOG          reduce using rule 128 (pn_CTEFloat -> .)
    EQUAL_LOG       reduce using rule 128 (pn_CTEFloat -> .)
    AND_LOG         reduce using rule 128 (pn_CTEFloat -> .)
    OR_LOG          reduce using rule 128 (pn_CTEFloat -> .)
    ASSIGN          reduce using rule 128 (pn_CTEFloat -> .)
    RPAREN          reduce using rule 128 (pn_CTEFloat -> .)
    SEMIC           reduce using rule 128 (pn_CTEFloat -> .)
    RBRACK          reduce using rule 128 (pn_CTEFloat -> .)
    COMMA           reduce using rule 128 (pn_CTEFloat -> .)
    HASTA           reduce using rule 128 (pn_CTEFloat -> .)
    HACER           reduce using rule 128 (pn_CTEFloat -> .)

    pn_CTEFloat                    shift and go to state 181

state 132

    (76) regresa -> REGRESA pn_Secuencial3 LPAREN . exp RPAREN pn_Regresa SEMIC
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 182
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 133

    (65) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN . expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (82) expresion -> . mega_exp expresion1
    (85) mega_exp -> . super_exp meg
    (90) super_exp -> . exp sp
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    expresion                      shift and go to state 183
    mega_exp                       shift and go to state 117
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 134

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable . ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    ASSIGN          shift and go to state 184


state 135

    (59) variable -> ID . pn_Expresion1 varDim
    (131) pn_Expresion1 -> .

    LBRACK          reduce using rule 131 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 131 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 99

state 136

    (75) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN . pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (136) pn_Expresion6 -> .

    LPAREN          reduce using rule 136 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion6 -> .)
    ID              reduce using rule 136 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion6 -> .)
    RPAREN          reduce using rule 136 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 185

state 137

    (59) variable -> ID pn_Expresion1 varDim .

    ASSIGN          reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    MULT_OP         reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    DIV_OP          reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    PLUS_OP         reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    MINUS_OP        reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    LT_LOG          reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    GT_LOG          reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    LTE_LOG         reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    GTE_LOG         reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    NE_LOG          reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    EQUAL_LOG       reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    AND_LOG         reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    OR_LOG          reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    RPAREN          reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    SEMIC           reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    RBRACK          reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    COMMA           reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    HASTA           reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)
    HACER           reduce using rule 59 (variable -> ID pn_Expresion1 varDim .)


state 138

    (60) varDim -> LBRACK . expresion RBRACK
    (82) expresion -> . mega_exp expresion1
    (85) mega_exp -> . super_exp meg
    (90) super_exp -> . exp sp
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    expresion                      shift and go to state 186
    mega_exp                       shift and go to state 117
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 139

    (61) varDim -> empty .

    ASSIGN          reduce using rule 61 (varDim -> empty .)
    MULT_OP         reduce using rule 61 (varDim -> empty .)
    DIV_OP          reduce using rule 61 (varDim -> empty .)
    PLUS_OP         reduce using rule 61 (varDim -> empty .)
    MINUS_OP        reduce using rule 61 (varDim -> empty .)
    LT_LOG          reduce using rule 61 (varDim -> empty .)
    GT_LOG          reduce using rule 61 (varDim -> empty .)
    LTE_LOG         reduce using rule 61 (varDim -> empty .)
    GTE_LOG         reduce using rule 61 (varDim -> empty .)
    NE_LOG          reduce using rule 61 (varDim -> empty .)
    EQUAL_LOG       reduce using rule 61 (varDim -> empty .)
    AND_LOG         reduce using rule 61 (varDim -> empty .)
    OR_LOG          reduce using rule 61 (varDim -> empty .)
    RPAREN          reduce using rule 61 (varDim -> empty .)
    SEMIC           reduce using rule 61 (varDim -> empty .)
    RBRACK          reduce using rule 61 (varDim -> empty .)
    COMMA           reduce using rule 61 (varDim -> empty .)
    HASTA           reduce using rule 61 (varDim -> empty .)
    HACER           reduce using rule 61 (varDim -> empty .)


state 140

    (77) escritura -> ESCRIBE pn_Secuencial3 LPAREN . escritura2 RPAREN SEMIC pn_Secuencial5
    (78) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (79) escritura2 -> . exp pn_Secuencial4 escritura3
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 188
    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    escritura2                     shift and go to state 187
    exp                            shift and go to state 189
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 141

    (70) lectura -> LEE pn_Secuencial3 LPAREN . varLectura RPAREN SEMIC pn_Secuencial5
    (67) varLectura -> . ID pn_Expresion1 varLectura2

    ID              shift and go to state 191

    varLectura                     shift and go to state 190

state 142

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN . pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (136) pn_Expresion6 -> .

    LPAREN          reduce using rule 136 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion6 -> .)
    ID              reduce using rule 136 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 192

state 143

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN . pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (136) pn_Expresion6 -> .

    LPAREN          reduce using rule 136 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion6 -> .)
    ID              reduce using rule 136 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 193

state 144

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (136) pn_Expresion6 -> .

    LPAREN          reduce using rule 136 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion6 -> .)
    ID              reduce using rule 136 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 194

state 145

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (136) pn_Expresion6 -> .

    LPAREN          reduce using rule 136 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion6 -> .)
    ID              reduce using rule 136 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 195

state 146

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN . pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (136) pn_Expresion6 -> .

    LPAREN          reduce using rule 136 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion6 -> .)
    ID              reduce using rule 136 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 196

state 147

    (44) funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN . RPAREN SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 197


state 148

    (45) funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN . RPAREN SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 198


state 149

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (136) pn_Expresion6 -> .

    LPAREN          reduce using rule 136 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion6 -> .)
    ID              reduce using rule 136 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 199

state 150

    (47) funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN . RPAREN SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 200


state 151

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables . bloque pn_Funcion3
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 201

state 152

    (23) lista_parametros -> tipo ID pn_Funcion1 lista_parametros2 .

    RPAREN          reduce using rule 23 (lista_parametros -> tipo ID pn_Funcion1 lista_parametros2 .)


state 153

    (24) lista_parametros2 -> COMMA . lista_parametros
    (23) lista_parametros -> . tipo ID pn_Funcion1 lista_parametros2
    (13) tipo -> . INT_TYPE pn_SetCurrentType
    (14) tipo -> . CHAR_TYPE pn_SetCurrentType
    (15) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    lista_parametros               shift and go to state 202
    tipo                           shift and go to state 56

state 154

    (25) lista_parametros2 -> empty .

    RPAREN          reduce using rule 25 (lista_parametros2 -> empty .)


state 155

    (52) asignacion -> variable ASSIGN pn_Secuencial1 expresion . SEMIC pn_Secuencial2

    SEMIC           shift and go to state 203


state 156

    (110) factor -> LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 204
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 157

    (62) condicion -> SI LPAREN expresion RPAREN . pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (148) pn_Condicion1 -> .

    ENTONCES        reduce using rule 148 (pn_Condicion1 -> .)

    pn_Condicion1                  shift and go to state 205

state 158

    (82) expresion -> mega_exp expresion1 .

    RPAREN          reduce using rule 82 (expresion -> mega_exp expresion1 .)
    SEMIC           reduce using rule 82 (expresion -> mega_exp expresion1 .)
    RBRACK          reduce using rule 82 (expresion -> mega_exp expresion1 .)
    COMMA           reduce using rule 82 (expresion -> mega_exp expresion1 .)


state 159

    (83) expresion1 -> ASSIGN . expresion
    (82) expresion -> . mega_exp expresion1
    (85) mega_exp -> . super_exp meg
    (90) super_exp -> . exp sp
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    expresion                      shift and go to state 206
    mega_exp                       shift and go to state 117
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 160

    (84) expresion1 -> empty .

    RPAREN          reduce using rule 84 (expresion1 -> empty .)
    SEMIC           reduce using rule 84 (expresion1 -> empty .)
    RBRACK          reduce using rule 84 (expresion1 -> empty .)
    COMMA           reduce using rule 84 (expresion1 -> empty .)


state 161

    (85) mega_exp -> super_exp meg .

    ASSIGN          reduce using rule 85 (mega_exp -> super_exp meg .)
    RPAREN          reduce using rule 85 (mega_exp -> super_exp meg .)
    SEMIC           reduce using rule 85 (mega_exp -> super_exp meg .)
    RBRACK          reduce using rule 85 (mega_exp -> super_exp meg .)
    COMMA           reduce using rule 85 (mega_exp -> super_exp meg .)


state 162

    (86) meg -> op_l . pn_Expresion10 mega_exp pn_Expresion11
    (140) pn_Expresion10 -> .

    LPAREN          reduce using rule 140 (pn_Expresion10 -> .)
    CHAR_CTE        reduce using rule 140 (pn_Expresion10 -> .)
    STRING_CTE      reduce using rule 140 (pn_Expresion10 -> .)
    MINUS_OP        reduce using rule 140 (pn_Expresion10 -> .)
    ID              reduce using rule 140 (pn_Expresion10 -> .)
    INT_CTE         reduce using rule 140 (pn_Expresion10 -> .)
    FLOAT_CTE       reduce using rule 140 (pn_Expresion10 -> .)

    pn_Expresion10                 shift and go to state 207

state 163

    (87) meg -> empty .

    ASSIGN          reduce using rule 87 (meg -> empty .)
    RPAREN          reduce using rule 87 (meg -> empty .)
    SEMIC           reduce using rule 87 (meg -> empty .)
    RBRACK          reduce using rule 87 (meg -> empty .)
    COMMA           reduce using rule 87 (meg -> empty .)


state 164

    (88) op_l -> AND_LOG .

    LPAREN          reduce using rule 88 (op_l -> AND_LOG .)
    CHAR_CTE        reduce using rule 88 (op_l -> AND_LOG .)
    STRING_CTE      reduce using rule 88 (op_l -> AND_LOG .)
    MINUS_OP        reduce using rule 88 (op_l -> AND_LOG .)
    ID              reduce using rule 88 (op_l -> AND_LOG .)
    INT_CTE         reduce using rule 88 (op_l -> AND_LOG .)
    FLOAT_CTE       reduce using rule 88 (op_l -> AND_LOG .)


state 165

    (89) op_l -> OR_LOG .

    LPAREN          reduce using rule 89 (op_l -> OR_LOG .)
    CHAR_CTE        reduce using rule 89 (op_l -> OR_LOG .)
    STRING_CTE      reduce using rule 89 (op_l -> OR_LOG .)
    MINUS_OP        reduce using rule 89 (op_l -> OR_LOG .)
    ID              reduce using rule 89 (op_l -> OR_LOG .)
    INT_CTE         reduce using rule 89 (op_l -> OR_LOG .)
    FLOAT_CTE       reduce using rule 89 (op_l -> OR_LOG .)


state 166

    (90) super_exp -> exp sp .

    AND_LOG         reduce using rule 90 (super_exp -> exp sp .)
    OR_LOG          reduce using rule 90 (super_exp -> exp sp .)
    ASSIGN          reduce using rule 90 (super_exp -> exp sp .)
    RPAREN          reduce using rule 90 (super_exp -> exp sp .)
    SEMIC           reduce using rule 90 (super_exp -> exp sp .)
    RBRACK          reduce using rule 90 (super_exp -> exp sp .)
    COMMA           reduce using rule 90 (super_exp -> exp sp .)


state 167

    (91) sp -> op_r . exp pn_Expresion9
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 208
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 168

    (92) sp -> empty .

    AND_LOG         reduce using rule 92 (sp -> empty .)
    OR_LOG          reduce using rule 92 (sp -> empty .)
    ASSIGN          reduce using rule 92 (sp -> empty .)
    RPAREN          reduce using rule 92 (sp -> empty .)
    SEMIC           reduce using rule 92 (sp -> empty .)
    RBRACK          reduce using rule 92 (sp -> empty .)
    COMMA           reduce using rule 92 (sp -> empty .)


state 169

    (93) op_r -> LT_LOG . pn_Expresion8
    (138) pn_Expresion8 -> .

    LPAREN          reduce using rule 138 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 138 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 138 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 138 (pn_Expresion8 -> .)
    ID              reduce using rule 138 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 138 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 138 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 209

state 170

    (94) op_r -> GT_LOG . pn_Expresion8
    (138) pn_Expresion8 -> .

    LPAREN          reduce using rule 138 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 138 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 138 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 138 (pn_Expresion8 -> .)
    ID              reduce using rule 138 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 138 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 138 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 210

state 171

    (95) op_r -> LTE_LOG . pn_Expresion8
    (138) pn_Expresion8 -> .

    LPAREN          reduce using rule 138 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 138 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 138 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 138 (pn_Expresion8 -> .)
    ID              reduce using rule 138 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 138 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 138 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 211

state 172

    (96) op_r -> GTE_LOG . pn_Expresion8
    (138) pn_Expresion8 -> .

    LPAREN          reduce using rule 138 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 138 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 138 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 138 (pn_Expresion8 -> .)
    ID              reduce using rule 138 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 138 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 138 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 212

state 173

    (97) op_r -> NE_LOG . pn_Expresion8
    (138) pn_Expresion8 -> .

    LPAREN          reduce using rule 138 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 138 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 138 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 138 (pn_Expresion8 -> .)
    ID              reduce using rule 138 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 138 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 138 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 213

state 174

    (98) op_r -> EQUAL_LOG . pn_Expresion8
    (138) pn_Expresion8 -> .

    LPAREN          reduce using rule 138 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 138 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 138 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 138 (pn_Expresion8 -> .)
    ID              reduce using rule 138 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 138 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 138 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 214

state 175

    (99) exp -> termino pn_Expresion4 . exp1
    (100) exp1 -> . op_a exp
    (101) exp1 -> . empty
    (102) op_a -> . PLUS_OP pn_Expresion2
    (103) op_a -> . MINUS_OP pn_Expresion2
    (113) empty -> .

    PLUS_OP         shift and go to state 218
    MINUS_OP        shift and go to state 219
    LT_LOG          reduce using rule 113 (empty -> .)
    GT_LOG          reduce using rule 113 (empty -> .)
    LTE_LOG         reduce using rule 113 (empty -> .)
    GTE_LOG         reduce using rule 113 (empty -> .)
    NE_LOG          reduce using rule 113 (empty -> .)
    EQUAL_LOG       reduce using rule 113 (empty -> .)
    AND_LOG         reduce using rule 113 (empty -> .)
    OR_LOG          reduce using rule 113 (empty -> .)
    ASSIGN          reduce using rule 113 (empty -> .)
    RPAREN          reduce using rule 113 (empty -> .)
    SEMIC           reduce using rule 113 (empty -> .)
    RBRACK          reduce using rule 113 (empty -> .)
    COMMA           reduce using rule 113 (empty -> .)
    HASTA           reduce using rule 113 (empty -> .)
    HACER           reduce using rule 113 (empty -> .)

    exp1                           shift and go to state 215
    op_a                           shift and go to state 216
    empty                          shift and go to state 217

state 176

    (104) termino -> factor pn_Expresion5 . term
    (105) term -> . op_a1 termino
    (106) term -> . empty
    (107) op_a1 -> . MULT_OP pn_Expresion3
    (108) op_a1 -> . DIV_OP pn_Expresion3
    (113) empty -> .

    MULT_OP         shift and go to state 223
    DIV_OP          shift and go to state 224
    PLUS_OP         reduce using rule 113 (empty -> .)
    MINUS_OP        reduce using rule 113 (empty -> .)
    LT_LOG          reduce using rule 113 (empty -> .)
    GT_LOG          reduce using rule 113 (empty -> .)
    LTE_LOG         reduce using rule 113 (empty -> .)
    GTE_LOG         reduce using rule 113 (empty -> .)
    NE_LOG          reduce using rule 113 (empty -> .)
    EQUAL_LOG       reduce using rule 113 (empty -> .)
    AND_LOG         reduce using rule 113 (empty -> .)
    OR_LOG          reduce using rule 113 (empty -> .)
    ASSIGN          reduce using rule 113 (empty -> .)
    RPAREN          reduce using rule 113 (empty -> .)
    SEMIC           reduce using rule 113 (empty -> .)
    RBRACK          reduce using rule 113 (empty -> .)
    COMMA           reduce using rule 113 (empty -> .)
    HASTA           reduce using rule 113 (empty -> .)
    HACER           reduce using rule 113 (empty -> .)

    term                           shift and go to state 220
    op_a1                          shift and go to state 221
    empty                          shift and go to state 222

state 177

    (53) ctes -> CHAR_CTE pn_CTEChar .

    MULT_OP         reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    DIV_OP          reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    PLUS_OP         reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    MINUS_OP        reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    LT_LOG          reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    GT_LOG          reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    LTE_LOG         reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    GTE_LOG         reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    NE_LOG          reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    EQUAL_LOG       reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    AND_LOG         reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    OR_LOG          reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    ASSIGN          reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    RPAREN          reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    SEMIC           reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    RBRACK          reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    COMMA           reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    HASTA           reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)
    HACER           reduce using rule 53 (ctes -> CHAR_CTE pn_CTEChar .)


state 178

    (54) ctes -> STRING_CTE pn_CTEString .

    MULT_OP         reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    DIV_OP          reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    PLUS_OP         reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    MINUS_OP        reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    LT_LOG          reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    GT_LOG          reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    LTE_LOG         reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    GTE_LOG         reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    NE_LOG          reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    EQUAL_LOG       reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    AND_LOG         reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    OR_LOG          reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    ASSIGN          reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    RPAREN          reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    SEMIC           reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    RBRACK          reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    COMMA           reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    HASTA           reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)
    HACER           reduce using rule 54 (ctes -> STRING_CTE pn_CTEString .)


state 179

    (55) ctes -> MINUS_OP pn_CTENeg . num
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    num                            shift and go to state 225

state 180

    (57) num -> INT_CTE pn_CTEInt .

    MULT_OP         reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    DIV_OP          reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    PLUS_OP         reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    MINUS_OP        reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    LT_LOG          reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    GT_LOG          reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    LTE_LOG         reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    GTE_LOG         reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    NE_LOG          reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    EQUAL_LOG       reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    AND_LOG         reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    OR_LOG          reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    ASSIGN          reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    RPAREN          reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    SEMIC           reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    RBRACK          reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    COMMA           reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    HASTA           reduce using rule 57 (num -> INT_CTE pn_CTEInt .)
    HACER           reduce using rule 57 (num -> INT_CTE pn_CTEInt .)


state 181

    (58) num -> FLOAT_CTE pn_CTEFloat .

    MULT_OP         reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    DIV_OP          reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    PLUS_OP         reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    MINUS_OP        reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    LT_LOG          reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    GT_LOG          reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    LTE_LOG         reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    GTE_LOG         reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    NE_LOG          reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    EQUAL_LOG       reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    AND_LOG         reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    OR_LOG          reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    ASSIGN          reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    RPAREN          reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    SEMIC           reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    RBRACK          reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    COMMA           reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    HASTA           reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)
    HACER           reduce using rule 58 (num -> FLOAT_CTE pn_CTEFloat .)


state 182

    (76) regresa -> REGRESA pn_Secuencial3 LPAREN exp . RPAREN pn_Regresa SEMIC

    RPAREN          shift and go to state 226


state 183

    (65) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion . RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    RPAREN          shift and go to state 227


state 184

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN . pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (142) pn_Secuencial1 -> .

    LPAREN          reduce using rule 142 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 142 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 142 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 142 (pn_Secuencial1 -> .)
    ID              reduce using rule 142 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 142 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 142 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 228

state 185

    (75) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 . llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (71) llamada_param -> . expresion pn_FuncionLlamada2 llamada_param2
    (72) llamada_param -> . empty
    (82) expresion -> . mega_exp expresion1
    (113) empty -> .
    (85) mega_exp -> . super_exp meg
    (90) super_exp -> . exp sp
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    RPAREN          reduce using rule 113 (empty -> .)
    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    llamada_param                  shift and go to state 229
    expresion                      shift and go to state 230
    empty                          shift and go to state 231
    mega_exp                       shift and go to state 117
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 186

    (60) varDim -> LBRACK expresion . RBRACK

    RBRACK          shift and go to state 232


state 187

    (77) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 233


state 188

    (78) escritura2 -> STRING_CTE . pn_Secuencial4 escritura3
    (54) ctes -> STRING_CTE . pn_CTEString
    (145) pn_Secuencial4 -> .
    (130) pn_CTEString -> .

  ! reduce/reduce conflict for COMMA resolved using rule 130 (pn_CTEString -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 130 (pn_CTEString -> .)
    MULT_OP         reduce using rule 130 (pn_CTEString -> .)
    DIV_OP          reduce using rule 130 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 130 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 130 (pn_CTEString -> .)
    COMMA           reduce using rule 130 (pn_CTEString -> .)
    RPAREN          reduce using rule 130 (pn_CTEString -> .)

  ! COMMA           [ reduce using rule 145 (pn_Secuencial4 -> .) ]
  ! RPAREN          [ reduce using rule 145 (pn_Secuencial4 -> .) ]

    pn_Secuencial4                 shift and go to state 234
    pn_CTEString                   shift and go to state 178

state 189

    (79) escritura2 -> exp . pn_Secuencial4 escritura3
    (145) pn_Secuencial4 -> .

    COMMA           reduce using rule 145 (pn_Secuencial4 -> .)
    RPAREN          reduce using rule 145 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 235

state 190

    (70) lectura -> LEE pn_Secuencial3 LPAREN varLectura . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 236


state 191

    (67) varLectura -> ID . pn_Expresion1 varLectura2
    (131) pn_Expresion1 -> .

    COMMA           reduce using rule 131 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 131 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 237

state 192

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 . exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 238
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 193

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 . exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 239
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 194

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 240
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 195

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 241
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 196

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 . exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 242
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 197

    (44) funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 243


state 198

    (45) funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 244


state 199

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 245
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 200

    (47) funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 246


state 201

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque . pn_Funcion3
    (119) pn_Funcion3 -> .

    FUNCION         reduce using rule 119 (pn_Funcion3 -> .)
    PRINCIPAL       reduce using rule 119 (pn_Funcion3 -> .)

    pn_Funcion3                    shift and go to state 247

state 202

    (24) lista_parametros2 -> COMMA lista_parametros .

    RPAREN          reduce using rule 24 (lista_parametros2 -> COMMA lista_parametros .)


state 203

    (52) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC . pn_Secuencial2
    (143) pn_Secuencial2 -> .

    SI              reduce using rule 143 (pn_Secuencial2 -> .)
    REGRESA         reduce using rule 143 (pn_Secuencial2 -> .)
    MIENTRAS        reduce using rule 143 (pn_Secuencial2 -> .)
    DESDE           reduce using rule 143 (pn_Secuencial2 -> .)
    ID              reduce using rule 143 (pn_Secuencial2 -> .)
    ESCRIBE         reduce using rule 143 (pn_Secuencial2 -> .)
    LEE             reduce using rule 143 (pn_Secuencial2 -> .)
    LINEA           reduce using rule 143 (pn_Secuencial2 -> .)
    PUNTO           reduce using rule 143 (pn_Secuencial2 -> .)
    CIRCULO         reduce using rule 143 (pn_Secuencial2 -> .)
    COLOR           reduce using rule 143 (pn_Secuencial2 -> .)
    ARCO            reduce using rule 143 (pn_Secuencial2 -> .)
    PENUP           reduce using rule 143 (pn_Secuencial2 -> .)
    PENDOWN         reduce using rule 143 (pn_Secuencial2 -> .)
    GROSOR          reduce using rule 143 (pn_Secuencial2 -> .)
    LIMPIAR         reduce using rule 143 (pn_Secuencial2 -> .)
    RCURLY          reduce using rule 143 (pn_Secuencial2 -> .)

    pn_Secuencial2                 shift and go to state 248

state 204

    (110) factor -> LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7

    RPAREN          shift and go to state 249


state 205

    (62) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 . ENTONCES bloque else pn_Condicion2

    ENTONCES        shift and go to state 250


state 206

    (83) expresion1 -> ASSIGN expresion .

    RPAREN          reduce using rule 83 (expresion1 -> ASSIGN expresion .)
    SEMIC           reduce using rule 83 (expresion1 -> ASSIGN expresion .)
    RBRACK          reduce using rule 83 (expresion1 -> ASSIGN expresion .)
    COMMA           reduce using rule 83 (expresion1 -> ASSIGN expresion .)


state 207

    (86) meg -> op_l pn_Expresion10 . mega_exp pn_Expresion11
    (85) mega_exp -> . super_exp meg
    (90) super_exp -> . exp sp
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    mega_exp                       shift and go to state 251
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 208

    (91) sp -> op_r exp . pn_Expresion9
    (139) pn_Expresion9 -> .

    AND_LOG         reduce using rule 139 (pn_Expresion9 -> .)
    OR_LOG          reduce using rule 139 (pn_Expresion9 -> .)
    ASSIGN          reduce using rule 139 (pn_Expresion9 -> .)
    RPAREN          reduce using rule 139 (pn_Expresion9 -> .)
    SEMIC           reduce using rule 139 (pn_Expresion9 -> .)
    RBRACK          reduce using rule 139 (pn_Expresion9 -> .)
    COMMA           reduce using rule 139 (pn_Expresion9 -> .)

    pn_Expresion9                  shift and go to state 252

state 209

    (93) op_r -> LT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 93 (op_r -> LT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 93 (op_r -> LT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 93 (op_r -> LT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 93 (op_r -> LT_LOG pn_Expresion8 .)
    ID              reduce using rule 93 (op_r -> LT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 93 (op_r -> LT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 93 (op_r -> LT_LOG pn_Expresion8 .)


state 210

    (94) op_r -> GT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 94 (op_r -> GT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 94 (op_r -> GT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 94 (op_r -> GT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 94 (op_r -> GT_LOG pn_Expresion8 .)
    ID              reduce using rule 94 (op_r -> GT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 94 (op_r -> GT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 94 (op_r -> GT_LOG pn_Expresion8 .)


state 211

    (95) op_r -> LTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 95 (op_r -> LTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 95 (op_r -> LTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 95 (op_r -> LTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 95 (op_r -> LTE_LOG pn_Expresion8 .)
    ID              reduce using rule 95 (op_r -> LTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 95 (op_r -> LTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 95 (op_r -> LTE_LOG pn_Expresion8 .)


state 212

    (96) op_r -> GTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 96 (op_r -> GTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 96 (op_r -> GTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 96 (op_r -> GTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 96 (op_r -> GTE_LOG pn_Expresion8 .)
    ID              reduce using rule 96 (op_r -> GTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 96 (op_r -> GTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 96 (op_r -> GTE_LOG pn_Expresion8 .)


state 213

    (97) op_r -> NE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 97 (op_r -> NE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 97 (op_r -> NE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 97 (op_r -> NE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 97 (op_r -> NE_LOG pn_Expresion8 .)
    ID              reduce using rule 97 (op_r -> NE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 97 (op_r -> NE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 97 (op_r -> NE_LOG pn_Expresion8 .)


state 214

    (98) op_r -> EQUAL_LOG pn_Expresion8 .

    LPAREN          reduce using rule 98 (op_r -> EQUAL_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 98 (op_r -> EQUAL_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 98 (op_r -> EQUAL_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 98 (op_r -> EQUAL_LOG pn_Expresion8 .)
    ID              reduce using rule 98 (op_r -> EQUAL_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 98 (op_r -> EQUAL_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 98 (op_r -> EQUAL_LOG pn_Expresion8 .)


state 215

    (99) exp -> termino pn_Expresion4 exp1 .

    LT_LOG          reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    GT_LOG          reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    LTE_LOG         reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    GTE_LOG         reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    NE_LOG          reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    EQUAL_LOG       reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    AND_LOG         reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    OR_LOG          reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    ASSIGN          reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    RPAREN          reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    SEMIC           reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    RBRACK          reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    COMMA           reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    HASTA           reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)
    HACER           reduce using rule 99 (exp -> termino pn_Expresion4 exp1 .)


state 216

    (100) exp1 -> op_a . exp
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 253
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 217

    (101) exp1 -> empty .

    LT_LOG          reduce using rule 101 (exp1 -> empty .)
    GT_LOG          reduce using rule 101 (exp1 -> empty .)
    LTE_LOG         reduce using rule 101 (exp1 -> empty .)
    GTE_LOG         reduce using rule 101 (exp1 -> empty .)
    NE_LOG          reduce using rule 101 (exp1 -> empty .)
    EQUAL_LOG       reduce using rule 101 (exp1 -> empty .)
    AND_LOG         reduce using rule 101 (exp1 -> empty .)
    OR_LOG          reduce using rule 101 (exp1 -> empty .)
    ASSIGN          reduce using rule 101 (exp1 -> empty .)
    RPAREN          reduce using rule 101 (exp1 -> empty .)
    SEMIC           reduce using rule 101 (exp1 -> empty .)
    RBRACK          reduce using rule 101 (exp1 -> empty .)
    COMMA           reduce using rule 101 (exp1 -> empty .)
    HASTA           reduce using rule 101 (exp1 -> empty .)
    HACER           reduce using rule 101 (exp1 -> empty .)


state 218

    (102) op_a -> PLUS_OP . pn_Expresion2
    (132) pn_Expresion2 -> .

    LPAREN          reduce using rule 132 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 132 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 132 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 132 (pn_Expresion2 -> .)
    ID              reduce using rule 132 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 132 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 132 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 254

state 219

    (103) op_a -> MINUS_OP . pn_Expresion2
    (132) pn_Expresion2 -> .

    LPAREN          reduce using rule 132 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 132 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 132 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 132 (pn_Expresion2 -> .)
    ID              reduce using rule 132 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 132 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 132 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 255

state 220

    (104) termino -> factor pn_Expresion5 term .

    PLUS_OP         reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    MINUS_OP        reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    LT_LOG          reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    GT_LOG          reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    LTE_LOG         reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    GTE_LOG         reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    NE_LOG          reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    EQUAL_LOG       reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    AND_LOG         reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    OR_LOG          reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    ASSIGN          reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    RPAREN          reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    SEMIC           reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    RBRACK          reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    COMMA           reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    HASTA           reduce using rule 104 (termino -> factor pn_Expresion5 term .)
    HACER           reduce using rule 104 (termino -> factor pn_Expresion5 term .)


state 221

    (105) term -> op_a1 . termino
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    termino                        shift and go to state 256
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 222

    (106) term -> empty .

    PLUS_OP         reduce using rule 106 (term -> empty .)
    MINUS_OP        reduce using rule 106 (term -> empty .)
    LT_LOG          reduce using rule 106 (term -> empty .)
    GT_LOG          reduce using rule 106 (term -> empty .)
    LTE_LOG         reduce using rule 106 (term -> empty .)
    GTE_LOG         reduce using rule 106 (term -> empty .)
    NE_LOG          reduce using rule 106 (term -> empty .)
    EQUAL_LOG       reduce using rule 106 (term -> empty .)
    AND_LOG         reduce using rule 106 (term -> empty .)
    OR_LOG          reduce using rule 106 (term -> empty .)
    ASSIGN          reduce using rule 106 (term -> empty .)
    RPAREN          reduce using rule 106 (term -> empty .)
    SEMIC           reduce using rule 106 (term -> empty .)
    RBRACK          reduce using rule 106 (term -> empty .)
    COMMA           reduce using rule 106 (term -> empty .)
    HASTA           reduce using rule 106 (term -> empty .)
    HACER           reduce using rule 106 (term -> empty .)


state 223

    (107) op_a1 -> MULT_OP . pn_Expresion3
    (133) pn_Expresion3 -> .

    LPAREN          reduce using rule 133 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 133 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 133 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 133 (pn_Expresion3 -> .)
    ID              reduce using rule 133 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 133 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 133 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 257

state 224

    (108) op_a1 -> DIV_OP . pn_Expresion3
    (133) pn_Expresion3 -> .

    LPAREN          reduce using rule 133 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 133 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 133 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 133 (pn_Expresion3 -> .)
    ID              reduce using rule 133 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 133 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 133 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 258

state 225

    (55) ctes -> MINUS_OP pn_CTENeg num .

    MULT_OP         reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    DIV_OP          reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    PLUS_OP         reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    MINUS_OP        reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    LT_LOG          reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    GT_LOG          reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    LTE_LOG         reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    GTE_LOG         reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    NE_LOG          reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    EQUAL_LOG       reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    AND_LOG         reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    OR_LOG          reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    ASSIGN          reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    RPAREN          reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    SEMIC           reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    RBRACK          reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    COMMA           reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    HASTA           reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)
    HACER           reduce using rule 55 (ctes -> MINUS_OP pn_CTENeg num .)


state 226

    (76) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN . pn_Regresa SEMIC
    (147) pn_Regresa -> .

    SEMIC           reduce using rule 147 (pn_Regresa -> .)

    pn_Regresa                     shift and go to state 259

state 227

    (65) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN . pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (152) pn_loop_condicional2 -> .

    HACER           reduce using rule 152 (pn_loop_condicional2 -> .)

    pn_loop_condicional2           shift and go to state 260

state 228

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 . exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    variable                       shift and go to state 123
    exp                            shift and go to state 261
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 229

    (75) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param . RPAREN pn_Expresion7 pn_FuncionLlamada3

    RPAREN          shift and go to state 262


state 230

    (71) llamada_param -> expresion . pn_FuncionLlamada2 llamada_param2
    (124) pn_FuncionLlamada2 -> .

    COMMA           reduce using rule 124 (pn_FuncionLlamada2 -> .)
    RPAREN          reduce using rule 124 (pn_FuncionLlamada2 -> .)

    pn_FuncionLlamada2             shift and go to state 263

state 231

    (72) llamada_param -> empty .

    RPAREN          reduce using rule 72 (llamada_param -> empty .)


state 232

    (60) varDim -> LBRACK expresion RBRACK .

    ASSIGN          reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    MULT_OP         reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    DIV_OP          reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    PLUS_OP         reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    MINUS_OP        reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    LT_LOG          reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    GT_LOG          reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    LTE_LOG         reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    GTE_LOG         reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    NE_LOG          reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    EQUAL_LOG       reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    AND_LOG         reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    OR_LOG          reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    RPAREN          reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    SEMIC           reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    RBRACK          reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    COMMA           reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    HASTA           reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)
    HACER           reduce using rule 60 (varDim -> LBRACK expresion RBRACK .)


state 233

    (77) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 264


state 234

    (78) escritura2 -> STRING_CTE pn_Secuencial4 . escritura3
    (80) escritura3 -> . COMMA escritura2
    (81) escritura3 -> . empty
    (113) empty -> .

    COMMA           shift and go to state 266
    RPAREN          reduce using rule 113 (empty -> .)

    escritura3                     shift and go to state 265
    empty                          shift and go to state 267

state 235

    (79) escritura2 -> exp pn_Secuencial4 . escritura3
    (80) escritura3 -> . COMMA escritura2
    (81) escritura3 -> . empty
    (113) empty -> .

    COMMA           shift and go to state 266
    RPAREN          reduce using rule 113 (empty -> .)

    escritura3                     shift and go to state 268
    empty                          shift and go to state 267

state 236

    (70) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 269


state 237

    (67) varLectura -> ID pn_Expresion1 . varLectura2
    (68) varLectura2 -> . COMMA pn_Secuencial4 varLectura
    (69) varLectura2 -> . empty pn_Secuencial4
    (113) empty -> .

    COMMA           shift and go to state 271
    RPAREN          reduce using rule 113 (empty -> .)

    varLectura2                    shift and go to state 270
    empty                          shift and go to state 272

state 238

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp . COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    COMMA           shift and go to state 273


state 239

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp . COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    COMMA           shift and go to state 274


state 240

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 275


state 241

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 276


state 242

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp . COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    COMMA           shift and go to state 277


state 243

    (44) funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC . pn_FuncionEspecial2
    (122) pn_FuncionEspecial2 -> .

    SI              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 122 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 122 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 278

state 244

    (45) funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC . pn_FuncionEspecial2
    (122) pn_FuncionEspecial2 -> .

    SI              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 122 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 122 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 279

state 245

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 280


state 246

    (47) funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC . pn_FuncionEspecial2
    (122) pn_FuncionEspecial2 -> .

    SI              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 122 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 122 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 281

state 247

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .

    FUNCION         reduce using rule 18 (dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)
    PRINCIPAL       reduce using rule 18 (dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)


state 248

    (52) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .

    SI              reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    REGRESA         reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    MIENTRAS        reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    DESDE           reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ID              reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ESCRIBE         reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    LEE             reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    LINEA           reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    PUNTO           reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    CIRCULO         reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    COLOR           reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ARCO            reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    PENUP           reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    PENDOWN         reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    GROSOR          reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    LIMPIAR         reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    RCURLY          reduce using rule 52 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)


state 249

    (110) factor -> LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7
    (137) pn_Expresion7 -> .

    MULT_OP         reduce using rule 137 (pn_Expresion7 -> .)
    DIV_OP          reduce using rule 137 (pn_Expresion7 -> .)
    PLUS_OP         reduce using rule 137 (pn_Expresion7 -> .)
    MINUS_OP        reduce using rule 137 (pn_Expresion7 -> .)
    LT_LOG          reduce using rule 137 (pn_Expresion7 -> .)
    GT_LOG          reduce using rule 137 (pn_Expresion7 -> .)
    LTE_LOG         reduce using rule 137 (pn_Expresion7 -> .)
    GTE_LOG         reduce using rule 137 (pn_Expresion7 -> .)
    NE_LOG          reduce using rule 137 (pn_Expresion7 -> .)
    EQUAL_LOG       reduce using rule 137 (pn_Expresion7 -> .)
    AND_LOG         reduce using rule 137 (pn_Expresion7 -> .)
    OR_LOG          reduce using rule 137 (pn_Expresion7 -> .)
    ASSIGN          reduce using rule 137 (pn_Expresion7 -> .)
    RPAREN          reduce using rule 137 (pn_Expresion7 -> .)
    SEMIC           reduce using rule 137 (pn_Expresion7 -> .)
    RBRACK          reduce using rule 137 (pn_Expresion7 -> .)
    COMMA           reduce using rule 137 (pn_Expresion7 -> .)
    HASTA           reduce using rule 137 (pn_Expresion7 -> .)
    HACER           reduce using rule 137 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 282

state 250

    (62) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES . bloque else pn_Condicion2
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 283

state 251

    (86) meg -> op_l pn_Expresion10 mega_exp . pn_Expresion11
    (141) pn_Expresion11 -> .

    ASSIGN          reduce using rule 141 (pn_Expresion11 -> .)
    RPAREN          reduce using rule 141 (pn_Expresion11 -> .)
    SEMIC           reduce using rule 141 (pn_Expresion11 -> .)
    RBRACK          reduce using rule 141 (pn_Expresion11 -> .)
    COMMA           reduce using rule 141 (pn_Expresion11 -> .)

    pn_Expresion11                 shift and go to state 284

state 252

    (91) sp -> op_r exp pn_Expresion9 .

    AND_LOG         reduce using rule 91 (sp -> op_r exp pn_Expresion9 .)
    OR_LOG          reduce using rule 91 (sp -> op_r exp pn_Expresion9 .)
    ASSIGN          reduce using rule 91 (sp -> op_r exp pn_Expresion9 .)
    RPAREN          reduce using rule 91 (sp -> op_r exp pn_Expresion9 .)
    SEMIC           reduce using rule 91 (sp -> op_r exp pn_Expresion9 .)
    RBRACK          reduce using rule 91 (sp -> op_r exp pn_Expresion9 .)
    COMMA           reduce using rule 91 (sp -> op_r exp pn_Expresion9 .)


state 253

    (100) exp1 -> op_a exp .

    LT_LOG          reduce using rule 100 (exp1 -> op_a exp .)
    GT_LOG          reduce using rule 100 (exp1 -> op_a exp .)
    LTE_LOG         reduce using rule 100 (exp1 -> op_a exp .)
    GTE_LOG         reduce using rule 100 (exp1 -> op_a exp .)
    NE_LOG          reduce using rule 100 (exp1 -> op_a exp .)
    EQUAL_LOG       reduce using rule 100 (exp1 -> op_a exp .)
    AND_LOG         reduce using rule 100 (exp1 -> op_a exp .)
    OR_LOG          reduce using rule 100 (exp1 -> op_a exp .)
    ASSIGN          reduce using rule 100 (exp1 -> op_a exp .)
    RPAREN          reduce using rule 100 (exp1 -> op_a exp .)
    SEMIC           reduce using rule 100 (exp1 -> op_a exp .)
    RBRACK          reduce using rule 100 (exp1 -> op_a exp .)
    COMMA           reduce using rule 100 (exp1 -> op_a exp .)
    HASTA           reduce using rule 100 (exp1 -> op_a exp .)
    HACER           reduce using rule 100 (exp1 -> op_a exp .)


state 254

    (102) op_a -> PLUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 102 (op_a -> PLUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 102 (op_a -> PLUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 102 (op_a -> PLUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 102 (op_a -> PLUS_OP pn_Expresion2 .)
    ID              reduce using rule 102 (op_a -> PLUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 102 (op_a -> PLUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 102 (op_a -> PLUS_OP pn_Expresion2 .)


state 255

    (103) op_a -> MINUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 103 (op_a -> MINUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 103 (op_a -> MINUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 103 (op_a -> MINUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 103 (op_a -> MINUS_OP pn_Expresion2 .)
    ID              reduce using rule 103 (op_a -> MINUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 103 (op_a -> MINUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 103 (op_a -> MINUS_OP pn_Expresion2 .)


state 256

    (105) term -> op_a1 termino .

    PLUS_OP         reduce using rule 105 (term -> op_a1 termino .)
    MINUS_OP        reduce using rule 105 (term -> op_a1 termino .)
    LT_LOG          reduce using rule 105 (term -> op_a1 termino .)
    GT_LOG          reduce using rule 105 (term -> op_a1 termino .)
    LTE_LOG         reduce using rule 105 (term -> op_a1 termino .)
    GTE_LOG         reduce using rule 105 (term -> op_a1 termino .)
    NE_LOG          reduce using rule 105 (term -> op_a1 termino .)
    EQUAL_LOG       reduce using rule 105 (term -> op_a1 termino .)
    AND_LOG         reduce using rule 105 (term -> op_a1 termino .)
    OR_LOG          reduce using rule 105 (term -> op_a1 termino .)
    ASSIGN          reduce using rule 105 (term -> op_a1 termino .)
    RPAREN          reduce using rule 105 (term -> op_a1 termino .)
    SEMIC           reduce using rule 105 (term -> op_a1 termino .)
    RBRACK          reduce using rule 105 (term -> op_a1 termino .)
    COMMA           reduce using rule 105 (term -> op_a1 termino .)
    HASTA           reduce using rule 105 (term -> op_a1 termino .)
    HACER           reduce using rule 105 (term -> op_a1 termino .)


state 257

    (107) op_a1 -> MULT_OP pn_Expresion3 .

    LPAREN          reduce using rule 107 (op_a1 -> MULT_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 107 (op_a1 -> MULT_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 107 (op_a1 -> MULT_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 107 (op_a1 -> MULT_OP pn_Expresion3 .)
    ID              reduce using rule 107 (op_a1 -> MULT_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 107 (op_a1 -> MULT_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 107 (op_a1 -> MULT_OP pn_Expresion3 .)


state 258

    (108) op_a1 -> DIV_OP pn_Expresion3 .

    LPAREN          reduce using rule 108 (op_a1 -> DIV_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 108 (op_a1 -> DIV_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 108 (op_a1 -> DIV_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 108 (op_a1 -> DIV_OP pn_Expresion3 .)
    ID              reduce using rule 108 (op_a1 -> DIV_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 108 (op_a1 -> DIV_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 108 (op_a1 -> DIV_OP pn_Expresion3 .)


state 259

    (76) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa . SEMIC

    SEMIC           shift and go to state 285


state 260

    (65) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 . HACER bloque pn_loop_condicional3

    HACER           shift and go to state 286


state 261

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp . pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (155) pn_loop_no_condicional2 -> .

    HASTA           reduce using rule 155 (pn_loop_no_condicional2 -> .)

    pn_loop_no_condicional2        shift and go to state 287

state 262

    (75) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN . pn_Expresion7 pn_FuncionLlamada3
    (137) pn_Expresion7 -> .

    SI              reduce using rule 137 (pn_Expresion7 -> .)
    REGRESA         reduce using rule 137 (pn_Expresion7 -> .)
    MIENTRAS        reduce using rule 137 (pn_Expresion7 -> .)
    DESDE           reduce using rule 137 (pn_Expresion7 -> .)
    ID              reduce using rule 137 (pn_Expresion7 -> .)
    ESCRIBE         reduce using rule 137 (pn_Expresion7 -> .)
    LEE             reduce using rule 137 (pn_Expresion7 -> .)
    LINEA           reduce using rule 137 (pn_Expresion7 -> .)
    PUNTO           reduce using rule 137 (pn_Expresion7 -> .)
    CIRCULO         reduce using rule 137 (pn_Expresion7 -> .)
    COLOR           reduce using rule 137 (pn_Expresion7 -> .)
    ARCO            reduce using rule 137 (pn_Expresion7 -> .)
    PENUP           reduce using rule 137 (pn_Expresion7 -> .)
    PENDOWN         reduce using rule 137 (pn_Expresion7 -> .)
    GROSOR          reduce using rule 137 (pn_Expresion7 -> .)
    LIMPIAR         reduce using rule 137 (pn_Expresion7 -> .)
    RCURLY          reduce using rule 137 (pn_Expresion7 -> .)
    MULT_OP         reduce using rule 137 (pn_Expresion7 -> .)
    DIV_OP          reduce using rule 137 (pn_Expresion7 -> .)
    PLUS_OP         reduce using rule 137 (pn_Expresion7 -> .)
    MINUS_OP        reduce using rule 137 (pn_Expresion7 -> .)
    LT_LOG          reduce using rule 137 (pn_Expresion7 -> .)
    GT_LOG          reduce using rule 137 (pn_Expresion7 -> .)
    LTE_LOG         reduce using rule 137 (pn_Expresion7 -> .)
    GTE_LOG         reduce using rule 137 (pn_Expresion7 -> .)
    NE_LOG          reduce using rule 137 (pn_Expresion7 -> .)
    EQUAL_LOG       reduce using rule 137 (pn_Expresion7 -> .)
    AND_LOG         reduce using rule 137 (pn_Expresion7 -> .)
    OR_LOG          reduce using rule 137 (pn_Expresion7 -> .)
    ASSIGN          reduce using rule 137 (pn_Expresion7 -> .)
    RPAREN          reduce using rule 137 (pn_Expresion7 -> .)
    SEMIC           reduce using rule 137 (pn_Expresion7 -> .)
    RBRACK          reduce using rule 137 (pn_Expresion7 -> .)
    COMMA           reduce using rule 137 (pn_Expresion7 -> .)
    HASTA           reduce using rule 137 (pn_Expresion7 -> .)
    HACER           reduce using rule 137 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 288

state 263

    (71) llamada_param -> expresion pn_FuncionLlamada2 . llamada_param2
    (73) llamada_param2 -> . COMMA llamada_param
    (74) llamada_param2 -> . empty
    (113) empty -> .

    COMMA           shift and go to state 290
    RPAREN          reduce using rule 113 (empty -> .)

    llamada_param2                 shift and go to state 289
    empty                          shift and go to state 291

state 264

    (77) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC . pn_Secuencial5
    (146) pn_Secuencial5 -> .

    SI              reduce using rule 146 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 146 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 146 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 146 (pn_Secuencial5 -> .)
    ID              reduce using rule 146 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 146 (pn_Secuencial5 -> .)
    LEE             reduce using rule 146 (pn_Secuencial5 -> .)
    LINEA           reduce using rule 146 (pn_Secuencial5 -> .)
    PUNTO           reduce using rule 146 (pn_Secuencial5 -> .)
    CIRCULO         reduce using rule 146 (pn_Secuencial5 -> .)
    COLOR           reduce using rule 146 (pn_Secuencial5 -> .)
    ARCO            reduce using rule 146 (pn_Secuencial5 -> .)
    PENUP           reduce using rule 146 (pn_Secuencial5 -> .)
    PENDOWN         reduce using rule 146 (pn_Secuencial5 -> .)
    GROSOR          reduce using rule 146 (pn_Secuencial5 -> .)
    LIMPIAR         reduce using rule 146 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 146 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 292

state 265

    (78) escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 78 (escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .)


state 266

    (80) escritura3 -> COMMA . escritura2
    (78) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (79) escritura2 -> . exp pn_Secuencial4 escritura3
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 188
    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    escritura2                     shift and go to state 293
    exp                            shift and go to state 189
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 267

    (81) escritura3 -> empty .

    RPAREN          reduce using rule 81 (escritura3 -> empty .)


state 268

    (79) escritura2 -> exp pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 79 (escritura2 -> exp pn_Secuencial4 escritura3 .)


state 269

    (70) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC . pn_Secuencial5
    (146) pn_Secuencial5 -> .

    SI              reduce using rule 146 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 146 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 146 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 146 (pn_Secuencial5 -> .)
    ID              reduce using rule 146 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 146 (pn_Secuencial5 -> .)
    LEE             reduce using rule 146 (pn_Secuencial5 -> .)
    LINEA           reduce using rule 146 (pn_Secuencial5 -> .)
    PUNTO           reduce using rule 146 (pn_Secuencial5 -> .)
    CIRCULO         reduce using rule 146 (pn_Secuencial5 -> .)
    COLOR           reduce using rule 146 (pn_Secuencial5 -> .)
    ARCO            reduce using rule 146 (pn_Secuencial5 -> .)
    PENUP           reduce using rule 146 (pn_Secuencial5 -> .)
    PENDOWN         reduce using rule 146 (pn_Secuencial5 -> .)
    GROSOR          reduce using rule 146 (pn_Secuencial5 -> .)
    LIMPIAR         reduce using rule 146 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 146 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 294

state 270

    (67) varLectura -> ID pn_Expresion1 varLectura2 .

    RPAREN          reduce using rule 67 (varLectura -> ID pn_Expresion1 varLectura2 .)


state 271

    (68) varLectura2 -> COMMA . pn_Secuencial4 varLectura
    (145) pn_Secuencial4 -> .

    ID              reduce using rule 145 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 295

state 272

    (69) varLectura2 -> empty . pn_Secuencial4
    (145) pn_Secuencial4 -> .

    RPAREN          reduce using rule 145 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 296

state 273

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA . direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (48) direccion -> . FORWARD pn_SetDireccion
    (49) direccion -> . BACKWARD pn_SetDireccion
    (50) direccion -> . RIGHTTURN pn_SetDireccion
    (51) direccion -> . LEFTTURN pn_SetDireccion

    FORWARD         shift and go to state 298
    BACKWARD        shift and go to state 299
    RIGHTTURN       shift and go to state 300
    LEFTTURN        shift and go to state 301

    direccion                      shift and go to state 297

state 274

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA . exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 302
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 275

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (137) pn_Expresion7 -> .

    SEMIC           reduce using rule 137 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 303

state 276

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (137) pn_Expresion7 -> .

    SEMIC           reduce using rule 137 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 304

state 277

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA . exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    exp                            shift and go to state 305
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 278

    (44) funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)


state 279

    (45) funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)


state 280

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (137) pn_Expresion7 -> .

    SEMIC           reduce using rule 137 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 306

state 281

    (47) funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)


state 282

    (110) factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .

    MULT_OP         reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    DIV_OP          reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    PLUS_OP         reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    MINUS_OP        reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LT_LOG          reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GT_LOG          reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LTE_LOG         reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GTE_LOG         reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    NE_LOG          reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    EQUAL_LOG       reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    AND_LOG         reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    OR_LOG          reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    ASSIGN          reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RPAREN          reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    SEMIC           reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RBRACK          reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    COMMA           reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HASTA           reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HACER           reduce using rule 110 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)


state 283

    (62) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque . else pn_Condicion2
    (63) else -> . SINO pn_Condicion3 bloque
    (64) else -> . empty
    (113) empty -> .

    SINO            shift and go to state 308
    SI              reduce using rule 113 (empty -> .)
    REGRESA         reduce using rule 113 (empty -> .)
    MIENTRAS        reduce using rule 113 (empty -> .)
    DESDE           reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    ESCRIBE         reduce using rule 113 (empty -> .)
    LEE             reduce using rule 113 (empty -> .)
    LINEA           reduce using rule 113 (empty -> .)
    PUNTO           reduce using rule 113 (empty -> .)
    CIRCULO         reduce using rule 113 (empty -> .)
    COLOR           reduce using rule 113 (empty -> .)
    ARCO            reduce using rule 113 (empty -> .)
    PENUP           reduce using rule 113 (empty -> .)
    PENDOWN         reduce using rule 113 (empty -> .)
    GROSOR          reduce using rule 113 (empty -> .)
    LIMPIAR         reduce using rule 113 (empty -> .)
    RCURLY          reduce using rule 113 (empty -> .)

    else                           shift and go to state 307
    empty                          shift and go to state 309

state 284

    (86) meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .

    ASSIGN          reduce using rule 86 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    RPAREN          reduce using rule 86 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    SEMIC           reduce using rule 86 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    RBRACK          reduce using rule 86 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    COMMA           reduce using rule 86 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)


state 285

    (76) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .

    SI              reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    REGRESA         reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    MIENTRAS        reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    DESDE           reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ID              reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ESCRIBE         reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    LEE             reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    LINEA           reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    PUNTO           reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    CIRCULO         reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    COLOR           reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ARCO            reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    PENUP           reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    PENDOWN         reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    GROSOR          reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    LIMPIAR         reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    RCURLY          reduce using rule 76 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)


state 286

    (65) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER . bloque pn_loop_condicional3
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 310

state 287

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 . HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    HASTA           shift and go to state 311


state 288

    (75) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 . pn_FuncionLlamada3
    (125) pn_FuncionLlamada3 -> .

    SI              reduce using rule 125 (pn_FuncionLlamada3 -> .)
    REGRESA         reduce using rule 125 (pn_FuncionLlamada3 -> .)
    MIENTRAS        reduce using rule 125 (pn_FuncionLlamada3 -> .)
    DESDE           reduce using rule 125 (pn_FuncionLlamada3 -> .)
    ID              reduce using rule 125 (pn_FuncionLlamada3 -> .)
    ESCRIBE         reduce using rule 125 (pn_FuncionLlamada3 -> .)
    LEE             reduce using rule 125 (pn_FuncionLlamada3 -> .)
    LINEA           reduce using rule 125 (pn_FuncionLlamada3 -> .)
    PUNTO           reduce using rule 125 (pn_FuncionLlamada3 -> .)
    CIRCULO         reduce using rule 125 (pn_FuncionLlamada3 -> .)
    COLOR           reduce using rule 125 (pn_FuncionLlamada3 -> .)
    ARCO            reduce using rule 125 (pn_FuncionLlamada3 -> .)
    PENUP           reduce using rule 125 (pn_FuncionLlamada3 -> .)
    PENDOWN         reduce using rule 125 (pn_FuncionLlamada3 -> .)
    GROSOR          reduce using rule 125 (pn_FuncionLlamada3 -> .)
    LIMPIAR         reduce using rule 125 (pn_FuncionLlamada3 -> .)
    RCURLY          reduce using rule 125 (pn_FuncionLlamada3 -> .)
    MULT_OP         reduce using rule 125 (pn_FuncionLlamada3 -> .)
    DIV_OP          reduce using rule 125 (pn_FuncionLlamada3 -> .)
    PLUS_OP         reduce using rule 125 (pn_FuncionLlamada3 -> .)
    MINUS_OP        reduce using rule 125 (pn_FuncionLlamada3 -> .)
    LT_LOG          reduce using rule 125 (pn_FuncionLlamada3 -> .)
    GT_LOG          reduce using rule 125 (pn_FuncionLlamada3 -> .)
    LTE_LOG         reduce using rule 125 (pn_FuncionLlamada3 -> .)
    GTE_LOG         reduce using rule 125 (pn_FuncionLlamada3 -> .)
    NE_LOG          reduce using rule 125 (pn_FuncionLlamada3 -> .)
    EQUAL_LOG       reduce using rule 125 (pn_FuncionLlamada3 -> .)
    AND_LOG         reduce using rule 125 (pn_FuncionLlamada3 -> .)
    OR_LOG          reduce using rule 125 (pn_FuncionLlamada3 -> .)
    ASSIGN          reduce using rule 125 (pn_FuncionLlamada3 -> .)
    RPAREN          reduce using rule 125 (pn_FuncionLlamada3 -> .)
    SEMIC           reduce using rule 125 (pn_FuncionLlamada3 -> .)
    RBRACK          reduce using rule 125 (pn_FuncionLlamada3 -> .)
    COMMA           reduce using rule 125 (pn_FuncionLlamada3 -> .)
    HASTA           reduce using rule 125 (pn_FuncionLlamada3 -> .)
    HACER           reduce using rule 125 (pn_FuncionLlamada3 -> .)

    pn_FuncionLlamada3             shift and go to state 312

state 289

    (71) llamada_param -> expresion pn_FuncionLlamada2 llamada_param2 .

    RPAREN          reduce using rule 71 (llamada_param -> expresion pn_FuncionLlamada2 llamada_param2 .)


state 290

    (73) llamada_param2 -> COMMA . llamada_param
    (71) llamada_param -> . expresion pn_FuncionLlamada2 llamada_param2
    (72) llamada_param -> . empty
    (82) expresion -> . mega_exp expresion1
    (113) empty -> .
    (85) mega_exp -> . super_exp meg
    (90) super_exp -> . exp sp
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    RPAREN          reduce using rule 113 (empty -> .)
    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    llamada_param                  shift and go to state 313
    expresion                      shift and go to state 230
    empty                          shift and go to state 231
    mega_exp                       shift and go to state 117
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    variable                       shift and go to state 123
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 291

    (74) llamada_param2 -> empty .

    RPAREN          reduce using rule 74 (llamada_param2 -> empty .)


state 292

    (77) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    LINEA           reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    PUNTO           reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    CIRCULO         reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    COLOR           reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ARCO            reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    PENUP           reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    PENDOWN         reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    GROSOR          reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    LIMPIAR         reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 77 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)


state 293

    (80) escritura3 -> COMMA escritura2 .

    RPAREN          reduce using rule 80 (escritura3 -> COMMA escritura2 .)


state 294

    (70) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    LINEA           reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    PUNTO           reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    CIRCULO         reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    COLOR           reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ARCO            reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    PENUP           reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    PENDOWN         reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    GROSOR          reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    LIMPIAR         reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 70 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)


state 295

    (68) varLectura2 -> COMMA pn_Secuencial4 . varLectura
    (67) varLectura -> . ID pn_Expresion1 varLectura2

    ID              shift and go to state 191

    varLectura                     shift and go to state 314

state 296

    (69) varLectura2 -> empty pn_Secuencial4 .

    RPAREN          reduce using rule 69 (varLectura2 -> empty pn_Secuencial4 .)


state 297

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 315


state 298

    (48) direccion -> FORWARD . pn_SetDireccion
    (120) pn_SetDireccion -> .

    RPAREN          reduce using rule 120 (pn_SetDireccion -> .)

    pn_SetDireccion                shift and go to state 316

state 299

    (49) direccion -> BACKWARD . pn_SetDireccion
    (120) pn_SetDireccion -> .

    RPAREN          reduce using rule 120 (pn_SetDireccion -> .)

    pn_SetDireccion                shift and go to state 317

state 300

    (50) direccion -> RIGHTTURN . pn_SetDireccion
    (120) pn_SetDireccion -> .

    RPAREN          reduce using rule 120 (pn_SetDireccion -> .)

    pn_SetDireccion                shift and go to state 318

state 301

    (51) direccion -> LEFTTURN . pn_SetDireccion
    (120) pn_SetDireccion -> .

    RPAREN          reduce using rule 120 (pn_SetDireccion -> .)

    pn_SetDireccion                shift and go to state 319

state 302

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 320


state 303

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 321


state 304

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 322


state 305

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 323


state 306

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 324


state 307

    (62) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else . pn_Condicion2
    (149) pn_Condicion2 -> .

    SI              reduce using rule 149 (pn_Condicion2 -> .)
    REGRESA         reduce using rule 149 (pn_Condicion2 -> .)
    MIENTRAS        reduce using rule 149 (pn_Condicion2 -> .)
    DESDE           reduce using rule 149 (pn_Condicion2 -> .)
    ID              reduce using rule 149 (pn_Condicion2 -> .)
    ESCRIBE         reduce using rule 149 (pn_Condicion2 -> .)
    LEE             reduce using rule 149 (pn_Condicion2 -> .)
    LINEA           reduce using rule 149 (pn_Condicion2 -> .)
    PUNTO           reduce using rule 149 (pn_Condicion2 -> .)
    CIRCULO         reduce using rule 149 (pn_Condicion2 -> .)
    COLOR           reduce using rule 149 (pn_Condicion2 -> .)
    ARCO            reduce using rule 149 (pn_Condicion2 -> .)
    PENUP           reduce using rule 149 (pn_Condicion2 -> .)
    PENDOWN         reduce using rule 149 (pn_Condicion2 -> .)
    GROSOR          reduce using rule 149 (pn_Condicion2 -> .)
    LIMPIAR         reduce using rule 149 (pn_Condicion2 -> .)
    RCURLY          reduce using rule 149 (pn_Condicion2 -> .)

    pn_Condicion2                  shift and go to state 325

state 308

    (63) else -> SINO . pn_Condicion3 bloque
    (150) pn_Condicion3 -> .

    LCURLY          reduce using rule 150 (pn_Condicion3 -> .)

    pn_Condicion3                  shift and go to state 326

state 309

    (64) else -> empty .

    SI              reduce using rule 64 (else -> empty .)
    REGRESA         reduce using rule 64 (else -> empty .)
    MIENTRAS        reduce using rule 64 (else -> empty .)
    DESDE           reduce using rule 64 (else -> empty .)
    ID              reduce using rule 64 (else -> empty .)
    ESCRIBE         reduce using rule 64 (else -> empty .)
    LEE             reduce using rule 64 (else -> empty .)
    LINEA           reduce using rule 64 (else -> empty .)
    PUNTO           reduce using rule 64 (else -> empty .)
    CIRCULO         reduce using rule 64 (else -> empty .)
    COLOR           reduce using rule 64 (else -> empty .)
    ARCO            reduce using rule 64 (else -> empty .)
    PENUP           reduce using rule 64 (else -> empty .)
    PENDOWN         reduce using rule 64 (else -> empty .)
    GROSOR          reduce using rule 64 (else -> empty .)
    LIMPIAR         reduce using rule 64 (else -> empty .)
    RCURLY          reduce using rule 64 (else -> empty .)


state 310

    (65) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque . pn_loop_condicional3
    (153) pn_loop_condicional3 -> .

    SI              reduce using rule 153 (pn_loop_condicional3 -> .)
    REGRESA         reduce using rule 153 (pn_loop_condicional3 -> .)
    MIENTRAS        reduce using rule 153 (pn_loop_condicional3 -> .)
    DESDE           reduce using rule 153 (pn_loop_condicional3 -> .)
    ID              reduce using rule 153 (pn_loop_condicional3 -> .)
    ESCRIBE         reduce using rule 153 (pn_loop_condicional3 -> .)
    LEE             reduce using rule 153 (pn_loop_condicional3 -> .)
    LINEA           reduce using rule 153 (pn_loop_condicional3 -> .)
    PUNTO           reduce using rule 153 (pn_loop_condicional3 -> .)
    CIRCULO         reduce using rule 153 (pn_loop_condicional3 -> .)
    COLOR           reduce using rule 153 (pn_loop_condicional3 -> .)
    ARCO            reduce using rule 153 (pn_loop_condicional3 -> .)
    PENUP           reduce using rule 153 (pn_loop_condicional3 -> .)
    PENDOWN         reduce using rule 153 (pn_loop_condicional3 -> .)
    GROSOR          reduce using rule 153 (pn_loop_condicional3 -> .)
    LIMPIAR         reduce using rule 153 (pn_loop_condicional3 -> .)
    RCURLY          reduce using rule 153 (pn_loop_condicional3 -> .)

    pn_loop_condicional3           shift and go to state 327

state 311

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA . pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (156) pn_loop_no_condicional3 -> .

    LPAREN          reduce using rule 156 (pn_loop_no_condicional3 -> .)
    CHAR_CTE        reduce using rule 156 (pn_loop_no_condicional3 -> .)
    STRING_CTE      reduce using rule 156 (pn_loop_no_condicional3 -> .)
    MINUS_OP        reduce using rule 156 (pn_loop_no_condicional3 -> .)
    ID              reduce using rule 156 (pn_loop_no_condicional3 -> .)
    INT_CTE         reduce using rule 156 (pn_loop_no_condicional3 -> .)
    FLOAT_CTE       reduce using rule 156 (pn_loop_no_condicional3 -> .)

    pn_loop_no_condicional3        shift and go to state 328

state 312

    (75) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .

    SI              reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    REGRESA         reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MIENTRAS        reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    DESDE           reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ID              reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ESCRIBE         reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LEE             reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LINEA           reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    PUNTO           reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    CIRCULO         reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    COLOR           reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ARCO            reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    PENUP           reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    PENDOWN         reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    GROSOR          reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LIMPIAR         reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RCURLY          reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MULT_OP         reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    DIV_OP          reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    PLUS_OP         reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MINUS_OP        reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LT_LOG          reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    GT_LOG          reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LTE_LOG         reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    GTE_LOG         reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    NE_LOG          reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    EQUAL_LOG       reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    AND_LOG         reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    OR_LOG          reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ASSIGN          reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RPAREN          reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    SEMIC           reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RBRACK          reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    COMMA           reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    HASTA           reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    HACER           reduce using rule 75 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)


state 313

    (73) llamada_param2 -> COMMA llamada_param .

    RPAREN          reduce using rule 73 (llamada_param2 -> COMMA llamada_param .)


state 314

    (68) varLectura2 -> COMMA pn_Secuencial4 varLectura .

    RPAREN          reduce using rule 68 (varLectura2 -> COMMA pn_Secuencial4 varLectura .)


state 315

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (137) pn_Expresion7 -> .

    SEMIC           reduce using rule 137 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 329

state 316

    (48) direccion -> FORWARD pn_SetDireccion .

    RPAREN          reduce using rule 48 (direccion -> FORWARD pn_SetDireccion .)


state 317

    (49) direccion -> BACKWARD pn_SetDireccion .

    RPAREN          reduce using rule 49 (direccion -> BACKWARD pn_SetDireccion .)


state 318

    (50) direccion -> RIGHTTURN pn_SetDireccion .

    RPAREN          reduce using rule 50 (direccion -> RIGHTTURN pn_SetDireccion .)


state 319

    (51) direccion -> LEFTTURN pn_SetDireccion .

    RPAREN          reduce using rule 51 (direccion -> LEFTTURN pn_SetDireccion .)


state 320

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (137) pn_Expresion7 -> .

    SEMIC           reduce using rule 137 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 330

state 321

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (122) pn_FuncionEspecial2 -> .

    SI              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 122 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 122 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 331

state 322

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (122) pn_FuncionEspecial2 -> .

    SI              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 122 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 122 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 332

state 323

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (137) pn_Expresion7 -> .

    SEMIC           reduce using rule 137 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 333

state 324

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (122) pn_FuncionEspecial2 -> .

    SI              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 122 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 122 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 334

state 325

    (62) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .

    SI              reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    REGRESA         reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    MIENTRAS        reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    DESDE           reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ID              reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ESCRIBE         reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    LEE             reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    LINEA           reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    PUNTO           reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    CIRCULO         reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    COLOR           reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ARCO            reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    PENUP           reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    PENDOWN         reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    GROSOR          reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    LIMPIAR         reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    RCURLY          reduce using rule 62 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)


state 326

    (63) else -> SINO pn_Condicion3 . bloque
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 335

state 327

    (65) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .

    SI              reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    REGRESA         reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    MIENTRAS        reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    DESDE           reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ID              reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ESCRIBE         reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    LEE             reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    LINEA           reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    PUNTO           reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    CIRCULO         reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    COLOR           reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ARCO            reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    PENUP           reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    PENDOWN         reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    GROSOR          reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    LIMPIAR         reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    RCURLY          reduce using rule 65 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)


state 328

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 . exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (99) exp -> . termino pn_Expresion4 exp1
    (104) termino -> . factor pn_Expresion5 term
    (109) factor -> . ctes
    (110) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (111) factor -> . variable
    (112) factor -> . llamada_funcion
    (53) ctes -> . CHAR_CTE pn_CTEChar
    (54) ctes -> . STRING_CTE pn_CTEString
    (55) ctes -> . MINUS_OP pn_CTENeg num
    (56) ctes -> . num
    (59) variable -> . ID pn_Expresion1 varDim
    (75) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (57) num -> . INT_CTE pn_CTEInt
    (58) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 115
    CHAR_CTE        shift and go to state 125
    STRING_CTE      shift and go to state 126
    MINUS_OP        shift and go to state 127
    ID              shift and go to state 129
    INT_CTE         shift and go to state 130
    FLOAT_CTE       shift and go to state 131

    variable                       shift and go to state 123
    exp                            shift and go to state 336
    termino                        shift and go to state 120
    factor                         shift and go to state 121
    ctes                           shift and go to state 122
    llamada_funcion                shift and go to state 124
    num                            shift and go to state 128

state 329

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 337


state 330

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 338


state 331

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 332

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 333

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 339


state 334

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 335

    (63) else -> SINO pn_Condicion3 bloque .

    SI              reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    REGRESA         reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    MIENTRAS        reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    DESDE           reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    ID              reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    ESCRIBE         reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    LEE             reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    LINEA           reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    PUNTO           reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    CIRCULO         reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    COLOR           reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    ARCO            reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    PENUP           reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    PENDOWN         reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    GROSOR          reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    LIMPIAR         reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)
    RCURLY          reduce using rule 63 (else -> SINO pn_Condicion3 bloque .)


state 336

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp . pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (157) pn_loop_no_condicional4 -> .

    HACER           reduce using rule 157 (pn_loop_no_condicional4 -> .)

    pn_loop_no_condicional4        shift and go to state 340

state 337

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (122) pn_FuncionEspecial2 -> .

    SI              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 122 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 122 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 341

state 338

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (122) pn_FuncionEspecial2 -> .

    SI              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 122 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 122 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 342

state 339

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (122) pn_FuncionEspecial2 -> .

    SI              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 122 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 122 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 122 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 122 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 122 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 343

state 340

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 . HACER bloque pn_loop_no_condicional5

    HACER           shift and go to state 344


state 341

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 342

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 343

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 344

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER . bloque pn_loop_no_condicional5
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 345

state 345

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque . pn_loop_no_condicional5
    (158) pn_loop_no_condicional5 -> .

    SI              reduce using rule 158 (pn_loop_no_condicional5 -> .)
    REGRESA         reduce using rule 158 (pn_loop_no_condicional5 -> .)
    MIENTRAS        reduce using rule 158 (pn_loop_no_condicional5 -> .)
    DESDE           reduce using rule 158 (pn_loop_no_condicional5 -> .)
    ID              reduce using rule 158 (pn_loop_no_condicional5 -> .)
    ESCRIBE         reduce using rule 158 (pn_loop_no_condicional5 -> .)
    LEE             reduce using rule 158 (pn_loop_no_condicional5 -> .)
    LINEA           reduce using rule 158 (pn_loop_no_condicional5 -> .)
    PUNTO           reduce using rule 158 (pn_loop_no_condicional5 -> .)
    CIRCULO         reduce using rule 158 (pn_loop_no_condicional5 -> .)
    COLOR           reduce using rule 158 (pn_loop_no_condicional5 -> .)
    ARCO            reduce using rule 158 (pn_loop_no_condicional5 -> .)
    PENUP           reduce using rule 158 (pn_loop_no_condicional5 -> .)
    PENDOWN         reduce using rule 158 (pn_loop_no_condicional5 -> .)
    GROSOR          reduce using rule 158 (pn_loop_no_condicional5 -> .)
    LIMPIAR         reduce using rule 158 (pn_loop_no_condicional5 -> .)
    RCURLY          reduce using rule 158 (pn_loop_no_condicional5 -> .)

    pn_loop_no_condicional5        shift and go to state 346

state 346

    (66) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .

    SI              reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    REGRESA         reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    MIENTRAS        reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    DESDE           reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ID              reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ESCRIBE         reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    LEE             reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    LINEA           reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    PUNTO           reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    CIRCULO         reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    COLOR           reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ARCO            reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    PENUP           reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    PENDOWN         reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    GROSOR          reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    LIMPIAR         reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    RCURLY          reduce using rule 66 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 188 resolved using rule (pn_CTEString -> <empty>)
WARNING: rejected rule (pn_Secuencial4 -> <empty>) in state 188
