Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    NEW_LINE
    STRING_TYPE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal
Rule 2     dec_variables -> VARIABLES dec_variables2
Rule 3     dec_variables -> empty
Rule 4     dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3
Rule 5     dec_variables3 -> dec_variables2
Rule 6     dec_variables3 -> empty
Rule 7     lista_ids -> ID pn_AddVariable DecVarDim lista_ids2
Rule 8     lista_ids2 -> COMMA lista_ids
Rule 9     lista_ids2 -> empty
Rule 10    DecVarDim -> DecVarDim2 pn_VarDim
Rule 11    DecVarDim -> empty
Rule 12    DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK
Rule 13    tipo -> INT_TYPE pn_SetCurrentType
Rule 14    tipo -> CHAR_TYPE pn_SetCurrentType
Rule 15    tipo -> FLOAT_TYPE pn_SetCurrentType
Rule 16    dec_funciones -> dec_funciones2 dec_funciones
Rule 17    dec_funciones -> empty
Rule 18    dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
Rule 19    tipo_func -> VOID pn_SetCurrentType
Rule 20    tipo_func -> tipo
Rule 21    dec_funcion_param -> lista_parametros
Rule 22    dec_funcion_param -> empty
Rule 23    lista_parametros -> tipo ID pn_Funcion1 lista_parametros2
Rule 24    lista_parametros2 -> COMMA lista_parametros
Rule 25    lista_parametros2 -> empty
Rule 26    principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque
Rule 27    bloque -> LCURLY estatutos RCURLY
Rule 28    estatutos -> estatuto estatutos
Rule 29    estatutos -> empty
Rule 30    estatuto -> asignacion
Rule 31    estatuto -> condicion
Rule 32    estatuto -> regresa
Rule 33    estatuto -> loop_condicional
Rule 34    estatuto -> loop_no_condicional
Rule 35    estatuto -> llamada_funcion
Rule 36    estatuto -> escritura
Rule 37    estatuto -> lectura
Rule 38    estatuto -> funcion_especial_void
Rule 39    funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 40    funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 41    funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 42    funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 43    funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 44    funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
Rule 45    funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
Rule 46    funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
Rule 47    funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
Rule 48    funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2
Rule 49    direccion -> FORWARD pn_SetDireccion
Rule 50    direccion -> BACKWARD pn_SetDireccion
Rule 51    direccion -> RIGHTTURN pn_SetDireccion
Rule 52    direccion -> LEFTTURN pn_SetDireccion
Rule 53    asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2
Rule 54    ctes -> CHAR_CTE pn_CTEChar
Rule 55    ctes -> STRING_CTE pn_CTEString
Rule 56    ctes -> MINUS_OP pn_CTENeg num
Rule 57    ctes -> num
Rule 58    num -> INT_CTE pn_CTEInt
Rule 59    num -> FLOAT_CTE pn_CTEFloat
Rule 60    variable -> ID pn_Expresion1 varDim
Rule 61    varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7
Rule 62    varDim -> empty
Rule 63    condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
Rule 64    else -> SINO pn_Condicion3 bloque
Rule 65    else -> empty
Rule 66    loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
Rule 67    loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
Rule 68    lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5
Rule 69    llamada_param -> expresion pn_FuncionLlamada2 llamada_param2
Rule 70    llamada_param -> empty
Rule 71    llamada_param2 -> COMMA llamada_param
Rule 72    llamada_param2 -> empty
Rule 73    llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
Rule 74    regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
Rule 75    escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
Rule 76    escritura2 -> STRING_CTE pn_Secuencial4 escritura3
Rule 77    escritura2 -> exp pn_Secuencial4 escritura3
Rule 78    escritura3 -> COMMA escritura2
Rule 79    escritura3 -> empty
Rule 80    expresion -> mega_exp expresion1
Rule 81    expresion1 -> ASSIGN expresion
Rule 82    expresion1 -> empty
Rule 83    mega_exp -> super_exp meg
Rule 84    meg -> op_l pn_Expresion10 mega_exp pn_Expresion11
Rule 85    meg -> empty
Rule 86    op_l -> AND_LOG
Rule 87    op_l -> OR_LOG
Rule 88    super_exp -> exp sp
Rule 89    sp -> op_r exp pn_Expresion9
Rule 90    sp -> empty
Rule 91    op_r -> LT_LOG pn_Expresion8
Rule 92    op_r -> GT_LOG pn_Expresion8
Rule 93    op_r -> LTE_LOG pn_Expresion8
Rule 94    op_r -> GTE_LOG pn_Expresion8
Rule 95    op_r -> NE_LOG pn_Expresion8
Rule 96    op_r -> EQUAL_LOG pn_Expresion8
Rule 97    exp -> termino pn_Expresion4 exp1
Rule 98    exp1 -> op_a exp
Rule 99    exp1 -> empty
Rule 100   op_a -> PLUS_OP pn_Expresion2
Rule 101   op_a -> MINUS_OP pn_Expresion2
Rule 102   termino -> factor pn_Expresion5 term
Rule 103   term -> op_a1 termino
Rule 104   term -> empty
Rule 105   op_a1 -> MULT_OP pn_Expresion3
Rule 106   op_a1 -> DIV_OP pn_Expresion3
Rule 107   factor -> ctes
Rule 108   factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
Rule 109   factor -> variable
Rule 110   factor -> llamada_funcion
Rule 111   empty -> <empty>
Rule 112   pn_GOTOprincipal -> <empty>
Rule 113   pn_Principal1 -> <empty>
Rule 114   pn_AddFunc -> <empty>
Rule 115   pn_Funcion1 -> <empty>
Rule 116   pn_Funcion2 -> <empty>
Rule 117   pn_Funcion3 -> <empty>
Rule 118   pn_SetDireccion -> <empty>
Rule 119   pn_FuncionEspecial -> <empty>
Rule 120   pn_FuncionEspecial2 -> <empty>
Rule 121   pn_FuncionLlamada1 -> <empty>
Rule 122   pn_FuncionLlamada2 -> <empty>
Rule 123   pn_FuncionLlamada3 -> <empty>
Rule 124   pn_CTENeg -> <empty>
Rule 125   pn_CTEInt -> <empty>
Rule 126   pn_CTEFloat -> <empty>
Rule 127   pn_CTEChar -> <empty>
Rule 128   pn_CTEString -> <empty>
Rule 129   pn_Expresion1 -> <empty>
Rule 130   pn_Expresion2 -> <empty>
Rule 131   pn_Expresion3 -> <empty>
Rule 132   pn_Expresion4 -> <empty>
Rule 133   pn_Expresion5 -> <empty>
Rule 134   pn_Expresion6 -> <empty>
Rule 135   pn_Expresion7 -> <empty>
Rule 136   pn_Expresion8 -> <empty>
Rule 137   pn_Expresion9 -> <empty>
Rule 138   pn_Expresion10 -> <empty>
Rule 139   pn_Expresion11 -> <empty>
Rule 140   pn_Secuencial1 -> <empty>
Rule 141   pn_Secuencial2 -> <empty>
Rule 142   pn_Secuencial3 -> <empty>
Rule 143   pn_Secuencial4 -> <empty>
Rule 144   pn_Secuencial5 -> <empty>
Rule 145   pn_Regresa -> <empty>
Rule 146   pn_Condicion1 -> <empty>
Rule 147   pn_Condicion2 -> <empty>
Rule 148   pn_Condicion3 -> <empty>
Rule 149   pn_loop_condicional1 -> <empty>
Rule 150   pn_loop_condicional2 -> <empty>
Rule 151   pn_loop_condicional3 -> <empty>
Rule 152   pn_loop_no_condicional1 -> <empty>
Rule 153   pn_loop_no_condicional2 -> <empty>
Rule 154   pn_loop_no_condicional3 -> <empty>
Rule 155   pn_loop_no_condicional4 -> <empty>
Rule 156   pn_loop_no_condicional5 -> <empty>
Rule 157   pn_SetCurrentType -> <empty>
Rule 158   pn_AddVariable -> <empty>
Rule 159   pn_VarDim2 -> <empty>
Rule 160   pn_VarDim3 -> <empty>
Rule 161   pn_VarDim -> <empty>
Rule 162   pn_AccederDimension -> <empty>
Rule 163   pn_AccederArreglo -> <empty>

Terminals, with rules where they appear

AND_LOG              : 86
ARCO                 : 43
ASSIGN               : 53 67 81
BACKWARD             : 50
CHAR_CTE             : 54
CHAR_TYPE            : 14
CIRCULO              : 41
COLON                : 4
COLOR                : 42
COMMA                : 8 24 39 40 43 71 78
COMMENT              : 
DESDE                : 67
DIV_OP               : 106
ENTONCES             : 63
EQUAL_LOG            : 96
ESCRIBE              : 75
FLOAT_CTE            : 59
FLOAT_TYPE           : 15
FORWARD              : 49
FUNCION              : 18
GROSOR               : 46
GTE_LOG              : 94
GT_LOG               : 92
HACER                : 66 67
HASTA                : 67
ID                   : 1 7 18 23 48 60 73
INT_CTE              : 12 58
INT_TYPE             : 13
LBRACK               : 12 61
LCURLY               : 27
LEE                  : 68
LEFTTURN             : 52
LIMPIAR              : 47
LINEA                : 39
LPAREN               : 18 26 39 40 41 42 43 44 45 46 47 48 63 66 68 73 74 75 108
LTE_LOG              : 93
LT_LOG               : 91
MIENTRAS             : 66
MINUS_OP             : 56 101
MULT_OP              : 105
NEW_LINE             : 
NE_LOG               : 95
ORDENA               : 48
OR_LOG               : 87
PENDOWN              : 45
PENUP                : 44
PLUS_OP              : 100
PRINCIPAL            : 26
PROGRAMA             : 1
PUNTO                : 40
RBRACK               : 12 61
RCURLY               : 27
REGRESA              : 74
RIGHTTURN            : 51
RPAREN               : 18 26 39 40 41 42 43 44 45 46 47 48 63 66 68 73 74 75 108
SEMIC                : 1 4 39 40 41 42 43 44 45 46 47 48 53 68 74 75
SI                   : 63
SINO                 : 64
STRING_CTE           : 55 76
STRING_TYPE          : 
VARIABLES            : 2
VOID                 : 19
error                : 

Nonterminals, with rules where they appear

DecVarDim            : 7
DecVarDim2           : 10
asignacion           : 30
bloque               : 18 26 63 64 66 67
condicion            : 31
ctes                 : 107
dec_funcion_param    : 18
dec_funciones        : 1 16
dec_funciones2       : 16
dec_variables        : 1 18
dec_variables2       : 2 5
dec_variables3       : 4
direccion            : 39
else                 : 63
empty                : 3 6 9 11 17 22 25 29 62 65 70 72 79 82 85 90 99 104
escritura            : 36
escritura2           : 75 78
escritura3           : 76 77
estatuto             : 28
estatutos            : 27 28
exp                  : 39 40 40 41 42 43 43 46 53 61 67 67 74 77 88 89 98 108
exp1                 : 97
expresion            : 63 66 69 81
expresion1           : 80
factor               : 102
funcion_especial_void : 38
lectura              : 37
lista_ids            : 4 8
lista_ids2           : 7
lista_parametros     : 21 24
lista_parametros2    : 23
llamada_funcion      : 35 110
llamada_param        : 71 73
llamada_param2       : 69
loop_condicional     : 33
loop_no_condicional  : 34
meg                  : 83
mega_exp             : 80 84
num                  : 56 57
op_a                 : 98
op_a1                : 103
op_l                 : 84
op_r                 : 89
pn_AccederArreglo    : 61
pn_AccederDimension  : 61
pn_AddFunc           : 18
pn_AddVariable       : 7
pn_CTEChar           : 54
pn_CTEFloat          : 59
pn_CTEInt            : 58
pn_CTENeg            : 56
pn_CTEString         : 55
pn_Condicion1        : 63
pn_Condicion2        : 63
pn_Condicion3        : 64
pn_Expresion1        : 48 60
pn_Expresion10       : 84
pn_Expresion11       : 84
pn_Expresion2        : 100 101
pn_Expresion3        : 105 106
pn_Expresion4        : 97
pn_Expresion5        : 102
pn_Expresion6        : 39 40 41 42 43 46 61 73 108
pn_Expresion7        : 39 40 41 42 43 46 61 73 108
pn_Expresion8        : 91 92 93 94 95 96
pn_Expresion9        : 89
pn_Funcion1          : 23
pn_Funcion2          : 18
pn_Funcion3          : 18
pn_FuncionEspecial   : 39 40 41 42 43 44 45 46 47 48
pn_FuncionEspecial2  : 39 40 41 42 43 44 45 46 47 48
pn_FuncionLlamada1   : 73
pn_FuncionLlamada2   : 69
pn_FuncionLlamada3   : 73
pn_GOTOprincipal     : 1
pn_Principal1        : 26
pn_Regresa           : 74
pn_Secuencial1       : 53 67
pn_Secuencial2       : 53
pn_Secuencial3       : 68 74 75
pn_Secuencial4       : 68 76 77
pn_Secuencial5       : 68 75
pn_SetCurrentType    : 13 14 15 19
pn_SetDireccion      : 49 50 51 52
pn_VarDim            : 10
pn_VarDim2           : 12 61
pn_VarDim3           : 12
pn_loop_condicional1 : 66
pn_loop_condicional2 : 66
pn_loop_condicional3 : 66
pn_loop_no_condicional1 : 67
pn_loop_no_condicional2 : 67
pn_loop_no_condicional3 : 67
pn_loop_no_condicional4 : 67
pn_loop_no_condicional5 : 67
principal            : 1
programa             : 0
regresa              : 32
sp                   : 88
super_exp            : 83
term                 : 102
termino              : 97 103
tipo                 : 4 20 23
tipo_func            : 18
varDim               : 60
variable             : 53 67 68 109

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    SEMIC           shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMIC . dec_variables pn_GOTOprincipal dec_funciones principal
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (111) empty -> .

    VARIABLES       shift and go to state 6
    FUNCION         reduce using rule 111 (empty -> .)
    PRINCIPAL       reduce using rule 111 (empty -> .)

    dec_variables                  shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMIC dec_variables . pn_GOTOprincipal dec_funciones principal
    (112) pn_GOTOprincipal -> .

    FUNCION         reduce using rule 112 (pn_GOTOprincipal -> .)
    PRINCIPAL       reduce using rule 112 (pn_GOTOprincipal -> .)

    pn_GOTOprincipal               shift and go to state 8

state 6

    (2) dec_variables -> VARIABLES . dec_variables2
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (13) tipo -> . INT_TYPE pn_SetCurrentType
    (14) tipo -> . CHAR_TYPE pn_SetCurrentType
    (15) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_variables2                 shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (3) dec_variables -> empty .

    FUNCION         reduce using rule 3 (dec_variables -> empty .)
    PRINCIPAL       reduce using rule 3 (dec_variables -> empty .)
    LCURLY          reduce using rule 3 (dec_variables -> empty .)


state 8

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal . dec_funciones principal
    (16) dec_funciones -> . dec_funciones2 dec_funciones
    (17) dec_funciones -> . empty
    (18) dec_funciones2 -> . FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (111) empty -> .

    FUNCION         shift and go to state 17
    PRINCIPAL       reduce using rule 111 (empty -> .)

    dec_funciones                  shift and go to state 14
    dec_funciones2                 shift and go to state 15
    empty                          shift and go to state 16

state 9

    (2) dec_variables -> VARIABLES dec_variables2 .

    FUNCION         reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    PRINCIPAL       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    LCURLY          reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)


state 10

    (4) dec_variables2 -> tipo . COLON lista_ids SEMIC dec_variables3

    COLON           shift and go to state 18


state 11

    (13) tipo -> INT_TYPE . pn_SetCurrentType
    (157) pn_SetCurrentType -> .

    COLON           reduce using rule 157 (pn_SetCurrentType -> .)
    ID              reduce using rule 157 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 19

state 12

    (14) tipo -> CHAR_TYPE . pn_SetCurrentType
    (157) pn_SetCurrentType -> .

    COLON           reduce using rule 157 (pn_SetCurrentType -> .)
    ID              reduce using rule 157 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 20

state 13

    (15) tipo -> FLOAT_TYPE . pn_SetCurrentType
    (157) pn_SetCurrentType -> .

    COLON           reduce using rule 157 (pn_SetCurrentType -> .)
    ID              reduce using rule 157 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 21

state 14

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones . principal
    (26) principal -> . PRINCIPAL pn_Principal1 LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 23

    principal                      shift and go to state 22

state 15

    (16) dec_funciones -> dec_funciones2 . dec_funciones
    (16) dec_funciones -> . dec_funciones2 dec_funciones
    (17) dec_funciones -> . empty
    (18) dec_funciones2 -> . FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (111) empty -> .

    FUNCION         shift and go to state 17
    PRINCIPAL       reduce using rule 111 (empty -> .)

    dec_funciones2                 shift and go to state 15
    dec_funciones                  shift and go to state 24
    empty                          shift and go to state 16

state 16

    (17) dec_funciones -> empty .

    PRINCIPAL       reduce using rule 17 (dec_funciones -> empty .)


state 17

    (18) dec_funciones2 -> FUNCION . tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (19) tipo_func -> . VOID pn_SetCurrentType
    (20) tipo_func -> . tipo
    (13) tipo -> . INT_TYPE pn_SetCurrentType
    (14) tipo -> . CHAR_TYPE pn_SetCurrentType
    (15) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 26
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    tipo_func                      shift and go to state 25
    tipo                           shift and go to state 27

state 18

    (4) dec_variables2 -> tipo COLON . lista_ids SEMIC dec_variables3
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 29

    lista_ids                      shift and go to state 28

state 19

    (13) tipo -> INT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 13 (tipo -> INT_TYPE pn_SetCurrentType .)
    ID              reduce using rule 13 (tipo -> INT_TYPE pn_SetCurrentType .)


state 20

    (14) tipo -> CHAR_TYPE pn_SetCurrentType .

    COLON           reduce using rule 14 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    ID              reduce using rule 14 (tipo -> CHAR_TYPE pn_SetCurrentType .)


state 21

    (15) tipo -> FLOAT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 15 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    ID              reduce using rule 15 (tipo -> FLOAT_TYPE pn_SetCurrentType .)


state 22

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .)


state 23

    (26) principal -> PRINCIPAL . pn_Principal1 LPAREN RPAREN bloque
    (113) pn_Principal1 -> .

    LPAREN          reduce using rule 113 (pn_Principal1 -> .)

    pn_Principal1                  shift and go to state 30

state 24

    (16) dec_funciones -> dec_funciones2 dec_funciones .

    PRINCIPAL       reduce using rule 16 (dec_funciones -> dec_funciones2 dec_funciones .)


state 25

    (18) dec_funciones2 -> FUNCION tipo_func . ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    ID              shift and go to state 31


state 26

    (19) tipo_func -> VOID . pn_SetCurrentType
    (157) pn_SetCurrentType -> .

    ID              reduce using rule 157 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 32

state 27

    (20) tipo_func -> tipo .

    ID              reduce using rule 20 (tipo_func -> tipo .)


state 28

    (4) dec_variables2 -> tipo COLON lista_ids . SEMIC dec_variables3

    SEMIC           shift and go to state 33


state 29

    (7) lista_ids -> ID . pn_AddVariable DecVarDim lista_ids2
    (158) pn_AddVariable -> .

    LBRACK          reduce using rule 158 (pn_AddVariable -> .)
    COMMA           reduce using rule 158 (pn_AddVariable -> .)
    SEMIC           reduce using rule 158 (pn_AddVariable -> .)

    pn_AddVariable                 shift and go to state 34

state 30

    (26) principal -> PRINCIPAL pn_Principal1 . LPAREN RPAREN bloque

    LPAREN          shift and go to state 35


state 31

    (18) dec_funciones2 -> FUNCION tipo_func ID . pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (114) pn_AddFunc -> .

    LPAREN          reduce using rule 114 (pn_AddFunc -> .)

    pn_AddFunc                     shift and go to state 36

state 32

    (19) tipo_func -> VOID pn_SetCurrentType .

    ID              reduce using rule 19 (tipo_func -> VOID pn_SetCurrentType .)


state 33

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC . dec_variables3
    (5) dec_variables3 -> . dec_variables2
    (6) dec_variables3 -> . empty
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (111) empty -> .
    (13) tipo -> . INT_TYPE pn_SetCurrentType
    (14) tipo -> . CHAR_TYPE pn_SetCurrentType
    (15) tipo -> . FLOAT_TYPE pn_SetCurrentType

    FUNCION         reduce using rule 111 (empty -> .)
    PRINCIPAL       reduce using rule 111 (empty -> .)
    LCURLY          reduce using rule 111 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    tipo                           shift and go to state 10
    dec_variables3                 shift and go to state 37
    dec_variables2                 shift and go to state 38
    empty                          shift and go to state 39

state 34

    (7) lista_ids -> ID pn_AddVariable . DecVarDim lista_ids2
    (10) DecVarDim -> . DecVarDim2 pn_VarDim
    (11) DecVarDim -> . empty
    (12) DecVarDim2 -> . LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK
    (111) empty -> .

    LBRACK          shift and go to state 43
    COMMA           reduce using rule 111 (empty -> .)
    SEMIC           reduce using rule 111 (empty -> .)

    DecVarDim                      shift and go to state 40
    DecVarDim2                     shift and go to state 41
    empty                          shift and go to state 42

state 35

    (26) principal -> PRINCIPAL pn_Principal1 LPAREN . RPAREN bloque

    RPAREN          shift and go to state 44


state 36

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc . LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    LPAREN          shift and go to state 45


state 37

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .

    FUNCION         reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    PRINCIPAL       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    LCURLY          reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)


state 38

    (5) dec_variables3 -> dec_variables2 .

    FUNCION         reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    PRINCIPAL       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    LCURLY          reduce using rule 5 (dec_variables3 -> dec_variables2 .)


state 39

    (6) dec_variables3 -> empty .

    FUNCION         reduce using rule 6 (dec_variables3 -> empty .)
    PRINCIPAL       reduce using rule 6 (dec_variables3 -> empty .)
    LCURLY          reduce using rule 6 (dec_variables3 -> empty .)


state 40

    (7) lista_ids -> ID pn_AddVariable DecVarDim . lista_ids2
    (8) lista_ids2 -> . COMMA lista_ids
    (9) lista_ids2 -> . empty
    (111) empty -> .

    COMMA           shift and go to state 47
    SEMIC           reduce using rule 111 (empty -> .)

    lista_ids2                     shift and go to state 46
    empty                          shift and go to state 48

state 41

    (10) DecVarDim -> DecVarDim2 . pn_VarDim
    (161) pn_VarDim -> .

    COMMA           reduce using rule 161 (pn_VarDim -> .)
    SEMIC           reduce using rule 161 (pn_VarDim -> .)

    pn_VarDim                      shift and go to state 49

state 42

    (11) DecVarDim -> empty .

    COMMA           reduce using rule 11 (DecVarDim -> empty .)
    SEMIC           reduce using rule 11 (DecVarDim -> empty .)


state 43

    (12) DecVarDim2 -> LBRACK . pn_VarDim2 INT_CTE pn_VarDim3 RBRACK
    (159) pn_VarDim2 -> .

    INT_CTE         reduce using rule 159 (pn_VarDim2 -> .)

    pn_VarDim2                     shift and go to state 50

state 44

    (26) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN . bloque
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 51

state 45

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN . dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (21) dec_funcion_param -> . lista_parametros
    (22) dec_funcion_param -> . empty
    (23) lista_parametros -> . tipo ID pn_Funcion1 lista_parametros2
    (111) empty -> .
    (13) tipo -> . INT_TYPE pn_SetCurrentType
    (14) tipo -> . CHAR_TYPE pn_SetCurrentType
    (15) tipo -> . FLOAT_TYPE pn_SetCurrentType

    RPAREN          reduce using rule 111 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_funcion_param              shift and go to state 53
    lista_parametros               shift and go to state 54
    empty                          shift and go to state 55
    tipo                           shift and go to state 56

state 46

    (7) lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .

    SEMIC           reduce using rule 7 (lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .)


state 47

    (8) lista_ids2 -> COMMA . lista_ids
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 29

    lista_ids                      shift and go to state 57

state 48

    (9) lista_ids2 -> empty .

    SEMIC           reduce using rule 9 (lista_ids2 -> empty .)


state 49

    (10) DecVarDim -> DecVarDim2 pn_VarDim .

    COMMA           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)
    SEMIC           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)


state 50

    (12) DecVarDim2 -> LBRACK pn_VarDim2 . INT_CTE pn_VarDim3 RBRACK

    INT_CTE         shift and go to state 58


state 51

    (26) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .

    $end            reduce using rule 26 (principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .)


state 52

    (27) bloque -> LCURLY . estatutos RCURLY
    (28) estatutos -> . estatuto estatutos
    (29) estatutos -> . empty
    (30) estatuto -> . asignacion
    (31) estatuto -> . condicion
    (32) estatuto -> . regresa
    (33) estatuto -> . loop_condicional
    (34) estatuto -> . loop_no_condicional
    (35) estatuto -> . llamada_funcion
    (36) estatuto -> . escritura
    (37) estatuto -> . lectura
    (38) estatuto -> . funcion_especial_void
    (111) empty -> .
    (53) asignacion -> . variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2
    (63) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (74) regresa -> . REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (66) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (67) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (75) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (68) lectura -> . LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5
    (39) funcion_especial_void -> . LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (40) funcion_especial_void -> . PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (41) funcion_especial_void -> . CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (42) funcion_especial_void -> . COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (43) funcion_especial_void -> . ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (44) funcion_especial_void -> . PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (45) funcion_especial_void -> . PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (46) funcion_especial_void -> . GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (47) funcion_especial_void -> . LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (48) funcion_especial_void -> . ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2
    (60) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 111 (empty -> .)
    SI              shift and go to state 72
    REGRESA         shift and go to state 73
    MIENTRAS        shift and go to state 74
    DESDE           shift and go to state 75
    ID              shift and go to state 76
    ESCRIBE         shift and go to state 77
    LEE             shift and go to state 78
    LINEA           shift and go to state 79
    PUNTO           shift and go to state 80
    CIRCULO         shift and go to state 81
    COLOR           shift and go to state 82
    ARCO            shift and go to state 83
    PENUP           shift and go to state 84
    PENDOWN         shift and go to state 85
    GROSOR          shift and go to state 86
    LIMPIAR         shift and go to state 87
    ORDENA          shift and go to state 88

    estatutos                      shift and go to state 59
    estatuto                       shift and go to state 60
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    condicion                      shift and go to state 63
    regresa                        shift and go to state 64
    loop_condicional               shift and go to state 65
    loop_no_condicional            shift and go to state 66
    llamada_funcion                shift and go to state 67
    escritura                      shift and go to state 68
    lectura                        shift and go to state 69
    funcion_especial_void          shift and go to state 70
    variable                       shift and go to state 71

state 53

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param . RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    RPAREN          shift and go to state 89


state 54

    (21) dec_funcion_param -> lista_parametros .

    RPAREN          reduce using rule 21 (dec_funcion_param -> lista_parametros .)


state 55

    (22) dec_funcion_param -> empty .

    RPAREN          reduce using rule 22 (dec_funcion_param -> empty .)


state 56

    (23) lista_parametros -> tipo . ID pn_Funcion1 lista_parametros2

    ID              shift and go to state 90


state 57

    (8) lista_ids2 -> COMMA lista_ids .

    SEMIC           reduce using rule 8 (lista_ids2 -> COMMA lista_ids .)


state 58

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE . pn_VarDim3 RBRACK
    (160) pn_VarDim3 -> .

    RBRACK          reduce using rule 160 (pn_VarDim3 -> .)

    pn_VarDim3                     shift and go to state 91

state 59

    (27) bloque -> LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 92


state 60

    (28) estatutos -> estatuto . estatutos
    (28) estatutos -> . estatuto estatutos
    (29) estatutos -> . empty
    (30) estatuto -> . asignacion
    (31) estatuto -> . condicion
    (32) estatuto -> . regresa
    (33) estatuto -> . loop_condicional
    (34) estatuto -> . loop_no_condicional
    (35) estatuto -> . llamada_funcion
    (36) estatuto -> . escritura
    (37) estatuto -> . lectura
    (38) estatuto -> . funcion_especial_void
    (111) empty -> .
    (53) asignacion -> . variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2
    (63) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (74) regresa -> . REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (66) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (67) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (75) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (68) lectura -> . LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5
    (39) funcion_especial_void -> . LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (40) funcion_especial_void -> . PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (41) funcion_especial_void -> . CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (42) funcion_especial_void -> . COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (43) funcion_especial_void -> . ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (44) funcion_especial_void -> . PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (45) funcion_especial_void -> . PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (46) funcion_especial_void -> . GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (47) funcion_especial_void -> . LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (48) funcion_especial_void -> . ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2
    (60) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 111 (empty -> .)
    SI              shift and go to state 72
    REGRESA         shift and go to state 73
    MIENTRAS        shift and go to state 74
    DESDE           shift and go to state 75
    ID              shift and go to state 76
    ESCRIBE         shift and go to state 77
    LEE             shift and go to state 78
    LINEA           shift and go to state 79
    PUNTO           shift and go to state 80
    CIRCULO         shift and go to state 81
    COLOR           shift and go to state 82
    ARCO            shift and go to state 83
    PENUP           shift and go to state 84
    PENDOWN         shift and go to state 85
    GROSOR          shift and go to state 86
    LIMPIAR         shift and go to state 87
    ORDENA          shift and go to state 88

    estatuto                       shift and go to state 60
    estatutos                      shift and go to state 93
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    condicion                      shift and go to state 63
    regresa                        shift and go to state 64
    loop_condicional               shift and go to state 65
    loop_no_condicional            shift and go to state 66
    llamada_funcion                shift and go to state 67
    escritura                      shift and go to state 68
    lectura                        shift and go to state 69
    funcion_especial_void          shift and go to state 70
    variable                       shift and go to state 71

state 61

    (29) estatutos -> empty .

    RCURLY          reduce using rule 29 (estatutos -> empty .)


state 62

    (30) estatuto -> asignacion .

    SI              reduce using rule 30 (estatuto -> asignacion .)
    REGRESA         reduce using rule 30 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 30 (estatuto -> asignacion .)
    DESDE           reduce using rule 30 (estatuto -> asignacion .)
    ID              reduce using rule 30 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 30 (estatuto -> asignacion .)
    LEE             reduce using rule 30 (estatuto -> asignacion .)
    LINEA           reduce using rule 30 (estatuto -> asignacion .)
    PUNTO           reduce using rule 30 (estatuto -> asignacion .)
    CIRCULO         reduce using rule 30 (estatuto -> asignacion .)
    COLOR           reduce using rule 30 (estatuto -> asignacion .)
    ARCO            reduce using rule 30 (estatuto -> asignacion .)
    PENUP           reduce using rule 30 (estatuto -> asignacion .)
    PENDOWN         reduce using rule 30 (estatuto -> asignacion .)
    GROSOR          reduce using rule 30 (estatuto -> asignacion .)
    LIMPIAR         reduce using rule 30 (estatuto -> asignacion .)
    ORDENA          reduce using rule 30 (estatuto -> asignacion .)
    RCURLY          reduce using rule 30 (estatuto -> asignacion .)


state 63

    (31) estatuto -> condicion .

    SI              reduce using rule 31 (estatuto -> condicion .)
    REGRESA         reduce using rule 31 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 31 (estatuto -> condicion .)
    DESDE           reduce using rule 31 (estatuto -> condicion .)
    ID              reduce using rule 31 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 31 (estatuto -> condicion .)
    LEE             reduce using rule 31 (estatuto -> condicion .)
    LINEA           reduce using rule 31 (estatuto -> condicion .)
    PUNTO           reduce using rule 31 (estatuto -> condicion .)
    CIRCULO         reduce using rule 31 (estatuto -> condicion .)
    COLOR           reduce using rule 31 (estatuto -> condicion .)
    ARCO            reduce using rule 31 (estatuto -> condicion .)
    PENUP           reduce using rule 31 (estatuto -> condicion .)
    PENDOWN         reduce using rule 31 (estatuto -> condicion .)
    GROSOR          reduce using rule 31 (estatuto -> condicion .)
    LIMPIAR         reduce using rule 31 (estatuto -> condicion .)
    ORDENA          reduce using rule 31 (estatuto -> condicion .)
    RCURLY          reduce using rule 31 (estatuto -> condicion .)


state 64

    (32) estatuto -> regresa .

    SI              reduce using rule 32 (estatuto -> regresa .)
    REGRESA         reduce using rule 32 (estatuto -> regresa .)
    MIENTRAS        reduce using rule 32 (estatuto -> regresa .)
    DESDE           reduce using rule 32 (estatuto -> regresa .)
    ID              reduce using rule 32 (estatuto -> regresa .)
    ESCRIBE         reduce using rule 32 (estatuto -> regresa .)
    LEE             reduce using rule 32 (estatuto -> regresa .)
    LINEA           reduce using rule 32 (estatuto -> regresa .)
    PUNTO           reduce using rule 32 (estatuto -> regresa .)
    CIRCULO         reduce using rule 32 (estatuto -> regresa .)
    COLOR           reduce using rule 32 (estatuto -> regresa .)
    ARCO            reduce using rule 32 (estatuto -> regresa .)
    PENUP           reduce using rule 32 (estatuto -> regresa .)
    PENDOWN         reduce using rule 32 (estatuto -> regresa .)
    GROSOR          reduce using rule 32 (estatuto -> regresa .)
    LIMPIAR         reduce using rule 32 (estatuto -> regresa .)
    ORDENA          reduce using rule 32 (estatuto -> regresa .)
    RCURLY          reduce using rule 32 (estatuto -> regresa .)


state 65

    (33) estatuto -> loop_condicional .

    SI              reduce using rule 33 (estatuto -> loop_condicional .)
    REGRESA         reduce using rule 33 (estatuto -> loop_condicional .)
    MIENTRAS        reduce using rule 33 (estatuto -> loop_condicional .)
    DESDE           reduce using rule 33 (estatuto -> loop_condicional .)
    ID              reduce using rule 33 (estatuto -> loop_condicional .)
    ESCRIBE         reduce using rule 33 (estatuto -> loop_condicional .)
    LEE             reduce using rule 33 (estatuto -> loop_condicional .)
    LINEA           reduce using rule 33 (estatuto -> loop_condicional .)
    PUNTO           reduce using rule 33 (estatuto -> loop_condicional .)
    CIRCULO         reduce using rule 33 (estatuto -> loop_condicional .)
    COLOR           reduce using rule 33 (estatuto -> loop_condicional .)
    ARCO            reduce using rule 33 (estatuto -> loop_condicional .)
    PENUP           reduce using rule 33 (estatuto -> loop_condicional .)
    PENDOWN         reduce using rule 33 (estatuto -> loop_condicional .)
    GROSOR          reduce using rule 33 (estatuto -> loop_condicional .)
    LIMPIAR         reduce using rule 33 (estatuto -> loop_condicional .)
    ORDENA          reduce using rule 33 (estatuto -> loop_condicional .)
    RCURLY          reduce using rule 33 (estatuto -> loop_condicional .)


state 66

    (34) estatuto -> loop_no_condicional .

    SI              reduce using rule 34 (estatuto -> loop_no_condicional .)
    REGRESA         reduce using rule 34 (estatuto -> loop_no_condicional .)
    MIENTRAS        reduce using rule 34 (estatuto -> loop_no_condicional .)
    DESDE           reduce using rule 34 (estatuto -> loop_no_condicional .)
    ID              reduce using rule 34 (estatuto -> loop_no_condicional .)
    ESCRIBE         reduce using rule 34 (estatuto -> loop_no_condicional .)
    LEE             reduce using rule 34 (estatuto -> loop_no_condicional .)
    LINEA           reduce using rule 34 (estatuto -> loop_no_condicional .)
    PUNTO           reduce using rule 34 (estatuto -> loop_no_condicional .)
    CIRCULO         reduce using rule 34 (estatuto -> loop_no_condicional .)
    COLOR           reduce using rule 34 (estatuto -> loop_no_condicional .)
    ARCO            reduce using rule 34 (estatuto -> loop_no_condicional .)
    PENUP           reduce using rule 34 (estatuto -> loop_no_condicional .)
    PENDOWN         reduce using rule 34 (estatuto -> loop_no_condicional .)
    GROSOR          reduce using rule 34 (estatuto -> loop_no_condicional .)
    LIMPIAR         reduce using rule 34 (estatuto -> loop_no_condicional .)
    ORDENA          reduce using rule 34 (estatuto -> loop_no_condicional .)
    RCURLY          reduce using rule 34 (estatuto -> loop_no_condicional .)


state 67

    (35) estatuto -> llamada_funcion .

    SI              reduce using rule 35 (estatuto -> llamada_funcion .)
    REGRESA         reduce using rule 35 (estatuto -> llamada_funcion .)
    MIENTRAS        reduce using rule 35 (estatuto -> llamada_funcion .)
    DESDE           reduce using rule 35 (estatuto -> llamada_funcion .)
    ID              reduce using rule 35 (estatuto -> llamada_funcion .)
    ESCRIBE         reduce using rule 35 (estatuto -> llamada_funcion .)
    LEE             reduce using rule 35 (estatuto -> llamada_funcion .)
    LINEA           reduce using rule 35 (estatuto -> llamada_funcion .)
    PUNTO           reduce using rule 35 (estatuto -> llamada_funcion .)
    CIRCULO         reduce using rule 35 (estatuto -> llamada_funcion .)
    COLOR           reduce using rule 35 (estatuto -> llamada_funcion .)
    ARCO            reduce using rule 35 (estatuto -> llamada_funcion .)
    PENUP           reduce using rule 35 (estatuto -> llamada_funcion .)
    PENDOWN         reduce using rule 35 (estatuto -> llamada_funcion .)
    GROSOR          reduce using rule 35 (estatuto -> llamada_funcion .)
    LIMPIAR         reduce using rule 35 (estatuto -> llamada_funcion .)
    ORDENA          reduce using rule 35 (estatuto -> llamada_funcion .)
    RCURLY          reduce using rule 35 (estatuto -> llamada_funcion .)


state 68

    (36) estatuto -> escritura .

    SI              reduce using rule 36 (estatuto -> escritura .)
    REGRESA         reduce using rule 36 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 36 (estatuto -> escritura .)
    DESDE           reduce using rule 36 (estatuto -> escritura .)
    ID              reduce using rule 36 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 36 (estatuto -> escritura .)
    LEE             reduce using rule 36 (estatuto -> escritura .)
    LINEA           reduce using rule 36 (estatuto -> escritura .)
    PUNTO           reduce using rule 36 (estatuto -> escritura .)
    CIRCULO         reduce using rule 36 (estatuto -> escritura .)
    COLOR           reduce using rule 36 (estatuto -> escritura .)
    ARCO            reduce using rule 36 (estatuto -> escritura .)
    PENUP           reduce using rule 36 (estatuto -> escritura .)
    PENDOWN         reduce using rule 36 (estatuto -> escritura .)
    GROSOR          reduce using rule 36 (estatuto -> escritura .)
    LIMPIAR         reduce using rule 36 (estatuto -> escritura .)
    ORDENA          reduce using rule 36 (estatuto -> escritura .)
    RCURLY          reduce using rule 36 (estatuto -> escritura .)


state 69

    (37) estatuto -> lectura .

    SI              reduce using rule 37 (estatuto -> lectura .)
    REGRESA         reduce using rule 37 (estatuto -> lectura .)
    MIENTRAS        reduce using rule 37 (estatuto -> lectura .)
    DESDE           reduce using rule 37 (estatuto -> lectura .)
    ID              reduce using rule 37 (estatuto -> lectura .)
    ESCRIBE         reduce using rule 37 (estatuto -> lectura .)
    LEE             reduce using rule 37 (estatuto -> lectura .)
    LINEA           reduce using rule 37 (estatuto -> lectura .)
    PUNTO           reduce using rule 37 (estatuto -> lectura .)
    CIRCULO         reduce using rule 37 (estatuto -> lectura .)
    COLOR           reduce using rule 37 (estatuto -> lectura .)
    ARCO            reduce using rule 37 (estatuto -> lectura .)
    PENUP           reduce using rule 37 (estatuto -> lectura .)
    PENDOWN         reduce using rule 37 (estatuto -> lectura .)
    GROSOR          reduce using rule 37 (estatuto -> lectura .)
    LIMPIAR         reduce using rule 37 (estatuto -> lectura .)
    ORDENA          reduce using rule 37 (estatuto -> lectura .)
    RCURLY          reduce using rule 37 (estatuto -> lectura .)


state 70

    (38) estatuto -> funcion_especial_void .

    SI              reduce using rule 38 (estatuto -> funcion_especial_void .)
    REGRESA         reduce using rule 38 (estatuto -> funcion_especial_void .)
    MIENTRAS        reduce using rule 38 (estatuto -> funcion_especial_void .)
    DESDE           reduce using rule 38 (estatuto -> funcion_especial_void .)
    ID              reduce using rule 38 (estatuto -> funcion_especial_void .)
    ESCRIBE         reduce using rule 38 (estatuto -> funcion_especial_void .)
    LEE             reduce using rule 38 (estatuto -> funcion_especial_void .)
    LINEA           reduce using rule 38 (estatuto -> funcion_especial_void .)
    PUNTO           reduce using rule 38 (estatuto -> funcion_especial_void .)
    CIRCULO         reduce using rule 38 (estatuto -> funcion_especial_void .)
    COLOR           reduce using rule 38 (estatuto -> funcion_especial_void .)
    ARCO            reduce using rule 38 (estatuto -> funcion_especial_void .)
    PENUP           reduce using rule 38 (estatuto -> funcion_especial_void .)
    PENDOWN         reduce using rule 38 (estatuto -> funcion_especial_void .)
    GROSOR          reduce using rule 38 (estatuto -> funcion_especial_void .)
    LIMPIAR         reduce using rule 38 (estatuto -> funcion_especial_void .)
    ORDENA          reduce using rule 38 (estatuto -> funcion_especial_void .)
    RCURLY          reduce using rule 38 (estatuto -> funcion_especial_void .)


state 71

    (53) asignacion -> variable . ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2

    ASSIGN          shift and go to state 94


state 72

    (63) condicion -> SI . LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    LPAREN          shift and go to state 95


state 73

    (74) regresa -> REGRESA . pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (142) pn_Secuencial3 -> .

    LPAREN          reduce using rule 142 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 96

state 74

    (66) loop_condicional -> MIENTRAS . pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (149) pn_loop_condicional1 -> .

    LPAREN          reduce using rule 149 (pn_loop_condicional1 -> .)

    pn_loop_condicional1           shift and go to state 97

state 75

    (67) loop_no_condicional -> DESDE . pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (152) pn_loop_no_condicional1 -> .

    ID              reduce using rule 152 (pn_loop_no_condicional1 -> .)

    pn_loop_no_condicional1        shift and go to state 98

state 76

    (73) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (60) variable -> ID . pn_Expresion1 varDim
    (121) pn_FuncionLlamada1 -> .
    (129) pn_Expresion1 -> .

    LPAREN          reduce using rule 121 (pn_FuncionLlamada1 -> .)
    LBRACK          reduce using rule 129 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 129 (pn_Expresion1 -> .)

    pn_FuncionLlamada1             shift and go to state 99
    pn_Expresion1                  shift and go to state 100

state 77

    (75) escritura -> ESCRIBE . pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (142) pn_Secuencial3 -> .

    LPAREN          reduce using rule 142 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 101

state 78

    (68) lectura -> LEE . pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5
    (142) pn_Secuencial3 -> .

    LPAREN          reduce using rule 142 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 102

state 79

    (39) funcion_especial_void -> LINEA . pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (119) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 119 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 103

state 80

    (40) funcion_especial_void -> PUNTO . pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (119) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 119 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 104

state 81

    (41) funcion_especial_void -> CIRCULO . pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (119) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 119 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 105

state 82

    (42) funcion_especial_void -> COLOR . pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (119) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 119 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 106

state 83

    (43) funcion_especial_void -> ARCO . pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (119) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 119 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 107

state 84

    (44) funcion_especial_void -> PENUP . pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (119) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 119 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 108

state 85

    (45) funcion_especial_void -> PENDOWN . pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (119) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 119 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 109

state 86

    (46) funcion_especial_void -> GROSOR . pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (119) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 119 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 110

state 87

    (47) funcion_especial_void -> LIMPIAR . pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2
    (119) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 119 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 111

state 88

    (48) funcion_especial_void -> ORDENA . pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2
    (119) pn_FuncionEspecial -> .

    LPAREN          reduce using rule 119 (pn_FuncionEspecial -> .)

    pn_FuncionEspecial             shift and go to state 112

state 89

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN . pn_Funcion2 dec_variables bloque pn_Funcion3
    (116) pn_Funcion2 -> .

    VARIABLES       reduce using rule 116 (pn_Funcion2 -> .)
    LCURLY          reduce using rule 116 (pn_Funcion2 -> .)

    pn_Funcion2                    shift and go to state 113

state 90

    (23) lista_parametros -> tipo ID . pn_Funcion1 lista_parametros2
    (115) pn_Funcion1 -> .

    COMMA           reduce using rule 115 (pn_Funcion1 -> .)
    RPAREN          reduce using rule 115 (pn_Funcion1 -> .)

    pn_Funcion1                    shift and go to state 114

state 91

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 . RBRACK

    RBRACK          shift and go to state 115


state 92

    (27) bloque -> LCURLY estatutos RCURLY .

    $end            reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    FUNCION         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    PRINCIPAL       reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    SINO            reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    SI              reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    REGRESA         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    MIENTRAS        reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    DESDE           reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    ID              reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    ESCRIBE         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    LEE             reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    LINEA           reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    PUNTO           reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    CIRCULO         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    COLOR           reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    ARCO            reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    PENUP           reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    PENDOWN         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    GROSOR          reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    LIMPIAR         reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    ORDENA          reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 27 (bloque -> LCURLY estatutos RCURLY .)


state 93

    (28) estatutos -> estatuto estatutos .

    RCURLY          reduce using rule 28 (estatutos -> estatuto estatutos .)


state 94

    (53) asignacion -> variable ASSIGN . pn_Secuencial1 exp SEMIC pn_Secuencial2
    (140) pn_Secuencial1 -> .

    LPAREN          reduce using rule 140 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 140 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 140 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 140 (pn_Secuencial1 -> .)
    ID              reduce using rule 140 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 140 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 140 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 116

state 95

    (63) condicion -> SI LPAREN . expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (80) expresion -> . mega_exp expresion1
    (83) mega_exp -> . super_exp meg
    (88) super_exp -> . exp sp
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    expresion                      shift and go to state 118
    mega_exp                       shift and go to state 119
    super_exp                      shift and go to state 120
    exp                            shift and go to state 121
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 96

    (74) regresa -> REGRESA pn_Secuencial3 . LPAREN exp RPAREN pn_Regresa SEMIC

    LPAREN          shift and go to state 134


state 97

    (66) loop_condicional -> MIENTRAS pn_loop_condicional1 . LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    LPAREN          shift and go to state 135


state 98

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 . variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (60) variable -> . ID pn_Expresion1 varDim

    ID              shift and go to state 137

    variable                       shift and go to state 136

state 99

    (73) llamada_funcion -> ID pn_FuncionLlamada1 . LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3

    LPAREN          shift and go to state 138


state 100

    (60) variable -> ID pn_Expresion1 . varDim
    (61) varDim -> . LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7
    (62) varDim -> . empty
    (111) empty -> .

    LBRACK          shift and go to state 140
    ASSIGN          reduce using rule 111 (empty -> .)
    MULT_OP         reduce using rule 111 (empty -> .)
    DIV_OP          reduce using rule 111 (empty -> .)
    PLUS_OP         reduce using rule 111 (empty -> .)
    MINUS_OP        reduce using rule 111 (empty -> .)
    LT_LOG          reduce using rule 111 (empty -> .)
    GT_LOG          reduce using rule 111 (empty -> .)
    LTE_LOG         reduce using rule 111 (empty -> .)
    GTE_LOG         reduce using rule 111 (empty -> .)
    NE_LOG          reduce using rule 111 (empty -> .)
    EQUAL_LOG       reduce using rule 111 (empty -> .)
    AND_LOG         reduce using rule 111 (empty -> .)
    OR_LOG          reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)
    SEMIC           reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    HASTA           reduce using rule 111 (empty -> .)
    RBRACK          reduce using rule 111 (empty -> .)
    HACER           reduce using rule 111 (empty -> .)

    varDim                         shift and go to state 139
    empty                          shift and go to state 141

state 101

    (75) escritura -> ESCRIBE pn_Secuencial3 . LPAREN escritura2 RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 142


state 102

    (68) lectura -> LEE pn_Secuencial3 . LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5

    LPAREN          shift and go to state 143


state 103

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial . LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 144


state 104

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial . LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 145


state 105

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 146


state 106

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 147


state 107

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial . LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 148


state 108

    (44) funcion_especial_void -> PENUP pn_FuncionEspecial . LPAREN RPAREN SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 149


state 109

    (45) funcion_especial_void -> PENDOWN pn_FuncionEspecial . LPAREN RPAREN SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 150


state 110

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 151


state 111

    (47) funcion_especial_void -> LIMPIAR pn_FuncionEspecial . LPAREN RPAREN SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 152


state 112

    (48) funcion_especial_void -> ORDENA pn_FuncionEspecial . LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2

    LPAREN          shift and go to state 153


state 113

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 . dec_variables bloque pn_Funcion3
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (111) empty -> .

    VARIABLES       shift and go to state 6
    LCURLY          reduce using rule 111 (empty -> .)

    dec_variables                  shift and go to state 154
    empty                          shift and go to state 7

state 114

    (23) lista_parametros -> tipo ID pn_Funcion1 . lista_parametros2
    (24) lista_parametros2 -> . COMMA lista_parametros
    (25) lista_parametros2 -> . empty
    (111) empty -> .

    COMMA           shift and go to state 156
    RPAREN          reduce using rule 111 (empty -> .)

    lista_parametros2              shift and go to state 155
    empty                          shift and go to state 157

state 115

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK .

    COMMA           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK .)
    SEMIC           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK .)


state 116

    (53) asignacion -> variable ASSIGN pn_Secuencial1 . exp SEMIC pn_Secuencial2
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    variable                       shift and go to state 125
    exp                            shift and go to state 158
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 117

    (108) factor -> LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7
    (134) pn_Expresion6 -> .

    LPAREN          reduce using rule 134 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 134 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 134 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 134 (pn_Expresion6 -> .)
    ID              reduce using rule 134 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 134 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 134 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 159

state 118

    (63) condicion -> SI LPAREN expresion . RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    RPAREN          shift and go to state 160


state 119

    (80) expresion -> mega_exp . expresion1
    (81) expresion1 -> . ASSIGN expresion
    (82) expresion1 -> . empty
    (111) empty -> .

    ASSIGN          shift and go to state 162
    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)

    expresion1                     shift and go to state 161
    empty                          shift and go to state 163

state 120

    (83) mega_exp -> super_exp . meg
    (84) meg -> . op_l pn_Expresion10 mega_exp pn_Expresion11
    (85) meg -> . empty
    (86) op_l -> . AND_LOG
    (87) op_l -> . OR_LOG
    (111) empty -> .

    AND_LOG         shift and go to state 167
    OR_LOG          shift and go to state 168
    ASSIGN          reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)

    meg                            shift and go to state 164
    op_l                           shift and go to state 165
    empty                          shift and go to state 166

state 121

    (88) super_exp -> exp . sp
    (89) sp -> . op_r exp pn_Expresion9
    (90) sp -> . empty
    (91) op_r -> . LT_LOG pn_Expresion8
    (92) op_r -> . GT_LOG pn_Expresion8
    (93) op_r -> . LTE_LOG pn_Expresion8
    (94) op_r -> . GTE_LOG pn_Expresion8
    (95) op_r -> . NE_LOG pn_Expresion8
    (96) op_r -> . EQUAL_LOG pn_Expresion8
    (111) empty -> .

    LT_LOG          shift and go to state 172
    GT_LOG          shift and go to state 173
    LTE_LOG         shift and go to state 174
    GTE_LOG         shift and go to state 175
    NE_LOG          shift and go to state 176
    EQUAL_LOG       shift and go to state 177
    AND_LOG         reduce using rule 111 (empty -> .)
    OR_LOG          reduce using rule 111 (empty -> .)
    ASSIGN          reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)

    sp                             shift and go to state 169
    op_r                           shift and go to state 170
    empty                          shift and go to state 171

state 122

    (97) exp -> termino . pn_Expresion4 exp1
    (132) pn_Expresion4 -> .

    PLUS_OP         reduce using rule 132 (pn_Expresion4 -> .)
    MINUS_OP        reduce using rule 132 (pn_Expresion4 -> .)
    LT_LOG          reduce using rule 132 (pn_Expresion4 -> .)
    GT_LOG          reduce using rule 132 (pn_Expresion4 -> .)
    LTE_LOG         reduce using rule 132 (pn_Expresion4 -> .)
    GTE_LOG         reduce using rule 132 (pn_Expresion4 -> .)
    NE_LOG          reduce using rule 132 (pn_Expresion4 -> .)
    EQUAL_LOG       reduce using rule 132 (pn_Expresion4 -> .)
    AND_LOG         reduce using rule 132 (pn_Expresion4 -> .)
    OR_LOG          reduce using rule 132 (pn_Expresion4 -> .)
    ASSIGN          reduce using rule 132 (pn_Expresion4 -> .)
    RPAREN          reduce using rule 132 (pn_Expresion4 -> .)
    SEMIC           reduce using rule 132 (pn_Expresion4 -> .)
    COMMA           reduce using rule 132 (pn_Expresion4 -> .)
    HASTA           reduce using rule 132 (pn_Expresion4 -> .)
    RBRACK          reduce using rule 132 (pn_Expresion4 -> .)
    HACER           reduce using rule 132 (pn_Expresion4 -> .)

    pn_Expresion4                  shift and go to state 178

state 123

    (102) termino -> factor . pn_Expresion5 term
    (133) pn_Expresion5 -> .

    MULT_OP         reduce using rule 133 (pn_Expresion5 -> .)
    DIV_OP          reduce using rule 133 (pn_Expresion5 -> .)
    PLUS_OP         reduce using rule 133 (pn_Expresion5 -> .)
    MINUS_OP        reduce using rule 133 (pn_Expresion5 -> .)
    LT_LOG          reduce using rule 133 (pn_Expresion5 -> .)
    GT_LOG          reduce using rule 133 (pn_Expresion5 -> .)
    LTE_LOG         reduce using rule 133 (pn_Expresion5 -> .)
    GTE_LOG         reduce using rule 133 (pn_Expresion5 -> .)
    NE_LOG          reduce using rule 133 (pn_Expresion5 -> .)
    EQUAL_LOG       reduce using rule 133 (pn_Expresion5 -> .)
    AND_LOG         reduce using rule 133 (pn_Expresion5 -> .)
    OR_LOG          reduce using rule 133 (pn_Expresion5 -> .)
    ASSIGN          reduce using rule 133 (pn_Expresion5 -> .)
    RPAREN          reduce using rule 133 (pn_Expresion5 -> .)
    SEMIC           reduce using rule 133 (pn_Expresion5 -> .)
    COMMA           reduce using rule 133 (pn_Expresion5 -> .)
    HASTA           reduce using rule 133 (pn_Expresion5 -> .)
    RBRACK          reduce using rule 133 (pn_Expresion5 -> .)
    HACER           reduce using rule 133 (pn_Expresion5 -> .)

    pn_Expresion5                  shift and go to state 179

state 124

    (107) factor -> ctes .

    MULT_OP         reduce using rule 107 (factor -> ctes .)
    DIV_OP          reduce using rule 107 (factor -> ctes .)
    PLUS_OP         reduce using rule 107 (factor -> ctes .)
    MINUS_OP        reduce using rule 107 (factor -> ctes .)
    LT_LOG          reduce using rule 107 (factor -> ctes .)
    GT_LOG          reduce using rule 107 (factor -> ctes .)
    LTE_LOG         reduce using rule 107 (factor -> ctes .)
    GTE_LOG         reduce using rule 107 (factor -> ctes .)
    NE_LOG          reduce using rule 107 (factor -> ctes .)
    EQUAL_LOG       reduce using rule 107 (factor -> ctes .)
    AND_LOG         reduce using rule 107 (factor -> ctes .)
    OR_LOG          reduce using rule 107 (factor -> ctes .)
    ASSIGN          reduce using rule 107 (factor -> ctes .)
    RPAREN          reduce using rule 107 (factor -> ctes .)
    SEMIC           reduce using rule 107 (factor -> ctes .)
    COMMA           reduce using rule 107 (factor -> ctes .)
    HASTA           reduce using rule 107 (factor -> ctes .)
    RBRACK          reduce using rule 107 (factor -> ctes .)
    HACER           reduce using rule 107 (factor -> ctes .)


state 125

    (109) factor -> variable .

    MULT_OP         reduce using rule 109 (factor -> variable .)
    DIV_OP          reduce using rule 109 (factor -> variable .)
    PLUS_OP         reduce using rule 109 (factor -> variable .)
    MINUS_OP        reduce using rule 109 (factor -> variable .)
    LT_LOG          reduce using rule 109 (factor -> variable .)
    GT_LOG          reduce using rule 109 (factor -> variable .)
    LTE_LOG         reduce using rule 109 (factor -> variable .)
    GTE_LOG         reduce using rule 109 (factor -> variable .)
    NE_LOG          reduce using rule 109 (factor -> variable .)
    EQUAL_LOG       reduce using rule 109 (factor -> variable .)
    AND_LOG         reduce using rule 109 (factor -> variable .)
    OR_LOG          reduce using rule 109 (factor -> variable .)
    ASSIGN          reduce using rule 109 (factor -> variable .)
    RPAREN          reduce using rule 109 (factor -> variable .)
    SEMIC           reduce using rule 109 (factor -> variable .)
    COMMA           reduce using rule 109 (factor -> variable .)
    HASTA           reduce using rule 109 (factor -> variable .)
    RBRACK          reduce using rule 109 (factor -> variable .)
    HACER           reduce using rule 109 (factor -> variable .)


state 126

    (110) factor -> llamada_funcion .

    MULT_OP         reduce using rule 110 (factor -> llamada_funcion .)
    DIV_OP          reduce using rule 110 (factor -> llamada_funcion .)
    PLUS_OP         reduce using rule 110 (factor -> llamada_funcion .)
    MINUS_OP        reduce using rule 110 (factor -> llamada_funcion .)
    LT_LOG          reduce using rule 110 (factor -> llamada_funcion .)
    GT_LOG          reduce using rule 110 (factor -> llamada_funcion .)
    LTE_LOG         reduce using rule 110 (factor -> llamada_funcion .)
    GTE_LOG         reduce using rule 110 (factor -> llamada_funcion .)
    NE_LOG          reduce using rule 110 (factor -> llamada_funcion .)
    EQUAL_LOG       reduce using rule 110 (factor -> llamada_funcion .)
    AND_LOG         reduce using rule 110 (factor -> llamada_funcion .)
    OR_LOG          reduce using rule 110 (factor -> llamada_funcion .)
    ASSIGN          reduce using rule 110 (factor -> llamada_funcion .)
    RPAREN          reduce using rule 110 (factor -> llamada_funcion .)
    SEMIC           reduce using rule 110 (factor -> llamada_funcion .)
    COMMA           reduce using rule 110 (factor -> llamada_funcion .)
    HASTA           reduce using rule 110 (factor -> llamada_funcion .)
    RBRACK          reduce using rule 110 (factor -> llamada_funcion .)
    HACER           reduce using rule 110 (factor -> llamada_funcion .)


state 127

    (54) ctes -> CHAR_CTE . pn_CTEChar
    (127) pn_CTEChar -> .

    MULT_OP         reduce using rule 127 (pn_CTEChar -> .)
    DIV_OP          reduce using rule 127 (pn_CTEChar -> .)
    PLUS_OP         reduce using rule 127 (pn_CTEChar -> .)
    MINUS_OP        reduce using rule 127 (pn_CTEChar -> .)
    LT_LOG          reduce using rule 127 (pn_CTEChar -> .)
    GT_LOG          reduce using rule 127 (pn_CTEChar -> .)
    LTE_LOG         reduce using rule 127 (pn_CTEChar -> .)
    GTE_LOG         reduce using rule 127 (pn_CTEChar -> .)
    NE_LOG          reduce using rule 127 (pn_CTEChar -> .)
    EQUAL_LOG       reduce using rule 127 (pn_CTEChar -> .)
    AND_LOG         reduce using rule 127 (pn_CTEChar -> .)
    OR_LOG          reduce using rule 127 (pn_CTEChar -> .)
    ASSIGN          reduce using rule 127 (pn_CTEChar -> .)
    RPAREN          reduce using rule 127 (pn_CTEChar -> .)
    SEMIC           reduce using rule 127 (pn_CTEChar -> .)
    COMMA           reduce using rule 127 (pn_CTEChar -> .)
    HASTA           reduce using rule 127 (pn_CTEChar -> .)
    RBRACK          reduce using rule 127 (pn_CTEChar -> .)
    HACER           reduce using rule 127 (pn_CTEChar -> .)

    pn_CTEChar                     shift and go to state 180

state 128

    (55) ctes -> STRING_CTE . pn_CTEString
    (128) pn_CTEString -> .

    MULT_OP         reduce using rule 128 (pn_CTEString -> .)
    DIV_OP          reduce using rule 128 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 128 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 128 (pn_CTEString -> .)
    LT_LOG          reduce using rule 128 (pn_CTEString -> .)
    GT_LOG          reduce using rule 128 (pn_CTEString -> .)
    LTE_LOG         reduce using rule 128 (pn_CTEString -> .)
    GTE_LOG         reduce using rule 128 (pn_CTEString -> .)
    NE_LOG          reduce using rule 128 (pn_CTEString -> .)
    EQUAL_LOG       reduce using rule 128 (pn_CTEString -> .)
    AND_LOG         reduce using rule 128 (pn_CTEString -> .)
    OR_LOG          reduce using rule 128 (pn_CTEString -> .)
    ASSIGN          reduce using rule 128 (pn_CTEString -> .)
    RPAREN          reduce using rule 128 (pn_CTEString -> .)
    SEMIC           reduce using rule 128 (pn_CTEString -> .)
    COMMA           reduce using rule 128 (pn_CTEString -> .)
    HASTA           reduce using rule 128 (pn_CTEString -> .)
    RBRACK          reduce using rule 128 (pn_CTEString -> .)
    HACER           reduce using rule 128 (pn_CTEString -> .)

    pn_CTEString                   shift and go to state 181

state 129

    (56) ctes -> MINUS_OP . pn_CTENeg num
    (124) pn_CTENeg -> .

    INT_CTE         reduce using rule 124 (pn_CTENeg -> .)
    FLOAT_CTE       reduce using rule 124 (pn_CTENeg -> .)

    pn_CTENeg                      shift and go to state 182

state 130

    (57) ctes -> num .

    MULT_OP         reduce using rule 57 (ctes -> num .)
    DIV_OP          reduce using rule 57 (ctes -> num .)
    PLUS_OP         reduce using rule 57 (ctes -> num .)
    MINUS_OP        reduce using rule 57 (ctes -> num .)
    LT_LOG          reduce using rule 57 (ctes -> num .)
    GT_LOG          reduce using rule 57 (ctes -> num .)
    LTE_LOG         reduce using rule 57 (ctes -> num .)
    GTE_LOG         reduce using rule 57 (ctes -> num .)
    NE_LOG          reduce using rule 57 (ctes -> num .)
    EQUAL_LOG       reduce using rule 57 (ctes -> num .)
    AND_LOG         reduce using rule 57 (ctes -> num .)
    OR_LOG          reduce using rule 57 (ctes -> num .)
    ASSIGN          reduce using rule 57 (ctes -> num .)
    RPAREN          reduce using rule 57 (ctes -> num .)
    SEMIC           reduce using rule 57 (ctes -> num .)
    COMMA           reduce using rule 57 (ctes -> num .)
    HASTA           reduce using rule 57 (ctes -> num .)
    RBRACK          reduce using rule 57 (ctes -> num .)
    HACER           reduce using rule 57 (ctes -> num .)


state 131

    (60) variable -> ID . pn_Expresion1 varDim
    (73) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (129) pn_Expresion1 -> .
    (121) pn_FuncionLlamada1 -> .

    LBRACK          reduce using rule 129 (pn_Expresion1 -> .)
    MULT_OP         reduce using rule 129 (pn_Expresion1 -> .)
    DIV_OP          reduce using rule 129 (pn_Expresion1 -> .)
    PLUS_OP         reduce using rule 129 (pn_Expresion1 -> .)
    MINUS_OP        reduce using rule 129 (pn_Expresion1 -> .)
    LT_LOG          reduce using rule 129 (pn_Expresion1 -> .)
    GT_LOG          reduce using rule 129 (pn_Expresion1 -> .)
    LTE_LOG         reduce using rule 129 (pn_Expresion1 -> .)
    GTE_LOG         reduce using rule 129 (pn_Expresion1 -> .)
    NE_LOG          reduce using rule 129 (pn_Expresion1 -> .)
    EQUAL_LOG       reduce using rule 129 (pn_Expresion1 -> .)
    AND_LOG         reduce using rule 129 (pn_Expresion1 -> .)
    OR_LOG          reduce using rule 129 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 129 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 129 (pn_Expresion1 -> .)
    SEMIC           reduce using rule 129 (pn_Expresion1 -> .)
    COMMA           reduce using rule 129 (pn_Expresion1 -> .)
    HASTA           reduce using rule 129 (pn_Expresion1 -> .)
    RBRACK          reduce using rule 129 (pn_Expresion1 -> .)
    HACER           reduce using rule 129 (pn_Expresion1 -> .)
    LPAREN          reduce using rule 121 (pn_FuncionLlamada1 -> .)

    pn_Expresion1                  shift and go to state 100
    pn_FuncionLlamada1             shift and go to state 99

state 132

    (58) num -> INT_CTE . pn_CTEInt
    (125) pn_CTEInt -> .

    MULT_OP         reduce using rule 125 (pn_CTEInt -> .)
    DIV_OP          reduce using rule 125 (pn_CTEInt -> .)
    PLUS_OP         reduce using rule 125 (pn_CTEInt -> .)
    MINUS_OP        reduce using rule 125 (pn_CTEInt -> .)
    LT_LOG          reduce using rule 125 (pn_CTEInt -> .)
    GT_LOG          reduce using rule 125 (pn_CTEInt -> .)
    LTE_LOG         reduce using rule 125 (pn_CTEInt -> .)
    GTE_LOG         reduce using rule 125 (pn_CTEInt -> .)
    NE_LOG          reduce using rule 125 (pn_CTEInt -> .)
    EQUAL_LOG       reduce using rule 125 (pn_CTEInt -> .)
    AND_LOG         reduce using rule 125 (pn_CTEInt -> .)
    OR_LOG          reduce using rule 125 (pn_CTEInt -> .)
    ASSIGN          reduce using rule 125 (pn_CTEInt -> .)
    RPAREN          reduce using rule 125 (pn_CTEInt -> .)
    SEMIC           reduce using rule 125 (pn_CTEInt -> .)
    COMMA           reduce using rule 125 (pn_CTEInt -> .)
    HASTA           reduce using rule 125 (pn_CTEInt -> .)
    RBRACK          reduce using rule 125 (pn_CTEInt -> .)
    HACER           reduce using rule 125 (pn_CTEInt -> .)

    pn_CTEInt                      shift and go to state 183

state 133

    (59) num -> FLOAT_CTE . pn_CTEFloat
    (126) pn_CTEFloat -> .

    MULT_OP         reduce using rule 126 (pn_CTEFloat -> .)
    DIV_OP          reduce using rule 126 (pn_CTEFloat -> .)
    PLUS_OP         reduce using rule 126 (pn_CTEFloat -> .)
    MINUS_OP        reduce using rule 126 (pn_CTEFloat -> .)
    LT_LOG          reduce using rule 126 (pn_CTEFloat -> .)
    GT_LOG          reduce using rule 126 (pn_CTEFloat -> .)
    LTE_LOG         reduce using rule 126 (pn_CTEFloat -> .)
    GTE_LOG         reduce using rule 126 (pn_CTEFloat -> .)
    NE_LOG          reduce using rule 126 (pn_CTEFloat -> .)
    EQUAL_LOG       reduce using rule 126 (pn_CTEFloat -> .)
    AND_LOG         reduce using rule 126 (pn_CTEFloat -> .)
    OR_LOG          reduce using rule 126 (pn_CTEFloat -> .)
    ASSIGN          reduce using rule 126 (pn_CTEFloat -> .)
    RPAREN          reduce using rule 126 (pn_CTEFloat -> .)
    SEMIC           reduce using rule 126 (pn_CTEFloat -> .)
    COMMA           reduce using rule 126 (pn_CTEFloat -> .)
    HASTA           reduce using rule 126 (pn_CTEFloat -> .)
    RBRACK          reduce using rule 126 (pn_CTEFloat -> .)
    HACER           reduce using rule 126 (pn_CTEFloat -> .)

    pn_CTEFloat                    shift and go to state 184

state 134

    (74) regresa -> REGRESA pn_Secuencial3 LPAREN . exp RPAREN pn_Regresa SEMIC
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 185
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 135

    (66) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN . expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (80) expresion -> . mega_exp expresion1
    (83) mega_exp -> . super_exp meg
    (88) super_exp -> . exp sp
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    expresion                      shift and go to state 186
    mega_exp                       shift and go to state 119
    super_exp                      shift and go to state 120
    exp                            shift and go to state 121
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 136

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable . ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    ASSIGN          shift and go to state 187


state 137

    (60) variable -> ID . pn_Expresion1 varDim
    (129) pn_Expresion1 -> .

    LBRACK          reduce using rule 129 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 129 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 129 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 100

state 138

    (73) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN . pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (134) pn_Expresion6 -> .

    LPAREN          reduce using rule 134 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 134 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 134 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 134 (pn_Expresion6 -> .)
    ID              reduce using rule 134 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 134 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 134 (pn_Expresion6 -> .)
    RPAREN          reduce using rule 134 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 188

state 139

    (60) variable -> ID pn_Expresion1 varDim .

    ASSIGN          reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    MULT_OP         reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    DIV_OP          reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    PLUS_OP         reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    MINUS_OP        reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    LT_LOG          reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    GT_LOG          reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    LTE_LOG         reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    GTE_LOG         reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    NE_LOG          reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    EQUAL_LOG       reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    AND_LOG         reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    OR_LOG          reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    RPAREN          reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    SEMIC           reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    COMMA           reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    HASTA           reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    RBRACK          reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)
    HACER           reduce using rule 60 (variable -> ID pn_Expresion1 varDim .)


state 140

    (61) varDim -> LBRACK . pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7
    (162) pn_AccederDimension -> .

    LPAREN          reduce using rule 162 (pn_AccederDimension -> .)
    CHAR_CTE        reduce using rule 162 (pn_AccederDimension -> .)
    STRING_CTE      reduce using rule 162 (pn_AccederDimension -> .)
    MINUS_OP        reduce using rule 162 (pn_AccederDimension -> .)
    ID              reduce using rule 162 (pn_AccederDimension -> .)
    INT_CTE         reduce using rule 162 (pn_AccederDimension -> .)
    FLOAT_CTE       reduce using rule 162 (pn_AccederDimension -> .)

    pn_AccederDimension            shift and go to state 189

state 141

    (62) varDim -> empty .

    ASSIGN          reduce using rule 62 (varDim -> empty .)
    MULT_OP         reduce using rule 62 (varDim -> empty .)
    DIV_OP          reduce using rule 62 (varDim -> empty .)
    PLUS_OP         reduce using rule 62 (varDim -> empty .)
    MINUS_OP        reduce using rule 62 (varDim -> empty .)
    LT_LOG          reduce using rule 62 (varDim -> empty .)
    GT_LOG          reduce using rule 62 (varDim -> empty .)
    LTE_LOG         reduce using rule 62 (varDim -> empty .)
    GTE_LOG         reduce using rule 62 (varDim -> empty .)
    NE_LOG          reduce using rule 62 (varDim -> empty .)
    EQUAL_LOG       reduce using rule 62 (varDim -> empty .)
    AND_LOG         reduce using rule 62 (varDim -> empty .)
    OR_LOG          reduce using rule 62 (varDim -> empty .)
    RPAREN          reduce using rule 62 (varDim -> empty .)
    SEMIC           reduce using rule 62 (varDim -> empty .)
    COMMA           reduce using rule 62 (varDim -> empty .)
    HASTA           reduce using rule 62 (varDim -> empty .)
    RBRACK          reduce using rule 62 (varDim -> empty .)
    HACER           reduce using rule 62 (varDim -> empty .)


state 142

    (75) escritura -> ESCRIBE pn_Secuencial3 LPAREN . escritura2 RPAREN SEMIC pn_Secuencial5
    (76) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (77) escritura2 -> . exp pn_Secuencial4 escritura3
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 191
    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    escritura2                     shift and go to state 190
    exp                            shift and go to state 192
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 143

    (68) lectura -> LEE pn_Secuencial3 LPAREN . variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5
    (60) variable -> . ID pn_Expresion1 varDim

    ID              shift and go to state 137

    variable                       shift and go to state 193

state 144

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN . pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (134) pn_Expresion6 -> .

    LPAREN          reduce using rule 134 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 134 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 134 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 134 (pn_Expresion6 -> .)
    ID              reduce using rule 134 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 134 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 134 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 194

state 145

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN . pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (134) pn_Expresion6 -> .

    LPAREN          reduce using rule 134 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 134 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 134 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 134 (pn_Expresion6 -> .)
    ID              reduce using rule 134 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 134 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 134 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 195

state 146

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (134) pn_Expresion6 -> .

    LPAREN          reduce using rule 134 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 134 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 134 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 134 (pn_Expresion6 -> .)
    ID              reduce using rule 134 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 134 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 134 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 196

state 147

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (134) pn_Expresion6 -> .

    LPAREN          reduce using rule 134 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 134 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 134 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 134 (pn_Expresion6 -> .)
    ID              reduce using rule 134 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 134 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 134 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 197

state 148

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN . pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (134) pn_Expresion6 -> .

    LPAREN          reduce using rule 134 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 134 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 134 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 134 (pn_Expresion6 -> .)
    ID              reduce using rule 134 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 134 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 134 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 198

state 149

    (44) funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN . RPAREN SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 199


state 150

    (45) funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN . RPAREN SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 200


state 151

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (134) pn_Expresion6 -> .

    LPAREN          reduce using rule 134 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 134 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 134 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 134 (pn_Expresion6 -> .)
    ID              reduce using rule 134 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 134 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 134 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 201

state 152

    (47) funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN . RPAREN SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 202


state 153

    (48) funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN . ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2

    ID              shift and go to state 203


state 154

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables . bloque pn_Funcion3
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 204

state 155

    (23) lista_parametros -> tipo ID pn_Funcion1 lista_parametros2 .

    RPAREN          reduce using rule 23 (lista_parametros -> tipo ID pn_Funcion1 lista_parametros2 .)


state 156

    (24) lista_parametros2 -> COMMA . lista_parametros
    (23) lista_parametros -> . tipo ID pn_Funcion1 lista_parametros2
    (13) tipo -> . INT_TYPE pn_SetCurrentType
    (14) tipo -> . CHAR_TYPE pn_SetCurrentType
    (15) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    lista_parametros               shift and go to state 205
    tipo                           shift and go to state 56

state 157

    (25) lista_parametros2 -> empty .

    RPAREN          reduce using rule 25 (lista_parametros2 -> empty .)


state 158

    (53) asignacion -> variable ASSIGN pn_Secuencial1 exp . SEMIC pn_Secuencial2

    SEMIC           shift and go to state 206


state 159

    (108) factor -> LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 207
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 160

    (63) condicion -> SI LPAREN expresion RPAREN . pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (146) pn_Condicion1 -> .

    ENTONCES        reduce using rule 146 (pn_Condicion1 -> .)

    pn_Condicion1                  shift and go to state 208

state 161

    (80) expresion -> mega_exp expresion1 .

    RPAREN          reduce using rule 80 (expresion -> mega_exp expresion1 .)
    COMMA           reduce using rule 80 (expresion -> mega_exp expresion1 .)


state 162

    (81) expresion1 -> ASSIGN . expresion
    (80) expresion -> . mega_exp expresion1
    (83) mega_exp -> . super_exp meg
    (88) super_exp -> . exp sp
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    expresion                      shift and go to state 209
    mega_exp                       shift and go to state 119
    super_exp                      shift and go to state 120
    exp                            shift and go to state 121
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 163

    (82) expresion1 -> empty .

    RPAREN          reduce using rule 82 (expresion1 -> empty .)
    COMMA           reduce using rule 82 (expresion1 -> empty .)


state 164

    (83) mega_exp -> super_exp meg .

    ASSIGN          reduce using rule 83 (mega_exp -> super_exp meg .)
    RPAREN          reduce using rule 83 (mega_exp -> super_exp meg .)
    COMMA           reduce using rule 83 (mega_exp -> super_exp meg .)


state 165

    (84) meg -> op_l . pn_Expresion10 mega_exp pn_Expresion11
    (138) pn_Expresion10 -> .

    LPAREN          reduce using rule 138 (pn_Expresion10 -> .)
    CHAR_CTE        reduce using rule 138 (pn_Expresion10 -> .)
    STRING_CTE      reduce using rule 138 (pn_Expresion10 -> .)
    MINUS_OP        reduce using rule 138 (pn_Expresion10 -> .)
    ID              reduce using rule 138 (pn_Expresion10 -> .)
    INT_CTE         reduce using rule 138 (pn_Expresion10 -> .)
    FLOAT_CTE       reduce using rule 138 (pn_Expresion10 -> .)

    pn_Expresion10                 shift and go to state 210

state 166

    (85) meg -> empty .

    ASSIGN          reduce using rule 85 (meg -> empty .)
    RPAREN          reduce using rule 85 (meg -> empty .)
    COMMA           reduce using rule 85 (meg -> empty .)


state 167

    (86) op_l -> AND_LOG .

    LPAREN          reduce using rule 86 (op_l -> AND_LOG .)
    CHAR_CTE        reduce using rule 86 (op_l -> AND_LOG .)
    STRING_CTE      reduce using rule 86 (op_l -> AND_LOG .)
    MINUS_OP        reduce using rule 86 (op_l -> AND_LOG .)
    ID              reduce using rule 86 (op_l -> AND_LOG .)
    INT_CTE         reduce using rule 86 (op_l -> AND_LOG .)
    FLOAT_CTE       reduce using rule 86 (op_l -> AND_LOG .)


state 168

    (87) op_l -> OR_LOG .

    LPAREN          reduce using rule 87 (op_l -> OR_LOG .)
    CHAR_CTE        reduce using rule 87 (op_l -> OR_LOG .)
    STRING_CTE      reduce using rule 87 (op_l -> OR_LOG .)
    MINUS_OP        reduce using rule 87 (op_l -> OR_LOG .)
    ID              reduce using rule 87 (op_l -> OR_LOG .)
    INT_CTE         reduce using rule 87 (op_l -> OR_LOG .)
    FLOAT_CTE       reduce using rule 87 (op_l -> OR_LOG .)


state 169

    (88) super_exp -> exp sp .

    AND_LOG         reduce using rule 88 (super_exp -> exp sp .)
    OR_LOG          reduce using rule 88 (super_exp -> exp sp .)
    ASSIGN          reduce using rule 88 (super_exp -> exp sp .)
    RPAREN          reduce using rule 88 (super_exp -> exp sp .)
    COMMA           reduce using rule 88 (super_exp -> exp sp .)


state 170

    (89) sp -> op_r . exp pn_Expresion9
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 211
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 171

    (90) sp -> empty .

    AND_LOG         reduce using rule 90 (sp -> empty .)
    OR_LOG          reduce using rule 90 (sp -> empty .)
    ASSIGN          reduce using rule 90 (sp -> empty .)
    RPAREN          reduce using rule 90 (sp -> empty .)
    COMMA           reduce using rule 90 (sp -> empty .)


state 172

    (91) op_r -> LT_LOG . pn_Expresion8
    (136) pn_Expresion8 -> .

    LPAREN          reduce using rule 136 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion8 -> .)
    ID              reduce using rule 136 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 212

state 173

    (92) op_r -> GT_LOG . pn_Expresion8
    (136) pn_Expresion8 -> .

    LPAREN          reduce using rule 136 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion8 -> .)
    ID              reduce using rule 136 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 213

state 174

    (93) op_r -> LTE_LOG . pn_Expresion8
    (136) pn_Expresion8 -> .

    LPAREN          reduce using rule 136 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion8 -> .)
    ID              reduce using rule 136 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 214

state 175

    (94) op_r -> GTE_LOG . pn_Expresion8
    (136) pn_Expresion8 -> .

    LPAREN          reduce using rule 136 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion8 -> .)
    ID              reduce using rule 136 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 215

state 176

    (95) op_r -> NE_LOG . pn_Expresion8
    (136) pn_Expresion8 -> .

    LPAREN          reduce using rule 136 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion8 -> .)
    ID              reduce using rule 136 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 216

state 177

    (96) op_r -> EQUAL_LOG . pn_Expresion8
    (136) pn_Expresion8 -> .

    LPAREN          reduce using rule 136 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 136 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 136 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 136 (pn_Expresion8 -> .)
    ID              reduce using rule 136 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 136 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 136 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 217

state 178

    (97) exp -> termino pn_Expresion4 . exp1
    (98) exp1 -> . op_a exp
    (99) exp1 -> . empty
    (100) op_a -> . PLUS_OP pn_Expresion2
    (101) op_a -> . MINUS_OP pn_Expresion2
    (111) empty -> .

    PLUS_OP         shift and go to state 221
    MINUS_OP        shift and go to state 222
    LT_LOG          reduce using rule 111 (empty -> .)
    GT_LOG          reduce using rule 111 (empty -> .)
    LTE_LOG         reduce using rule 111 (empty -> .)
    GTE_LOG         reduce using rule 111 (empty -> .)
    NE_LOG          reduce using rule 111 (empty -> .)
    EQUAL_LOG       reduce using rule 111 (empty -> .)
    AND_LOG         reduce using rule 111 (empty -> .)
    OR_LOG          reduce using rule 111 (empty -> .)
    ASSIGN          reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)
    SEMIC           reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    HASTA           reduce using rule 111 (empty -> .)
    RBRACK          reduce using rule 111 (empty -> .)
    HACER           reduce using rule 111 (empty -> .)

    exp1                           shift and go to state 218
    op_a                           shift and go to state 219
    empty                          shift and go to state 220

state 179

    (102) termino -> factor pn_Expresion5 . term
    (103) term -> . op_a1 termino
    (104) term -> . empty
    (105) op_a1 -> . MULT_OP pn_Expresion3
    (106) op_a1 -> . DIV_OP pn_Expresion3
    (111) empty -> .

    MULT_OP         shift and go to state 226
    DIV_OP          shift and go to state 227
    PLUS_OP         reduce using rule 111 (empty -> .)
    MINUS_OP        reduce using rule 111 (empty -> .)
    LT_LOG          reduce using rule 111 (empty -> .)
    GT_LOG          reduce using rule 111 (empty -> .)
    LTE_LOG         reduce using rule 111 (empty -> .)
    GTE_LOG         reduce using rule 111 (empty -> .)
    NE_LOG          reduce using rule 111 (empty -> .)
    EQUAL_LOG       reduce using rule 111 (empty -> .)
    AND_LOG         reduce using rule 111 (empty -> .)
    OR_LOG          reduce using rule 111 (empty -> .)
    ASSIGN          reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)
    SEMIC           reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    HASTA           reduce using rule 111 (empty -> .)
    RBRACK          reduce using rule 111 (empty -> .)
    HACER           reduce using rule 111 (empty -> .)

    term                           shift and go to state 223
    op_a1                          shift and go to state 224
    empty                          shift and go to state 225

state 180

    (54) ctes -> CHAR_CTE pn_CTEChar .

    MULT_OP         reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    DIV_OP          reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    PLUS_OP         reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    MINUS_OP        reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    LT_LOG          reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    GT_LOG          reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    LTE_LOG         reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    GTE_LOG         reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    NE_LOG          reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    EQUAL_LOG       reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    AND_LOG         reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    OR_LOG          reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    ASSIGN          reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    RPAREN          reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    SEMIC           reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    COMMA           reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    HASTA           reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    RBRACK          reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)
    HACER           reduce using rule 54 (ctes -> CHAR_CTE pn_CTEChar .)


state 181

    (55) ctes -> STRING_CTE pn_CTEString .

    MULT_OP         reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    DIV_OP          reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    PLUS_OP         reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    MINUS_OP        reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    LT_LOG          reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    GT_LOG          reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    LTE_LOG         reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    GTE_LOG         reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    NE_LOG          reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    EQUAL_LOG       reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    AND_LOG         reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    OR_LOG          reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    ASSIGN          reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    RPAREN          reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    SEMIC           reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    COMMA           reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    HASTA           reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    RBRACK          reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)
    HACER           reduce using rule 55 (ctes -> STRING_CTE pn_CTEString .)


state 182

    (56) ctes -> MINUS_OP pn_CTENeg . num
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    num                            shift and go to state 228

state 183

    (58) num -> INT_CTE pn_CTEInt .

    MULT_OP         reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    DIV_OP          reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    PLUS_OP         reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    MINUS_OP        reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    LT_LOG          reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    GT_LOG          reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    LTE_LOG         reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    GTE_LOG         reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    NE_LOG          reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    EQUAL_LOG       reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    AND_LOG         reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    OR_LOG          reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    ASSIGN          reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    RPAREN          reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    SEMIC           reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    COMMA           reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    HASTA           reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    RBRACK          reduce using rule 58 (num -> INT_CTE pn_CTEInt .)
    HACER           reduce using rule 58 (num -> INT_CTE pn_CTEInt .)


state 184

    (59) num -> FLOAT_CTE pn_CTEFloat .

    MULT_OP         reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    DIV_OP          reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    PLUS_OP         reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    MINUS_OP        reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    LT_LOG          reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    GT_LOG          reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    LTE_LOG         reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    GTE_LOG         reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    NE_LOG          reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    EQUAL_LOG       reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    AND_LOG         reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    OR_LOG          reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    ASSIGN          reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    RPAREN          reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    SEMIC           reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    COMMA           reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    HASTA           reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    RBRACK          reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)
    HACER           reduce using rule 59 (num -> FLOAT_CTE pn_CTEFloat .)


state 185

    (74) regresa -> REGRESA pn_Secuencial3 LPAREN exp . RPAREN pn_Regresa SEMIC

    RPAREN          shift and go to state 229


state 186

    (66) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion . RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    RPAREN          shift and go to state 230


state 187

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN . pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (140) pn_Secuencial1 -> .

    LPAREN          reduce using rule 140 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 140 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 140 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 140 (pn_Secuencial1 -> .)
    ID              reduce using rule 140 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 140 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 140 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 231

state 188

    (73) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 . llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (69) llamada_param -> . expresion pn_FuncionLlamada2 llamada_param2
    (70) llamada_param -> . empty
    (80) expresion -> . mega_exp expresion1
    (111) empty -> .
    (83) mega_exp -> . super_exp meg
    (88) super_exp -> . exp sp
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    RPAREN          reduce using rule 111 (empty -> .)
    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    llamada_param                  shift and go to state 232
    expresion                      shift and go to state 233
    empty                          shift and go to state 234
    mega_exp                       shift and go to state 119
    super_exp                      shift and go to state 120
    exp                            shift and go to state 121
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 189

    (61) varDim -> LBRACK pn_AccederDimension . pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7
    (134) pn_Expresion6 -> .

    LPAREN          reduce using rule 134 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 134 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 134 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 134 (pn_Expresion6 -> .)
    ID              reduce using rule 134 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 134 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 134 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 235

state 190

    (75) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 236


state 191

    (76) escritura2 -> STRING_CTE . pn_Secuencial4 escritura3
    (55) ctes -> STRING_CTE . pn_CTEString
    (143) pn_Secuencial4 -> .
    (128) pn_CTEString -> .

  ! reduce/reduce conflict for COMMA resolved using rule 128 (pn_CTEString -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 128 (pn_CTEString -> .)
    MULT_OP         reduce using rule 128 (pn_CTEString -> .)
    DIV_OP          reduce using rule 128 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 128 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 128 (pn_CTEString -> .)
    COMMA           reduce using rule 128 (pn_CTEString -> .)
    RPAREN          reduce using rule 128 (pn_CTEString -> .)

  ! COMMA           [ reduce using rule 143 (pn_Secuencial4 -> .) ]
  ! RPAREN          [ reduce using rule 143 (pn_Secuencial4 -> .) ]

    pn_Secuencial4                 shift and go to state 237
    pn_CTEString                   shift and go to state 181

state 192

    (77) escritura2 -> exp . pn_Secuencial4 escritura3
    (143) pn_Secuencial4 -> .

    COMMA           reduce using rule 143 (pn_Secuencial4 -> .)
    RPAREN          reduce using rule 143 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 238

state 193

    (68) lectura -> LEE pn_Secuencial3 LPAREN variable . RPAREN SEMIC pn_Secuencial4 pn_Secuencial5

    RPAREN          shift and go to state 239


state 194

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 . exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 240
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 195

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 . exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 241
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 196

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 242
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 197

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 243
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 198

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 . exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 244
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 199

    (44) funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 245


state 200

    (45) funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 246


state 201

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 247
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 202

    (47) funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 248


state 203

    (48) funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID . pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2
    (129) pn_Expresion1 -> .

    RPAREN          reduce using rule 129 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 249

state 204

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque . pn_Funcion3
    (117) pn_Funcion3 -> .

    FUNCION         reduce using rule 117 (pn_Funcion3 -> .)
    PRINCIPAL       reduce using rule 117 (pn_Funcion3 -> .)

    pn_Funcion3                    shift and go to state 250

state 205

    (24) lista_parametros2 -> COMMA lista_parametros .

    RPAREN          reduce using rule 24 (lista_parametros2 -> COMMA lista_parametros .)


state 206

    (53) asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC . pn_Secuencial2
    (141) pn_Secuencial2 -> .

    SI              reduce using rule 141 (pn_Secuencial2 -> .)
    REGRESA         reduce using rule 141 (pn_Secuencial2 -> .)
    MIENTRAS        reduce using rule 141 (pn_Secuencial2 -> .)
    DESDE           reduce using rule 141 (pn_Secuencial2 -> .)
    ID              reduce using rule 141 (pn_Secuencial2 -> .)
    ESCRIBE         reduce using rule 141 (pn_Secuencial2 -> .)
    LEE             reduce using rule 141 (pn_Secuencial2 -> .)
    LINEA           reduce using rule 141 (pn_Secuencial2 -> .)
    PUNTO           reduce using rule 141 (pn_Secuencial2 -> .)
    CIRCULO         reduce using rule 141 (pn_Secuencial2 -> .)
    COLOR           reduce using rule 141 (pn_Secuencial2 -> .)
    ARCO            reduce using rule 141 (pn_Secuencial2 -> .)
    PENUP           reduce using rule 141 (pn_Secuencial2 -> .)
    PENDOWN         reduce using rule 141 (pn_Secuencial2 -> .)
    GROSOR          reduce using rule 141 (pn_Secuencial2 -> .)
    LIMPIAR         reduce using rule 141 (pn_Secuencial2 -> .)
    ORDENA          reduce using rule 141 (pn_Secuencial2 -> .)
    RCURLY          reduce using rule 141 (pn_Secuencial2 -> .)

    pn_Secuencial2                 shift and go to state 251

state 207

    (108) factor -> LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7

    RPAREN          shift and go to state 252


state 208

    (63) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 . ENTONCES bloque else pn_Condicion2

    ENTONCES        shift and go to state 253


state 209

    (81) expresion1 -> ASSIGN expresion .

    RPAREN          reduce using rule 81 (expresion1 -> ASSIGN expresion .)
    COMMA           reduce using rule 81 (expresion1 -> ASSIGN expresion .)


state 210

    (84) meg -> op_l pn_Expresion10 . mega_exp pn_Expresion11
    (83) mega_exp -> . super_exp meg
    (88) super_exp -> . exp sp
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    mega_exp                       shift and go to state 254
    super_exp                      shift and go to state 120
    exp                            shift and go to state 121
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 211

    (89) sp -> op_r exp . pn_Expresion9
    (137) pn_Expresion9 -> .

    AND_LOG         reduce using rule 137 (pn_Expresion9 -> .)
    OR_LOG          reduce using rule 137 (pn_Expresion9 -> .)
    ASSIGN          reduce using rule 137 (pn_Expresion9 -> .)
    RPAREN          reduce using rule 137 (pn_Expresion9 -> .)
    COMMA           reduce using rule 137 (pn_Expresion9 -> .)

    pn_Expresion9                  shift and go to state 255

state 212

    (91) op_r -> LT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 91 (op_r -> LT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 91 (op_r -> LT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 91 (op_r -> LT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 91 (op_r -> LT_LOG pn_Expresion8 .)
    ID              reduce using rule 91 (op_r -> LT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 91 (op_r -> LT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 91 (op_r -> LT_LOG pn_Expresion8 .)


state 213

    (92) op_r -> GT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 92 (op_r -> GT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 92 (op_r -> GT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 92 (op_r -> GT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 92 (op_r -> GT_LOG pn_Expresion8 .)
    ID              reduce using rule 92 (op_r -> GT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 92 (op_r -> GT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 92 (op_r -> GT_LOG pn_Expresion8 .)


state 214

    (93) op_r -> LTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 93 (op_r -> LTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 93 (op_r -> LTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 93 (op_r -> LTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 93 (op_r -> LTE_LOG pn_Expresion8 .)
    ID              reduce using rule 93 (op_r -> LTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 93 (op_r -> LTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 93 (op_r -> LTE_LOG pn_Expresion8 .)


state 215

    (94) op_r -> GTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 94 (op_r -> GTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 94 (op_r -> GTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 94 (op_r -> GTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 94 (op_r -> GTE_LOG pn_Expresion8 .)
    ID              reduce using rule 94 (op_r -> GTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 94 (op_r -> GTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 94 (op_r -> GTE_LOG pn_Expresion8 .)


state 216

    (95) op_r -> NE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 95 (op_r -> NE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 95 (op_r -> NE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 95 (op_r -> NE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 95 (op_r -> NE_LOG pn_Expresion8 .)
    ID              reduce using rule 95 (op_r -> NE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 95 (op_r -> NE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 95 (op_r -> NE_LOG pn_Expresion8 .)


state 217

    (96) op_r -> EQUAL_LOG pn_Expresion8 .

    LPAREN          reduce using rule 96 (op_r -> EQUAL_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 96 (op_r -> EQUAL_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 96 (op_r -> EQUAL_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 96 (op_r -> EQUAL_LOG pn_Expresion8 .)
    ID              reduce using rule 96 (op_r -> EQUAL_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 96 (op_r -> EQUAL_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 96 (op_r -> EQUAL_LOG pn_Expresion8 .)


state 218

    (97) exp -> termino pn_Expresion4 exp1 .

    LT_LOG          reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    GT_LOG          reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    LTE_LOG         reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    GTE_LOG         reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    NE_LOG          reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    EQUAL_LOG       reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    AND_LOG         reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    OR_LOG          reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    ASSIGN          reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    RPAREN          reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    SEMIC           reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    COMMA           reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    HASTA           reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    RBRACK          reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)
    HACER           reduce using rule 97 (exp -> termino pn_Expresion4 exp1 .)


state 219

    (98) exp1 -> op_a . exp
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 256
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 220

    (99) exp1 -> empty .

    LT_LOG          reduce using rule 99 (exp1 -> empty .)
    GT_LOG          reduce using rule 99 (exp1 -> empty .)
    LTE_LOG         reduce using rule 99 (exp1 -> empty .)
    GTE_LOG         reduce using rule 99 (exp1 -> empty .)
    NE_LOG          reduce using rule 99 (exp1 -> empty .)
    EQUAL_LOG       reduce using rule 99 (exp1 -> empty .)
    AND_LOG         reduce using rule 99 (exp1 -> empty .)
    OR_LOG          reduce using rule 99 (exp1 -> empty .)
    ASSIGN          reduce using rule 99 (exp1 -> empty .)
    RPAREN          reduce using rule 99 (exp1 -> empty .)
    SEMIC           reduce using rule 99 (exp1 -> empty .)
    COMMA           reduce using rule 99 (exp1 -> empty .)
    HASTA           reduce using rule 99 (exp1 -> empty .)
    RBRACK          reduce using rule 99 (exp1 -> empty .)
    HACER           reduce using rule 99 (exp1 -> empty .)


state 221

    (100) op_a -> PLUS_OP . pn_Expresion2
    (130) pn_Expresion2 -> .

    LPAREN          reduce using rule 130 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 130 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 130 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 130 (pn_Expresion2 -> .)
    ID              reduce using rule 130 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 130 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 130 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 257

state 222

    (101) op_a -> MINUS_OP . pn_Expresion2
    (130) pn_Expresion2 -> .

    LPAREN          reduce using rule 130 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 130 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 130 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 130 (pn_Expresion2 -> .)
    ID              reduce using rule 130 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 130 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 130 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 258

state 223

    (102) termino -> factor pn_Expresion5 term .

    PLUS_OP         reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    MINUS_OP        reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    LT_LOG          reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    GT_LOG          reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    LTE_LOG         reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    GTE_LOG         reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    NE_LOG          reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    EQUAL_LOG       reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    AND_LOG         reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    OR_LOG          reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    ASSIGN          reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    RPAREN          reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    SEMIC           reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    COMMA           reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    HASTA           reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    RBRACK          reduce using rule 102 (termino -> factor pn_Expresion5 term .)
    HACER           reduce using rule 102 (termino -> factor pn_Expresion5 term .)


state 224

    (103) term -> op_a1 . termino
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    termino                        shift and go to state 259
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 225

    (104) term -> empty .

    PLUS_OP         reduce using rule 104 (term -> empty .)
    MINUS_OP        reduce using rule 104 (term -> empty .)
    LT_LOG          reduce using rule 104 (term -> empty .)
    GT_LOG          reduce using rule 104 (term -> empty .)
    LTE_LOG         reduce using rule 104 (term -> empty .)
    GTE_LOG         reduce using rule 104 (term -> empty .)
    NE_LOG          reduce using rule 104 (term -> empty .)
    EQUAL_LOG       reduce using rule 104 (term -> empty .)
    AND_LOG         reduce using rule 104 (term -> empty .)
    OR_LOG          reduce using rule 104 (term -> empty .)
    ASSIGN          reduce using rule 104 (term -> empty .)
    RPAREN          reduce using rule 104 (term -> empty .)
    SEMIC           reduce using rule 104 (term -> empty .)
    COMMA           reduce using rule 104 (term -> empty .)
    HASTA           reduce using rule 104 (term -> empty .)
    RBRACK          reduce using rule 104 (term -> empty .)
    HACER           reduce using rule 104 (term -> empty .)


state 226

    (105) op_a1 -> MULT_OP . pn_Expresion3
    (131) pn_Expresion3 -> .

    LPAREN          reduce using rule 131 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 131 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 131 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 131 (pn_Expresion3 -> .)
    ID              reduce using rule 131 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 131 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 131 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 260

state 227

    (106) op_a1 -> DIV_OP . pn_Expresion3
    (131) pn_Expresion3 -> .

    LPAREN          reduce using rule 131 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 131 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 131 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 131 (pn_Expresion3 -> .)
    ID              reduce using rule 131 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 131 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 131 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 261

state 228

    (56) ctes -> MINUS_OP pn_CTENeg num .

    MULT_OP         reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    DIV_OP          reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    PLUS_OP         reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    MINUS_OP        reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    LT_LOG          reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    GT_LOG          reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    LTE_LOG         reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    GTE_LOG         reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    NE_LOG          reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    EQUAL_LOG       reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    AND_LOG         reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    OR_LOG          reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    ASSIGN          reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    RPAREN          reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    SEMIC           reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    COMMA           reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    HASTA           reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    RBRACK          reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)
    HACER           reduce using rule 56 (ctes -> MINUS_OP pn_CTENeg num .)


state 229

    (74) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN . pn_Regresa SEMIC
    (145) pn_Regresa -> .

    SEMIC           reduce using rule 145 (pn_Regresa -> .)

    pn_Regresa                     shift and go to state 262

state 230

    (66) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN . pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (150) pn_loop_condicional2 -> .

    HACER           reduce using rule 150 (pn_loop_condicional2 -> .)

    pn_loop_condicional2           shift and go to state 263

state 231

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 . exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    variable                       shift and go to state 125
    exp                            shift and go to state 264
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 232

    (73) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param . RPAREN pn_Expresion7 pn_FuncionLlamada3

    RPAREN          shift and go to state 265


state 233

    (69) llamada_param -> expresion . pn_FuncionLlamada2 llamada_param2
    (122) pn_FuncionLlamada2 -> .

    COMMA           reduce using rule 122 (pn_FuncionLlamada2 -> .)
    RPAREN          reduce using rule 122 (pn_FuncionLlamada2 -> .)

    pn_FuncionLlamada2             shift and go to state 266

state 234

    (70) llamada_param -> empty .

    RPAREN          reduce using rule 70 (llamada_param -> empty .)


state 235

    (61) varDim -> LBRACK pn_AccederDimension pn_Expresion6 . exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 267
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 236

    (75) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 268


state 237

    (76) escritura2 -> STRING_CTE pn_Secuencial4 . escritura3
    (78) escritura3 -> . COMMA escritura2
    (79) escritura3 -> . empty
    (111) empty -> .

    COMMA           shift and go to state 270
    RPAREN          reduce using rule 111 (empty -> .)

    escritura3                     shift and go to state 269
    empty                          shift and go to state 271

state 238

    (77) escritura2 -> exp pn_Secuencial4 . escritura3
    (78) escritura3 -> . COMMA escritura2
    (79) escritura3 -> . empty
    (111) empty -> .

    COMMA           shift and go to state 270
    RPAREN          reduce using rule 111 (empty -> .)

    escritura3                     shift and go to state 272
    empty                          shift and go to state 271

state 239

    (68) lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN . SEMIC pn_Secuencial4 pn_Secuencial5

    SEMIC           shift and go to state 273


state 240

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp . COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    COMMA           shift and go to state 274


state 241

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp . COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    COMMA           shift and go to state 275


state 242

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 276


state 243

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 277


state 244

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp . COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    COMMA           shift and go to state 278


state 245

    (44) funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC . pn_FuncionEspecial2
    (120) pn_FuncionEspecial2 -> .

    SI              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 120 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ORDENA          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 120 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 279

state 246

    (45) funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC . pn_FuncionEspecial2
    (120) pn_FuncionEspecial2 -> .

    SI              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 120 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ORDENA          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 120 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 280

state 247

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 281


state 248

    (47) funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC . pn_FuncionEspecial2
    (120) pn_FuncionEspecial2 -> .

    SI              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 120 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ORDENA          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 120 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 282

state 249

    (48) funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 . RPAREN SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 283


state 250

    (18) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .

    FUNCION         reduce using rule 18 (dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)
    PRINCIPAL       reduce using rule 18 (dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)


state 251

    (53) asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .

    SI              reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    REGRESA         reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    MIENTRAS        reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    DESDE           reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    ID              reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    ESCRIBE         reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    LEE             reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    LINEA           reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    PUNTO           reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    CIRCULO         reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    COLOR           reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    ARCO            reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    PENUP           reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    PENDOWN         reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    GROSOR          reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    LIMPIAR         reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    ORDENA          reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)
    RCURLY          reduce using rule 53 (asignacion -> variable ASSIGN pn_Secuencial1 exp SEMIC pn_Secuencial2 .)


state 252

    (108) factor -> LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7
    (135) pn_Expresion7 -> .

    MULT_OP         reduce using rule 135 (pn_Expresion7 -> .)
    DIV_OP          reduce using rule 135 (pn_Expresion7 -> .)
    PLUS_OP         reduce using rule 135 (pn_Expresion7 -> .)
    MINUS_OP        reduce using rule 135 (pn_Expresion7 -> .)
    LT_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    GT_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    LTE_LOG         reduce using rule 135 (pn_Expresion7 -> .)
    GTE_LOG         reduce using rule 135 (pn_Expresion7 -> .)
    NE_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    EQUAL_LOG       reduce using rule 135 (pn_Expresion7 -> .)
    AND_LOG         reduce using rule 135 (pn_Expresion7 -> .)
    OR_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    ASSIGN          reduce using rule 135 (pn_Expresion7 -> .)
    RPAREN          reduce using rule 135 (pn_Expresion7 -> .)
    SEMIC           reduce using rule 135 (pn_Expresion7 -> .)
    COMMA           reduce using rule 135 (pn_Expresion7 -> .)
    HASTA           reduce using rule 135 (pn_Expresion7 -> .)
    RBRACK          reduce using rule 135 (pn_Expresion7 -> .)
    HACER           reduce using rule 135 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 284

state 253

    (63) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES . bloque else pn_Condicion2
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 285

state 254

    (84) meg -> op_l pn_Expresion10 mega_exp . pn_Expresion11
    (139) pn_Expresion11 -> .

    ASSIGN          reduce using rule 139 (pn_Expresion11 -> .)
    RPAREN          reduce using rule 139 (pn_Expresion11 -> .)
    COMMA           reduce using rule 139 (pn_Expresion11 -> .)

    pn_Expresion11                 shift and go to state 286

state 255

    (89) sp -> op_r exp pn_Expresion9 .

    AND_LOG         reduce using rule 89 (sp -> op_r exp pn_Expresion9 .)
    OR_LOG          reduce using rule 89 (sp -> op_r exp pn_Expresion9 .)
    ASSIGN          reduce using rule 89 (sp -> op_r exp pn_Expresion9 .)
    RPAREN          reduce using rule 89 (sp -> op_r exp pn_Expresion9 .)
    COMMA           reduce using rule 89 (sp -> op_r exp pn_Expresion9 .)


state 256

    (98) exp1 -> op_a exp .

    LT_LOG          reduce using rule 98 (exp1 -> op_a exp .)
    GT_LOG          reduce using rule 98 (exp1 -> op_a exp .)
    LTE_LOG         reduce using rule 98 (exp1 -> op_a exp .)
    GTE_LOG         reduce using rule 98 (exp1 -> op_a exp .)
    NE_LOG          reduce using rule 98 (exp1 -> op_a exp .)
    EQUAL_LOG       reduce using rule 98 (exp1 -> op_a exp .)
    AND_LOG         reduce using rule 98 (exp1 -> op_a exp .)
    OR_LOG          reduce using rule 98 (exp1 -> op_a exp .)
    ASSIGN          reduce using rule 98 (exp1 -> op_a exp .)
    RPAREN          reduce using rule 98 (exp1 -> op_a exp .)
    SEMIC           reduce using rule 98 (exp1 -> op_a exp .)
    COMMA           reduce using rule 98 (exp1 -> op_a exp .)
    HASTA           reduce using rule 98 (exp1 -> op_a exp .)
    RBRACK          reduce using rule 98 (exp1 -> op_a exp .)
    HACER           reduce using rule 98 (exp1 -> op_a exp .)


state 257

    (100) op_a -> PLUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 100 (op_a -> PLUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 100 (op_a -> PLUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 100 (op_a -> PLUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 100 (op_a -> PLUS_OP pn_Expresion2 .)
    ID              reduce using rule 100 (op_a -> PLUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 100 (op_a -> PLUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 100 (op_a -> PLUS_OP pn_Expresion2 .)


state 258

    (101) op_a -> MINUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 101 (op_a -> MINUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 101 (op_a -> MINUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 101 (op_a -> MINUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 101 (op_a -> MINUS_OP pn_Expresion2 .)
    ID              reduce using rule 101 (op_a -> MINUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 101 (op_a -> MINUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 101 (op_a -> MINUS_OP pn_Expresion2 .)


state 259

    (103) term -> op_a1 termino .

    PLUS_OP         reduce using rule 103 (term -> op_a1 termino .)
    MINUS_OP        reduce using rule 103 (term -> op_a1 termino .)
    LT_LOG          reduce using rule 103 (term -> op_a1 termino .)
    GT_LOG          reduce using rule 103 (term -> op_a1 termino .)
    LTE_LOG         reduce using rule 103 (term -> op_a1 termino .)
    GTE_LOG         reduce using rule 103 (term -> op_a1 termino .)
    NE_LOG          reduce using rule 103 (term -> op_a1 termino .)
    EQUAL_LOG       reduce using rule 103 (term -> op_a1 termino .)
    AND_LOG         reduce using rule 103 (term -> op_a1 termino .)
    OR_LOG          reduce using rule 103 (term -> op_a1 termino .)
    ASSIGN          reduce using rule 103 (term -> op_a1 termino .)
    RPAREN          reduce using rule 103 (term -> op_a1 termino .)
    SEMIC           reduce using rule 103 (term -> op_a1 termino .)
    COMMA           reduce using rule 103 (term -> op_a1 termino .)
    HASTA           reduce using rule 103 (term -> op_a1 termino .)
    RBRACK          reduce using rule 103 (term -> op_a1 termino .)
    HACER           reduce using rule 103 (term -> op_a1 termino .)


state 260

    (105) op_a1 -> MULT_OP pn_Expresion3 .

    LPAREN          reduce using rule 105 (op_a1 -> MULT_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 105 (op_a1 -> MULT_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 105 (op_a1 -> MULT_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 105 (op_a1 -> MULT_OP pn_Expresion3 .)
    ID              reduce using rule 105 (op_a1 -> MULT_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 105 (op_a1 -> MULT_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 105 (op_a1 -> MULT_OP pn_Expresion3 .)


state 261

    (106) op_a1 -> DIV_OP pn_Expresion3 .

    LPAREN          reduce using rule 106 (op_a1 -> DIV_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 106 (op_a1 -> DIV_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 106 (op_a1 -> DIV_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 106 (op_a1 -> DIV_OP pn_Expresion3 .)
    ID              reduce using rule 106 (op_a1 -> DIV_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 106 (op_a1 -> DIV_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 106 (op_a1 -> DIV_OP pn_Expresion3 .)


state 262

    (74) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa . SEMIC

    SEMIC           shift and go to state 287


state 263

    (66) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 . HACER bloque pn_loop_condicional3

    HACER           shift and go to state 288


state 264

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp . pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (153) pn_loop_no_condicional2 -> .

    HASTA           reduce using rule 153 (pn_loop_no_condicional2 -> .)

    pn_loop_no_condicional2        shift and go to state 289

state 265

    (73) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN . pn_Expresion7 pn_FuncionLlamada3
    (135) pn_Expresion7 -> .

    SI              reduce using rule 135 (pn_Expresion7 -> .)
    REGRESA         reduce using rule 135 (pn_Expresion7 -> .)
    MIENTRAS        reduce using rule 135 (pn_Expresion7 -> .)
    DESDE           reduce using rule 135 (pn_Expresion7 -> .)
    ID              reduce using rule 135 (pn_Expresion7 -> .)
    ESCRIBE         reduce using rule 135 (pn_Expresion7 -> .)
    LEE             reduce using rule 135 (pn_Expresion7 -> .)
    LINEA           reduce using rule 135 (pn_Expresion7 -> .)
    PUNTO           reduce using rule 135 (pn_Expresion7 -> .)
    CIRCULO         reduce using rule 135 (pn_Expresion7 -> .)
    COLOR           reduce using rule 135 (pn_Expresion7 -> .)
    ARCO            reduce using rule 135 (pn_Expresion7 -> .)
    PENUP           reduce using rule 135 (pn_Expresion7 -> .)
    PENDOWN         reduce using rule 135 (pn_Expresion7 -> .)
    GROSOR          reduce using rule 135 (pn_Expresion7 -> .)
    LIMPIAR         reduce using rule 135 (pn_Expresion7 -> .)
    ORDENA          reduce using rule 135 (pn_Expresion7 -> .)
    RCURLY          reduce using rule 135 (pn_Expresion7 -> .)
    MULT_OP         reduce using rule 135 (pn_Expresion7 -> .)
    DIV_OP          reduce using rule 135 (pn_Expresion7 -> .)
    PLUS_OP         reduce using rule 135 (pn_Expresion7 -> .)
    MINUS_OP        reduce using rule 135 (pn_Expresion7 -> .)
    LT_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    GT_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    LTE_LOG         reduce using rule 135 (pn_Expresion7 -> .)
    GTE_LOG         reduce using rule 135 (pn_Expresion7 -> .)
    NE_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    EQUAL_LOG       reduce using rule 135 (pn_Expresion7 -> .)
    AND_LOG         reduce using rule 135 (pn_Expresion7 -> .)
    OR_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    ASSIGN          reduce using rule 135 (pn_Expresion7 -> .)
    RPAREN          reduce using rule 135 (pn_Expresion7 -> .)
    SEMIC           reduce using rule 135 (pn_Expresion7 -> .)
    COMMA           reduce using rule 135 (pn_Expresion7 -> .)
    HASTA           reduce using rule 135 (pn_Expresion7 -> .)
    RBRACK          reduce using rule 135 (pn_Expresion7 -> .)
    HACER           reduce using rule 135 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 290

state 266

    (69) llamada_param -> expresion pn_FuncionLlamada2 . llamada_param2
    (71) llamada_param2 -> . COMMA llamada_param
    (72) llamada_param2 -> . empty
    (111) empty -> .

    COMMA           shift and go to state 292
    RPAREN          reduce using rule 111 (empty -> .)

    llamada_param2                 shift and go to state 291
    empty                          shift and go to state 293

state 267

    (61) varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp . pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7
    (159) pn_VarDim2 -> .

    RBRACK          reduce using rule 159 (pn_VarDim2 -> .)

    pn_VarDim2                     shift and go to state 294

state 268

    (75) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC . pn_Secuencial5
    (144) pn_Secuencial5 -> .

    SI              reduce using rule 144 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 144 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 144 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 144 (pn_Secuencial5 -> .)
    ID              reduce using rule 144 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 144 (pn_Secuencial5 -> .)
    LEE             reduce using rule 144 (pn_Secuencial5 -> .)
    LINEA           reduce using rule 144 (pn_Secuencial5 -> .)
    PUNTO           reduce using rule 144 (pn_Secuencial5 -> .)
    CIRCULO         reduce using rule 144 (pn_Secuencial5 -> .)
    COLOR           reduce using rule 144 (pn_Secuencial5 -> .)
    ARCO            reduce using rule 144 (pn_Secuencial5 -> .)
    PENUP           reduce using rule 144 (pn_Secuencial5 -> .)
    PENDOWN         reduce using rule 144 (pn_Secuencial5 -> .)
    GROSOR          reduce using rule 144 (pn_Secuencial5 -> .)
    LIMPIAR         reduce using rule 144 (pn_Secuencial5 -> .)
    ORDENA          reduce using rule 144 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 144 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 295

state 269

    (76) escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 76 (escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .)


state 270

    (78) escritura3 -> COMMA . escritura2
    (76) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (77) escritura2 -> . exp pn_Secuencial4 escritura3
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 191
    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    escritura2                     shift and go to state 296
    exp                            shift and go to state 192
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 271

    (79) escritura3 -> empty .

    RPAREN          reduce using rule 79 (escritura3 -> empty .)


state 272

    (77) escritura2 -> exp pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 77 (escritura2 -> exp pn_Secuencial4 escritura3 .)


state 273

    (68) lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC . pn_Secuencial4 pn_Secuencial5
    (143) pn_Secuencial4 -> .

    SI              reduce using rule 143 (pn_Secuencial4 -> .)
    REGRESA         reduce using rule 143 (pn_Secuencial4 -> .)
    MIENTRAS        reduce using rule 143 (pn_Secuencial4 -> .)
    DESDE           reduce using rule 143 (pn_Secuencial4 -> .)
    ID              reduce using rule 143 (pn_Secuencial4 -> .)
    ESCRIBE         reduce using rule 143 (pn_Secuencial4 -> .)
    LEE             reduce using rule 143 (pn_Secuencial4 -> .)
    LINEA           reduce using rule 143 (pn_Secuencial4 -> .)
    PUNTO           reduce using rule 143 (pn_Secuencial4 -> .)
    CIRCULO         reduce using rule 143 (pn_Secuencial4 -> .)
    COLOR           reduce using rule 143 (pn_Secuencial4 -> .)
    ARCO            reduce using rule 143 (pn_Secuencial4 -> .)
    PENUP           reduce using rule 143 (pn_Secuencial4 -> .)
    PENDOWN         reduce using rule 143 (pn_Secuencial4 -> .)
    GROSOR          reduce using rule 143 (pn_Secuencial4 -> .)
    LIMPIAR         reduce using rule 143 (pn_Secuencial4 -> .)
    ORDENA          reduce using rule 143 (pn_Secuencial4 -> .)
    RCURLY          reduce using rule 143 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 297

state 274

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA . direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (49) direccion -> . FORWARD pn_SetDireccion
    (50) direccion -> . BACKWARD pn_SetDireccion
    (51) direccion -> . RIGHTTURN pn_SetDireccion
    (52) direccion -> . LEFTTURN pn_SetDireccion

    FORWARD         shift and go to state 299
    BACKWARD        shift and go to state 300
    RIGHTTURN       shift and go to state 301
    LEFTTURN        shift and go to state 302

    direccion                      shift and go to state 298

state 275

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA . exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 303
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 276

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (135) pn_Expresion7 -> .

    SEMIC           reduce using rule 135 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 304

state 277

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (135) pn_Expresion7 -> .

    SEMIC           reduce using rule 135 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 305

state 278

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA . exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    exp                            shift and go to state 306
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 279

    (44) funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ORDENA          reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 44 (funcion_especial_void -> PENUP pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)


state 280

    (45) funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ORDENA          reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 45 (funcion_especial_void -> PENDOWN pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)


state 281

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (135) pn_Expresion7 -> .

    SEMIC           reduce using rule 135 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 307

state 282

    (47) funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    ORDENA          reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 47 (funcion_especial_void -> LIMPIAR pn_FuncionEspecial LPAREN RPAREN SEMIC pn_FuncionEspecial2 .)


state 283

    (48) funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 308


state 284

    (108) factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .

    MULT_OP         reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    DIV_OP          reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    PLUS_OP         reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    MINUS_OP        reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LT_LOG          reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GT_LOG          reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LTE_LOG         reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GTE_LOG         reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    NE_LOG          reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    EQUAL_LOG       reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    AND_LOG         reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    OR_LOG          reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    ASSIGN          reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RPAREN          reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    SEMIC           reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    COMMA           reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HASTA           reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RBRACK          reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HACER           reduce using rule 108 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)


state 285

    (63) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque . else pn_Condicion2
    (64) else -> . SINO pn_Condicion3 bloque
    (65) else -> . empty
    (111) empty -> .

    SINO            shift and go to state 310
    SI              reduce using rule 111 (empty -> .)
    REGRESA         reduce using rule 111 (empty -> .)
    MIENTRAS        reduce using rule 111 (empty -> .)
    DESDE           reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    ESCRIBE         reduce using rule 111 (empty -> .)
    LEE             reduce using rule 111 (empty -> .)
    LINEA           reduce using rule 111 (empty -> .)
    PUNTO           reduce using rule 111 (empty -> .)
    CIRCULO         reduce using rule 111 (empty -> .)
    COLOR           reduce using rule 111 (empty -> .)
    ARCO            reduce using rule 111 (empty -> .)
    PENUP           reduce using rule 111 (empty -> .)
    PENDOWN         reduce using rule 111 (empty -> .)
    GROSOR          reduce using rule 111 (empty -> .)
    LIMPIAR         reduce using rule 111 (empty -> .)
    ORDENA          reduce using rule 111 (empty -> .)
    RCURLY          reduce using rule 111 (empty -> .)

    else                           shift and go to state 309
    empty                          shift and go to state 311

state 286

    (84) meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .

    ASSIGN          reduce using rule 84 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    RPAREN          reduce using rule 84 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    COMMA           reduce using rule 84 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)


state 287

    (74) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .

    SI              reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    REGRESA         reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    MIENTRAS        reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    DESDE           reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ID              reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ESCRIBE         reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    LEE             reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    LINEA           reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    PUNTO           reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    CIRCULO         reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    COLOR           reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ARCO            reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    PENUP           reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    PENDOWN         reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    GROSOR          reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    LIMPIAR         reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ORDENA          reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    RCURLY          reduce using rule 74 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)


state 288

    (66) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER . bloque pn_loop_condicional3
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 312

state 289

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 . HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    HASTA           shift and go to state 313


state 290

    (73) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 . pn_FuncionLlamada3
    (123) pn_FuncionLlamada3 -> .

    SI              reduce using rule 123 (pn_FuncionLlamada3 -> .)
    REGRESA         reduce using rule 123 (pn_FuncionLlamada3 -> .)
    MIENTRAS        reduce using rule 123 (pn_FuncionLlamada3 -> .)
    DESDE           reduce using rule 123 (pn_FuncionLlamada3 -> .)
    ID              reduce using rule 123 (pn_FuncionLlamada3 -> .)
    ESCRIBE         reduce using rule 123 (pn_FuncionLlamada3 -> .)
    LEE             reduce using rule 123 (pn_FuncionLlamada3 -> .)
    LINEA           reduce using rule 123 (pn_FuncionLlamada3 -> .)
    PUNTO           reduce using rule 123 (pn_FuncionLlamada3 -> .)
    CIRCULO         reduce using rule 123 (pn_FuncionLlamada3 -> .)
    COLOR           reduce using rule 123 (pn_FuncionLlamada3 -> .)
    ARCO            reduce using rule 123 (pn_FuncionLlamada3 -> .)
    PENUP           reduce using rule 123 (pn_FuncionLlamada3 -> .)
    PENDOWN         reduce using rule 123 (pn_FuncionLlamada3 -> .)
    GROSOR          reduce using rule 123 (pn_FuncionLlamada3 -> .)
    LIMPIAR         reduce using rule 123 (pn_FuncionLlamada3 -> .)
    ORDENA          reduce using rule 123 (pn_FuncionLlamada3 -> .)
    RCURLY          reduce using rule 123 (pn_FuncionLlamada3 -> .)
    MULT_OP         reduce using rule 123 (pn_FuncionLlamada3 -> .)
    DIV_OP          reduce using rule 123 (pn_FuncionLlamada3 -> .)
    PLUS_OP         reduce using rule 123 (pn_FuncionLlamada3 -> .)
    MINUS_OP        reduce using rule 123 (pn_FuncionLlamada3 -> .)
    LT_LOG          reduce using rule 123 (pn_FuncionLlamada3 -> .)
    GT_LOG          reduce using rule 123 (pn_FuncionLlamada3 -> .)
    LTE_LOG         reduce using rule 123 (pn_FuncionLlamada3 -> .)
    GTE_LOG         reduce using rule 123 (pn_FuncionLlamada3 -> .)
    NE_LOG          reduce using rule 123 (pn_FuncionLlamada3 -> .)
    EQUAL_LOG       reduce using rule 123 (pn_FuncionLlamada3 -> .)
    AND_LOG         reduce using rule 123 (pn_FuncionLlamada3 -> .)
    OR_LOG          reduce using rule 123 (pn_FuncionLlamada3 -> .)
    ASSIGN          reduce using rule 123 (pn_FuncionLlamada3 -> .)
    RPAREN          reduce using rule 123 (pn_FuncionLlamada3 -> .)
    SEMIC           reduce using rule 123 (pn_FuncionLlamada3 -> .)
    COMMA           reduce using rule 123 (pn_FuncionLlamada3 -> .)
    HASTA           reduce using rule 123 (pn_FuncionLlamada3 -> .)
    RBRACK          reduce using rule 123 (pn_FuncionLlamada3 -> .)
    HACER           reduce using rule 123 (pn_FuncionLlamada3 -> .)

    pn_FuncionLlamada3             shift and go to state 314

state 291

    (69) llamada_param -> expresion pn_FuncionLlamada2 llamada_param2 .

    RPAREN          reduce using rule 69 (llamada_param -> expresion pn_FuncionLlamada2 llamada_param2 .)


state 292

    (71) llamada_param2 -> COMMA . llamada_param
    (69) llamada_param -> . expresion pn_FuncionLlamada2 llamada_param2
    (70) llamada_param -> . empty
    (80) expresion -> . mega_exp expresion1
    (111) empty -> .
    (83) mega_exp -> . super_exp meg
    (88) super_exp -> . exp sp
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    RPAREN          reduce using rule 111 (empty -> .)
    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    llamada_param                  shift and go to state 315
    expresion                      shift and go to state 233
    empty                          shift and go to state 234
    mega_exp                       shift and go to state 119
    super_exp                      shift and go to state 120
    exp                            shift and go to state 121
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    variable                       shift and go to state 125
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 293

    (72) llamada_param2 -> empty .

    RPAREN          reduce using rule 72 (llamada_param2 -> empty .)


state 294

    (61) varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 . pn_AccederArreglo RBRACK pn_Expresion7
    (163) pn_AccederArreglo -> .

    RBRACK          reduce using rule 163 (pn_AccederArreglo -> .)

    pn_AccederArreglo              shift and go to state 316

state 295

    (75) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    LINEA           reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    PUNTO           reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    CIRCULO         reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    COLOR           reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ARCO            reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    PENUP           reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    PENDOWN         reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    GROSOR          reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    LIMPIAR         reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ORDENA          reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 75 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)


state 296

    (78) escritura3 -> COMMA escritura2 .

    RPAREN          reduce using rule 78 (escritura3 -> COMMA escritura2 .)


state 297

    (68) lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 . pn_Secuencial5
    (144) pn_Secuencial5 -> .

    SI              reduce using rule 144 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 144 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 144 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 144 (pn_Secuencial5 -> .)
    ID              reduce using rule 144 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 144 (pn_Secuencial5 -> .)
    LEE             reduce using rule 144 (pn_Secuencial5 -> .)
    LINEA           reduce using rule 144 (pn_Secuencial5 -> .)
    PUNTO           reduce using rule 144 (pn_Secuencial5 -> .)
    CIRCULO         reduce using rule 144 (pn_Secuencial5 -> .)
    COLOR           reduce using rule 144 (pn_Secuencial5 -> .)
    ARCO            reduce using rule 144 (pn_Secuencial5 -> .)
    PENUP           reduce using rule 144 (pn_Secuencial5 -> .)
    PENDOWN         reduce using rule 144 (pn_Secuencial5 -> .)
    GROSOR          reduce using rule 144 (pn_Secuencial5 -> .)
    LIMPIAR         reduce using rule 144 (pn_Secuencial5 -> .)
    ORDENA          reduce using rule 144 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 144 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 317

state 298

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 318


state 299

    (49) direccion -> FORWARD . pn_SetDireccion
    (118) pn_SetDireccion -> .

    RPAREN          reduce using rule 118 (pn_SetDireccion -> .)

    pn_SetDireccion                shift and go to state 319

state 300

    (50) direccion -> BACKWARD . pn_SetDireccion
    (118) pn_SetDireccion -> .

    RPAREN          reduce using rule 118 (pn_SetDireccion -> .)

    pn_SetDireccion                shift and go to state 320

state 301

    (51) direccion -> RIGHTTURN . pn_SetDireccion
    (118) pn_SetDireccion -> .

    RPAREN          reduce using rule 118 (pn_SetDireccion -> .)

    pn_SetDireccion                shift and go to state 321

state 302

    (52) direccion -> LEFTTURN . pn_SetDireccion
    (118) pn_SetDireccion -> .

    RPAREN          reduce using rule 118 (pn_SetDireccion -> .)

    pn_SetDireccion                shift and go to state 322

state 303

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 323


state 304

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 324


state 305

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 325


state 306

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp . RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2

    RPAREN          shift and go to state 326


state 307

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 327


state 308

    (48) funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC . pn_FuncionEspecial2
    (120) pn_FuncionEspecial2 -> .

    SI              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 120 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ORDENA          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 120 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 328

state 309

    (63) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else . pn_Condicion2
    (147) pn_Condicion2 -> .

    SI              reduce using rule 147 (pn_Condicion2 -> .)
    REGRESA         reduce using rule 147 (pn_Condicion2 -> .)
    MIENTRAS        reduce using rule 147 (pn_Condicion2 -> .)
    DESDE           reduce using rule 147 (pn_Condicion2 -> .)
    ID              reduce using rule 147 (pn_Condicion2 -> .)
    ESCRIBE         reduce using rule 147 (pn_Condicion2 -> .)
    LEE             reduce using rule 147 (pn_Condicion2 -> .)
    LINEA           reduce using rule 147 (pn_Condicion2 -> .)
    PUNTO           reduce using rule 147 (pn_Condicion2 -> .)
    CIRCULO         reduce using rule 147 (pn_Condicion2 -> .)
    COLOR           reduce using rule 147 (pn_Condicion2 -> .)
    ARCO            reduce using rule 147 (pn_Condicion2 -> .)
    PENUP           reduce using rule 147 (pn_Condicion2 -> .)
    PENDOWN         reduce using rule 147 (pn_Condicion2 -> .)
    GROSOR          reduce using rule 147 (pn_Condicion2 -> .)
    LIMPIAR         reduce using rule 147 (pn_Condicion2 -> .)
    ORDENA          reduce using rule 147 (pn_Condicion2 -> .)
    RCURLY          reduce using rule 147 (pn_Condicion2 -> .)

    pn_Condicion2                  shift and go to state 329

state 310

    (64) else -> SINO . pn_Condicion3 bloque
    (148) pn_Condicion3 -> .

    LCURLY          reduce using rule 148 (pn_Condicion3 -> .)

    pn_Condicion3                  shift and go to state 330

state 311

    (65) else -> empty .

    SI              reduce using rule 65 (else -> empty .)
    REGRESA         reduce using rule 65 (else -> empty .)
    MIENTRAS        reduce using rule 65 (else -> empty .)
    DESDE           reduce using rule 65 (else -> empty .)
    ID              reduce using rule 65 (else -> empty .)
    ESCRIBE         reduce using rule 65 (else -> empty .)
    LEE             reduce using rule 65 (else -> empty .)
    LINEA           reduce using rule 65 (else -> empty .)
    PUNTO           reduce using rule 65 (else -> empty .)
    CIRCULO         reduce using rule 65 (else -> empty .)
    COLOR           reduce using rule 65 (else -> empty .)
    ARCO            reduce using rule 65 (else -> empty .)
    PENUP           reduce using rule 65 (else -> empty .)
    PENDOWN         reduce using rule 65 (else -> empty .)
    GROSOR          reduce using rule 65 (else -> empty .)
    LIMPIAR         reduce using rule 65 (else -> empty .)
    ORDENA          reduce using rule 65 (else -> empty .)
    RCURLY          reduce using rule 65 (else -> empty .)


state 312

    (66) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque . pn_loop_condicional3
    (151) pn_loop_condicional3 -> .

    SI              reduce using rule 151 (pn_loop_condicional3 -> .)
    REGRESA         reduce using rule 151 (pn_loop_condicional3 -> .)
    MIENTRAS        reduce using rule 151 (pn_loop_condicional3 -> .)
    DESDE           reduce using rule 151 (pn_loop_condicional3 -> .)
    ID              reduce using rule 151 (pn_loop_condicional3 -> .)
    ESCRIBE         reduce using rule 151 (pn_loop_condicional3 -> .)
    LEE             reduce using rule 151 (pn_loop_condicional3 -> .)
    LINEA           reduce using rule 151 (pn_loop_condicional3 -> .)
    PUNTO           reduce using rule 151 (pn_loop_condicional3 -> .)
    CIRCULO         reduce using rule 151 (pn_loop_condicional3 -> .)
    COLOR           reduce using rule 151 (pn_loop_condicional3 -> .)
    ARCO            reduce using rule 151 (pn_loop_condicional3 -> .)
    PENUP           reduce using rule 151 (pn_loop_condicional3 -> .)
    PENDOWN         reduce using rule 151 (pn_loop_condicional3 -> .)
    GROSOR          reduce using rule 151 (pn_loop_condicional3 -> .)
    LIMPIAR         reduce using rule 151 (pn_loop_condicional3 -> .)
    ORDENA          reduce using rule 151 (pn_loop_condicional3 -> .)
    RCURLY          reduce using rule 151 (pn_loop_condicional3 -> .)

    pn_loop_condicional3           shift and go to state 331

state 313

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA . pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (154) pn_loop_no_condicional3 -> .

    LPAREN          reduce using rule 154 (pn_loop_no_condicional3 -> .)
    CHAR_CTE        reduce using rule 154 (pn_loop_no_condicional3 -> .)
    STRING_CTE      reduce using rule 154 (pn_loop_no_condicional3 -> .)
    MINUS_OP        reduce using rule 154 (pn_loop_no_condicional3 -> .)
    ID              reduce using rule 154 (pn_loop_no_condicional3 -> .)
    INT_CTE         reduce using rule 154 (pn_loop_no_condicional3 -> .)
    FLOAT_CTE       reduce using rule 154 (pn_loop_no_condicional3 -> .)

    pn_loop_no_condicional3        shift and go to state 332

state 314

    (73) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .

    SI              reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    REGRESA         reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MIENTRAS        reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    DESDE           reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ID              reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ESCRIBE         reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LEE             reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LINEA           reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    PUNTO           reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    CIRCULO         reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    COLOR           reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ARCO            reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    PENUP           reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    PENDOWN         reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    GROSOR          reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LIMPIAR         reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ORDENA          reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RCURLY          reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MULT_OP         reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    DIV_OP          reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    PLUS_OP         reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MINUS_OP        reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LT_LOG          reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    GT_LOG          reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LTE_LOG         reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    GTE_LOG         reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    NE_LOG          reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    EQUAL_LOG       reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    AND_LOG         reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    OR_LOG          reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ASSIGN          reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RPAREN          reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    SEMIC           reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    COMMA           reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    HASTA           reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RBRACK          reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    HACER           reduce using rule 73 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)


state 315

    (71) llamada_param2 -> COMMA llamada_param .

    RPAREN          reduce using rule 71 (llamada_param2 -> COMMA llamada_param .)


state 316

    (61) varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo . RBRACK pn_Expresion7

    RBRACK          shift and go to state 333


state 317

    (68) lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .

    SI              reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    REGRESA         reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    MIENTRAS        reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    DESDE           reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    ID              reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    ESCRIBE         reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    LEE             reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    LINEA           reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    PUNTO           reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    CIRCULO         reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    COLOR           reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    ARCO            reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    PENUP           reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    PENDOWN         reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    GROSOR          reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    LIMPIAR         reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    ORDENA          reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)
    RCURLY          reduce using rule 68 (lectura -> LEE pn_Secuencial3 LPAREN variable RPAREN SEMIC pn_Secuencial4 pn_Secuencial5 .)


state 318

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (135) pn_Expresion7 -> .

    SEMIC           reduce using rule 135 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 334

state 319

    (49) direccion -> FORWARD pn_SetDireccion .

    RPAREN          reduce using rule 49 (direccion -> FORWARD pn_SetDireccion .)


state 320

    (50) direccion -> BACKWARD pn_SetDireccion .

    RPAREN          reduce using rule 50 (direccion -> BACKWARD pn_SetDireccion .)


state 321

    (51) direccion -> RIGHTTURN pn_SetDireccion .

    RPAREN          reduce using rule 51 (direccion -> RIGHTTURN pn_SetDireccion .)


state 322

    (52) direccion -> LEFTTURN pn_SetDireccion .

    RPAREN          reduce using rule 52 (direccion -> LEFTTURN pn_SetDireccion .)


state 323

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (135) pn_Expresion7 -> .

    SEMIC           reduce using rule 135 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 335

state 324

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (120) pn_FuncionEspecial2 -> .

    SI              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 120 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ORDENA          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 120 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 336

state 325

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (120) pn_FuncionEspecial2 -> .

    SI              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 120 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ORDENA          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 120 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 337

state 326

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN . pn_Expresion7 SEMIC pn_FuncionEspecial2
    (135) pn_Expresion7 -> .

    SEMIC           reduce using rule 135 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 338

state 327

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (120) pn_FuncionEspecial2 -> .

    SI              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 120 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ORDENA          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 120 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 339

state 328

    (48) funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    ORDENA          reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 48 (funcion_especial_void -> ORDENA pn_FuncionEspecial LPAREN ID pn_Expresion1 RPAREN SEMIC pn_FuncionEspecial2 .)


state 329

    (63) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .

    SI              reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    REGRESA         reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    MIENTRAS        reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    DESDE           reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ID              reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ESCRIBE         reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    LEE             reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    LINEA           reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    PUNTO           reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    CIRCULO         reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    COLOR           reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ARCO            reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    PENUP           reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    PENDOWN         reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    GROSOR          reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    LIMPIAR         reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ORDENA          reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    RCURLY          reduce using rule 63 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)


state 330

    (64) else -> SINO pn_Condicion3 . bloque
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 340

state 331

    (66) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .

    SI              reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    REGRESA         reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    MIENTRAS        reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    DESDE           reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ID              reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ESCRIBE         reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    LEE             reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    LINEA           reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    PUNTO           reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    CIRCULO         reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    COLOR           reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ARCO            reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    PENUP           reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    PENDOWN         reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    GROSOR          reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    LIMPIAR         reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ORDENA          reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    RCURLY          reduce using rule 66 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)


state 332

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 . exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (97) exp -> . termino pn_Expresion4 exp1
    (102) termino -> . factor pn_Expresion5 term
    (107) factor -> . ctes
    (108) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (109) factor -> . variable
    (110) factor -> . llamada_funcion
    (54) ctes -> . CHAR_CTE pn_CTEChar
    (55) ctes -> . STRING_CTE pn_CTEString
    (56) ctes -> . MINUS_OP pn_CTENeg num
    (57) ctes -> . num
    (60) variable -> . ID pn_Expresion1 varDim
    (73) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (58) num -> . INT_CTE pn_CTEInt
    (59) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 117
    CHAR_CTE        shift and go to state 127
    STRING_CTE      shift and go to state 128
    MINUS_OP        shift and go to state 129
    ID              shift and go to state 131
    INT_CTE         shift and go to state 132
    FLOAT_CTE       shift and go to state 133

    variable                       shift and go to state 125
    exp                            shift and go to state 341
    termino                        shift and go to state 122
    factor                         shift and go to state 123
    ctes                           shift and go to state 124
    llamada_funcion                shift and go to state 126
    num                            shift and go to state 130

state 333

    (61) varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK . pn_Expresion7
    (135) pn_Expresion7 -> .

    ASSIGN          reduce using rule 135 (pn_Expresion7 -> .)
    MULT_OP         reduce using rule 135 (pn_Expresion7 -> .)
    DIV_OP          reduce using rule 135 (pn_Expresion7 -> .)
    PLUS_OP         reduce using rule 135 (pn_Expresion7 -> .)
    MINUS_OP        reduce using rule 135 (pn_Expresion7 -> .)
    LT_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    GT_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    LTE_LOG         reduce using rule 135 (pn_Expresion7 -> .)
    GTE_LOG         reduce using rule 135 (pn_Expresion7 -> .)
    NE_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    EQUAL_LOG       reduce using rule 135 (pn_Expresion7 -> .)
    AND_LOG         reduce using rule 135 (pn_Expresion7 -> .)
    OR_LOG          reduce using rule 135 (pn_Expresion7 -> .)
    RPAREN          reduce using rule 135 (pn_Expresion7 -> .)
    SEMIC           reduce using rule 135 (pn_Expresion7 -> .)
    COMMA           reduce using rule 135 (pn_Expresion7 -> .)
    HASTA           reduce using rule 135 (pn_Expresion7 -> .)
    RBRACK          reduce using rule 135 (pn_Expresion7 -> .)
    HACER           reduce using rule 135 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 342

state 334

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 343


state 335

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 344


state 336

    (41) funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ORDENA          reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 41 (funcion_especial_void -> CIRCULO pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 337

    (42) funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ORDENA          reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 42 (funcion_especial_void -> COLOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 338

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 . SEMIC pn_FuncionEspecial2

    SEMIC           shift and go to state 345


state 339

    (46) funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ORDENA          reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 46 (funcion_especial_void -> GROSOR pn_FuncionEspecial LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 340

    (64) else -> SINO pn_Condicion3 bloque .

    SI              reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    REGRESA         reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    MIENTRAS        reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    DESDE           reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    ID              reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    ESCRIBE         reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    LEE             reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    LINEA           reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    PUNTO           reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    CIRCULO         reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    COLOR           reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    ARCO            reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    PENUP           reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    PENDOWN         reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    GROSOR          reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    LIMPIAR         reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    ORDENA          reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)
    RCURLY          reduce using rule 64 (else -> SINO pn_Condicion3 bloque .)


state 341

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp . pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (155) pn_loop_no_condicional4 -> .

    HACER           reduce using rule 155 (pn_loop_no_condicional4 -> .)

    pn_loop_no_condicional4        shift and go to state 346

state 342

    (61) varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .

    ASSIGN          reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    MULT_OP         reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    DIV_OP          reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    PLUS_OP         reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    MINUS_OP        reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    LT_LOG          reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    GT_LOG          reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    LTE_LOG         reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    GTE_LOG         reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    NE_LOG          reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    EQUAL_LOG       reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    AND_LOG         reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    OR_LOG          reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    RPAREN          reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    SEMIC           reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    COMMA           reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    HASTA           reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    RBRACK          reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)
    HACER           reduce using rule 61 (varDim -> LBRACK pn_AccederDimension pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7 .)


state 343

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (120) pn_FuncionEspecial2 -> .

    SI              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 120 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ORDENA          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 120 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 347

state 344

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (120) pn_FuncionEspecial2 -> .

    SI              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 120 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ORDENA          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 120 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 348

state 345

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC . pn_FuncionEspecial2
    (120) pn_FuncionEspecial2 -> .

    SI              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    REGRESA         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    MIENTRAS        reduce using rule 120 (pn_FuncionEspecial2 -> .)
    DESDE           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ID              reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ESCRIBE         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LEE             reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LINEA           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PUNTO           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    CIRCULO         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    COLOR           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ARCO            reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENUP           reduce using rule 120 (pn_FuncionEspecial2 -> .)
    PENDOWN         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    GROSOR          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    LIMPIAR         reduce using rule 120 (pn_FuncionEspecial2 -> .)
    ORDENA          reduce using rule 120 (pn_FuncionEspecial2 -> .)
    RCURLY          reduce using rule 120 (pn_FuncionEspecial2 -> .)

    pn_FuncionEspecial2            shift and go to state 349

state 346

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 . HACER bloque pn_loop_no_condicional5

    HACER           shift and go to state 350


state 347

    (39) funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ORDENA          reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 39 (funcion_especial_void -> LINEA pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA direccion RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 348

    (40) funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ORDENA          reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 40 (funcion_especial_void -> PUNTO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 349

    (43) funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .

    SI              reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    REGRESA         reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    MIENTRAS        reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    DESDE           reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ID              reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ESCRIBE         reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LEE             reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LINEA           reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PUNTO           reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    CIRCULO         reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    COLOR           reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ARCO            reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENUP           reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    PENDOWN         reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    GROSOR          reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    LIMPIAR         reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    ORDENA          reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)
    RCURLY          reduce using rule 43 (funcion_especial_void -> ARCO pn_FuncionEspecial LPAREN pn_Expresion6 exp COMMA exp RPAREN pn_Expresion7 SEMIC pn_FuncionEspecial2 .)


state 350

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER . bloque pn_loop_no_condicional5
    (27) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 351

state 351

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque . pn_loop_no_condicional5
    (156) pn_loop_no_condicional5 -> .

    SI              reduce using rule 156 (pn_loop_no_condicional5 -> .)
    REGRESA         reduce using rule 156 (pn_loop_no_condicional5 -> .)
    MIENTRAS        reduce using rule 156 (pn_loop_no_condicional5 -> .)
    DESDE           reduce using rule 156 (pn_loop_no_condicional5 -> .)
    ID              reduce using rule 156 (pn_loop_no_condicional5 -> .)
    ESCRIBE         reduce using rule 156 (pn_loop_no_condicional5 -> .)
    LEE             reduce using rule 156 (pn_loop_no_condicional5 -> .)
    LINEA           reduce using rule 156 (pn_loop_no_condicional5 -> .)
    PUNTO           reduce using rule 156 (pn_loop_no_condicional5 -> .)
    CIRCULO         reduce using rule 156 (pn_loop_no_condicional5 -> .)
    COLOR           reduce using rule 156 (pn_loop_no_condicional5 -> .)
    ARCO            reduce using rule 156 (pn_loop_no_condicional5 -> .)
    PENUP           reduce using rule 156 (pn_loop_no_condicional5 -> .)
    PENDOWN         reduce using rule 156 (pn_loop_no_condicional5 -> .)
    GROSOR          reduce using rule 156 (pn_loop_no_condicional5 -> .)
    LIMPIAR         reduce using rule 156 (pn_loop_no_condicional5 -> .)
    ORDENA          reduce using rule 156 (pn_loop_no_condicional5 -> .)
    RCURLY          reduce using rule 156 (pn_loop_no_condicional5 -> .)

    pn_loop_no_condicional5        shift and go to state 352

state 352

    (67) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .

    SI              reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    REGRESA         reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    MIENTRAS        reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    DESDE           reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ID              reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ESCRIBE         reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    LEE             reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    LINEA           reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    PUNTO           reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    CIRCULO         reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    COLOR           reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ARCO            reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    PENUP           reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    PENDOWN         reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    GROSOR          reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    LIMPIAR         reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ORDENA          reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    RCURLY          reduce using rule 67 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 191 resolved using rule (pn_CTEString -> <empty>)
WARNING: rejected rule (pn_Secuencial4 -> <empty>) in state 191
