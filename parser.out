Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    NEW_LINE
    STRING_TYPE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal
Rule 2     dec_variables -> VARIABLES dec_variables2
Rule 3     dec_variables -> empty
Rule 4     dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3
Rule 5     dec_variables3 -> dec_variables2
Rule 6     dec_variables3 -> empty
Rule 7     lista_ids -> ID pn_AddVariable DecVarDim lista_ids2
Rule 8     lista_ids2 -> COMMA lista_ids
Rule 9     lista_ids2 -> empty
Rule 10    DecVarDim -> DecVarDim2 pn_VarDim
Rule 11    DecVarDim -> empty
Rule 12    DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
Rule 13    DecVarDim3 -> COMMA INT_CTE
Rule 14    DecVarDim3 -> empty
Rule 15    tipo -> INT_TYPE pn_SetCurrentType
Rule 16    tipo -> CHAR_TYPE pn_SetCurrentType
Rule 17    tipo -> FLOAT_TYPE pn_SetCurrentType
Rule 18    dec_funciones -> dec_funciones2 dec_funciones
Rule 19    dec_funciones -> empty
Rule 20    dec_funciones2 -> tipo dec_funciones3
Rule 21    dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3
Rule 22    dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque
Rule 23    dec_funcion_param -> lista_parametros
Rule 24    dec_funcion_param -> empty
Rule 25    lista_parametros -> ID parDim COLON tipo lista_parametros2
Rule 26    lista_parametros2 -> COMMA lista_parametros
Rule 27    lista_parametros2 -> empty
Rule 28    parDim -> LBRACK expresion parDim2 RBRACK
Rule 29    parDim -> empty
Rule 30    parDim2 -> COMMA expresion
Rule 31    parDim2 -> empty
Rule 32    llamada_param -> expresion llamada_param2
Rule 33    llamada_param2 -> COMMA expresion
Rule 34    llamada_param2 -> empty
Rule 35    principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque
Rule 36    bloque -> LCURLY estatutos RCURLY
Rule 37    estatutos -> estatuto estatutos
Rule 38    estatutos -> empty
Rule 39    estatuto -> asignacion
Rule 40    estatuto -> condicion
Rule 41    estatuto -> regresa
Rule 42    estatuto -> loop_condicional
Rule 43    estatuto -> loop_no_condicional
Rule 44    estatuto -> llamada_funcion
Rule 45    estatuto -> escritura
Rule 46    estatuto -> lectura
Rule 47    asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
Rule 48    ctes -> CHAR_CTE pn_CTEChar
Rule 49    ctes -> STRING_CTE pn_CTEString
Rule 50    ctes -> MINUS_OP pn_CTENeg num
Rule 51    ctes -> num
Rule 52    num -> INT_CTE pn_CTEInt
Rule 53    num -> FLOAT_CTE pn_CTEFloat
Rule 54    variable -> ID pn_Expresion1 varDim
Rule 55    varDim -> LBRACK expresion varDim2 RBRACK
Rule 56    varDim -> empty
Rule 57    varDim2 -> COMMA expresion
Rule 58    varDim2 -> empty
Rule 59    condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
Rule 60    else -> SINO pn_Condicion3 bloque
Rule 61    else -> empty
Rule 62    loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
Rule 63    loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
Rule 64    varLectura -> ID pn_Expresion1 varDim varLectura2
Rule 65    varLectura2 -> COMMA pn_Secuencial4 varLectura
Rule 66    varLectura2 -> empty pn_Secuencial4
Rule 67    lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
Rule 68    llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC
Rule 69    escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
Rule 70    escritura2 -> STRING_CTE pn_Secuencial4 escritura3
Rule 71    escritura2 -> expresion pn_Secuencial4 escritura3
Rule 72    escritura3 -> COMMA escritura2
Rule 73    escritura3 -> empty
Rule 74    regresa -> REGRESA LPAREN variable RPAREN SEMIC
Rule 75    expresion -> mega_exp expresion1
Rule 76    expresion1 -> ASSIGN expresion
Rule 77    expresion1 -> empty
Rule 78    mega_exp -> super_exp meg
Rule 79    meg -> op_l pn_Expresion10 mega_exp pn_Expresion11
Rule 80    meg -> empty
Rule 81    op_l -> AND_LOG
Rule 82    op_l -> OR_LOG
Rule 83    super_exp -> exp sp
Rule 84    sp -> op_r exp pn_Expresion9
Rule 85    sp -> empty
Rule 86    op_r -> LT_LOG pn_Expresion8
Rule 87    op_r -> GT_LOG pn_Expresion8
Rule 88    op_r -> LTE_LOG pn_Expresion8
Rule 89    op_r -> GTE_LOG pn_Expresion8
Rule 90    op_r -> NE_LOG pn_Expresion8
Rule 91    op_r -> EQUAL_LOG pn_Expresion8
Rule 92    exp -> termino pn_Expresion4 exp1
Rule 93    exp1 -> op_a exp
Rule 94    exp1 -> empty
Rule 95    op_a -> PLUS_OP pn_Expresion2
Rule 96    op_a -> MINUS_OP pn_Expresion2
Rule 97    termino -> factor pn_Expresion5 term
Rule 98    term -> op_a1 termino
Rule 99    term -> empty
Rule 100   op_a1 -> MULT_OP pn_Expresion3
Rule 101   op_a1 -> DIV_OP pn_Expresion3
Rule 102   factor -> ctes
Rule 103   factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
Rule 104   factor -> variable
Rule 105   factor -> llamada_funcion
Rule 106   empty -> <empty>
Rule 107   pn_GOTOprincipal -> <empty>
Rule 108   pn_Principal1 -> <empty>
Rule 109   pn_AddFunc -> <empty>
Rule 110   pn_Funcion1 -> <empty>
Rule 111   pn_Funcion2 -> <empty>
Rule 112   pn_Funcion3 -> <empty>
Rule 113   pn_FuncionLlamada1 -> <empty>
Rule 114   pn_FuncionLlamada2 -> <empty>
Rule 115   pn_FuncionLlamada3 -> <empty>
Rule 116   pn_CTENeg -> <empty>
Rule 117   pn_CTEInt -> <empty>
Rule 118   pn_CTEFloat -> <empty>
Rule 119   pn_CTEChar -> <empty>
Rule 120   pn_CTEString -> <empty>
Rule 121   pn_Expresion1 -> <empty>
Rule 122   pn_Expresion2 -> <empty>
Rule 123   pn_Expresion3 -> <empty>
Rule 124   pn_Expresion4 -> <empty>
Rule 125   pn_Expresion5 -> <empty>
Rule 126   pn_Expresion6 -> <empty>
Rule 127   pn_Expresion7 -> <empty>
Rule 128   pn_Expresion8 -> <empty>
Rule 129   pn_Expresion9 -> <empty>
Rule 130   pn_Expresion10 -> <empty>
Rule 131   pn_Expresion11 -> <empty>
Rule 132   pn_Secuencial1 -> <empty>
Rule 133   pn_Secuencial2 -> <empty>
Rule 134   pn_Secuencial3 -> <empty>
Rule 135   pn_Secuencial4 -> <empty>
Rule 136   pn_Secuencial5 -> <empty>
Rule 137   pn_Regresa -> <empty>
Rule 138   pn_Condicion1 -> <empty>
Rule 139   pn_Condicion2 -> <empty>
Rule 140   pn_Condicion3 -> <empty>
Rule 141   pn_loop_condicional1 -> <empty>
Rule 142   pn_loop_condicional2 -> <empty>
Rule 143   pn_loop_condicional3 -> <empty>
Rule 144   pn_loop_no_condicional1 -> <empty>
Rule 145   pn_loop_no_condicional2 -> <empty>
Rule 146   pn_loop_no_condicional3 -> <empty>
Rule 147   pn_loop_no_condicional4 -> <empty>
Rule 148   pn_loop_no_condicional5 -> <empty>
Rule 149   pn_SetCurrentType -> <empty>
Rule 150   pn_AddVariable -> <empty>
Rule 151   pn_VarDim2 -> <empty>
Rule 152   pn_VarDim3 -> <empty>
Rule 153   pn_VarDim4 -> <empty>
Rule 154   pn_VarDim -> <empty>

Terminals, with rules where they appear

AND_LOG              : 81
ASSIGN               : 47 63 76
CHAR_CTE             : 48
CHAR_TYPE            : 16
COLON                : 4 25
COMMA                : 8 13 26 30 33 57 65 72
COMMENT              : 
DESDE                : 63
DIV_OP               : 101
ENTONCES             : 59
EQUAL_LOG            : 91
ESCRIBE              : 69
FLOAT_CTE            : 53
FLOAT_TYPE           : 17
FUNCION              : 22
GTE_LOG              : 89
GT_LOG               : 87
HACER                : 62 63
HASTA                : 63
ID                   : 1 7 22 25 54 64 68
INT_CTE              : 12 13 52
INT_TYPE             : 15
LBRACK               : 12 28 55
LCURLY               : 36
LEE                  : 67
LPAREN               : 22 35 59 62 67 68 69 74 103
LTE_LOG              : 88
LT_LOG               : 86
MIENTRAS             : 62
MINUS_OP             : 50 96
MULT_OP              : 100
NEW_LINE             : 
NE_LOG               : 90
OR_LOG               : 82
PLUS_OP              : 95
PRINCIPAL            : 35
PROGRAMA             : 1
RBRACK               : 12 28 55
RCURLY               : 36
REGRESA              : 74
RPAREN               : 22 35 59 62 67 68 69 74 103
SEMIC                : 1 4 47 67 68 69 74
SI                   : 59
SINO                 : 60
STRING_CTE           : 49 70
STRING_TYPE          : 
VARIABLES            : 2
VOID                 : 21
error                : 

Nonterminals, with rules where they appear

DecVarDim            : 7
DecVarDim2           : 10
DecVarDim3           : 12
asignacion           : 39
bloque               : 22 35 59 60 62 63
condicion            : 40
ctes                 : 102
dec_funcion_param    : 22
dec_funciones        : 1 18
dec_funciones2       : 18
dec_funciones3       : 20 21
dec_variables        : 1 22
dec_variables2       : 2 5
dec_variables3       : 4
else                 : 59
empty                : 3 6 9 11 14 19 24 27 29 31 34 38 56 58 61 66 73 77 80 85 94 99
escritura            : 45
escritura2           : 69 72
escritura3           : 70 71
estatuto             : 37
estatutos            : 36 37
exp                  : 83 84 93 103
exp1                 : 92
expresion            : 28 30 32 33 47 55 57 59 62 63 63 71 76
expresion1           : 75
factor               : 97
lectura              : 46
lista_ids            : 4 8
lista_ids2           : 7
lista_parametros     : 23 26
lista_parametros2    : 25
llamada_funcion      : 44 105
llamada_param        : 68
llamada_param2       : 32
loop_condicional     : 42
loop_no_condicional  : 43
meg                  : 78
mega_exp             : 75 79
num                  : 50 51
op_a                 : 93
op_a1                : 98
op_l                 : 79
op_r                 : 84
parDim               : 25
parDim2              : 28
pn_AddFunc           : 22
pn_AddVariable       : 7
pn_CTEChar           : 48
pn_CTEFloat          : 53
pn_CTEInt            : 52
pn_CTENeg            : 50
pn_CTEString         : 49
pn_Condicion1        : 59
pn_Condicion2        : 59
pn_Condicion3        : 60
pn_Expresion1        : 54 64
pn_Expresion10       : 79
pn_Expresion11       : 79
pn_Expresion2        : 95 96
pn_Expresion3        : 100 101
pn_Expresion4        : 92
pn_Expresion5        : 97
pn_Expresion6        : 103
pn_Expresion7        : 103
pn_Expresion8        : 86 87 88 89 90 91
pn_Expresion9        : 84
pn_Funcion1          : 
pn_Funcion2          : 
pn_Funcion3          : 
pn_FuncionLlamada1   : 
pn_FuncionLlamada2   : 
pn_FuncionLlamada3   : 
pn_GOTOprincipal     : 1
pn_Principal1        : 35
pn_Regresa           : 
pn_Secuencial1       : 47 63
pn_Secuencial2       : 47
pn_Secuencial3       : 67 69
pn_Secuencial4       : 65 66 70 71
pn_Secuencial5       : 67 69
pn_SetCurrentType    : 15 16 17 21
pn_VarDim            : 10
pn_VarDim2           : 12
pn_VarDim3           : 12
pn_VarDim4           : 
pn_loop_condicional1 : 62
pn_loop_condicional2 : 62
pn_loop_condicional3 : 62
pn_loop_no_condicional1 : 63
pn_loop_no_condicional2 : 63
pn_loop_no_condicional3 : 63
pn_loop_no_condicional4 : 63
pn_loop_no_condicional5 : 63
principal            : 1
programa             : 0
regresa              : 41
sp                   : 83
super_exp            : 78
term                 : 97
termino              : 92 98
tipo                 : 4 20 25
varDim               : 54 64
varDim2              : 55
varLectura           : 65 67
varLectura2          : 64
variable             : 47 63 74 104

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    SEMIC           shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMIC . dec_variables pn_GOTOprincipal dec_funciones principal
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (106) empty -> .

    VARIABLES       shift and go to state 6
    VOID            reduce using rule 106 (empty -> .)
    INT_TYPE        reduce using rule 106 (empty -> .)
    CHAR_TYPE       reduce using rule 106 (empty -> .)
    FLOAT_TYPE      reduce using rule 106 (empty -> .)
    PRINCIPAL       reduce using rule 106 (empty -> .)

    dec_variables                  shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMIC dec_variables . pn_GOTOprincipal dec_funciones principal
    (107) pn_GOTOprincipal -> .

    VOID            reduce using rule 107 (pn_GOTOprincipal -> .)
    INT_TYPE        reduce using rule 107 (pn_GOTOprincipal -> .)
    CHAR_TYPE       reduce using rule 107 (pn_GOTOprincipal -> .)
    FLOAT_TYPE      reduce using rule 107 (pn_GOTOprincipal -> .)
    PRINCIPAL       reduce using rule 107 (pn_GOTOprincipal -> .)

    pn_GOTOprincipal               shift and go to state 8

state 6

    (2) dec_variables -> VARIABLES . dec_variables2
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_variables2                 shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (3) dec_variables -> empty .

    VOID            reduce using rule 3 (dec_variables -> empty .)
    INT_TYPE        reduce using rule 3 (dec_variables -> empty .)
    CHAR_TYPE       reduce using rule 3 (dec_variables -> empty .)
    FLOAT_TYPE      reduce using rule 3 (dec_variables -> empty .)
    PRINCIPAL       reduce using rule 3 (dec_variables -> empty .)
    LCURLY          reduce using rule 3 (dec_variables -> empty .)


state 8

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal . dec_funciones principal
    (18) dec_funciones -> . dec_funciones2 dec_funciones
    (19) dec_funciones -> . empty
    (20) dec_funciones2 -> . tipo dec_funciones3
    (21) dec_funciones2 -> . VOID pn_SetCurrentType dec_funciones3
    (106) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 18
    PRINCIPAL       reduce using rule 106 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_funciones                  shift and go to state 14
    dec_funciones2                 shift and go to state 15
    empty                          shift and go to state 16
    tipo                           shift and go to state 17

state 9

    (2) dec_variables -> VARIABLES dec_variables2 .

    VOID            reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    INT_TYPE        reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    CHAR_TYPE       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    FLOAT_TYPE      reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    PRINCIPAL       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    LCURLY          reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)


state 10

    (4) dec_variables2 -> tipo . COLON lista_ids SEMIC dec_variables3

    COLON           shift and go to state 19


state 11

    (15) tipo -> INT_TYPE . pn_SetCurrentType
    (149) pn_SetCurrentType -> .

    COLON           reduce using rule 149 (pn_SetCurrentType -> .)
    FUNCION         reduce using rule 149 (pn_SetCurrentType -> .)
    COMMA           reduce using rule 149 (pn_SetCurrentType -> .)
    RPAREN          reduce using rule 149 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 20

state 12

    (16) tipo -> CHAR_TYPE . pn_SetCurrentType
    (149) pn_SetCurrentType -> .

    COLON           reduce using rule 149 (pn_SetCurrentType -> .)
    FUNCION         reduce using rule 149 (pn_SetCurrentType -> .)
    COMMA           reduce using rule 149 (pn_SetCurrentType -> .)
    RPAREN          reduce using rule 149 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 21

state 13

    (17) tipo -> FLOAT_TYPE . pn_SetCurrentType
    (149) pn_SetCurrentType -> .

    COLON           reduce using rule 149 (pn_SetCurrentType -> .)
    FUNCION         reduce using rule 149 (pn_SetCurrentType -> .)
    COMMA           reduce using rule 149 (pn_SetCurrentType -> .)
    RPAREN          reduce using rule 149 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 22

state 14

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones . principal
    (35) principal -> . PRINCIPAL pn_Principal1 LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 24

    principal                      shift and go to state 23

state 15

    (18) dec_funciones -> dec_funciones2 . dec_funciones
    (18) dec_funciones -> . dec_funciones2 dec_funciones
    (19) dec_funciones -> . empty
    (20) dec_funciones2 -> . tipo dec_funciones3
    (21) dec_funciones2 -> . VOID pn_SetCurrentType dec_funciones3
    (106) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 18
    PRINCIPAL       reduce using rule 106 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_funciones2                 shift and go to state 15
    dec_funciones                  shift and go to state 25
    empty                          shift and go to state 16
    tipo                           shift and go to state 17

state 16

    (19) dec_funciones -> empty .

    PRINCIPAL       reduce using rule 19 (dec_funciones -> empty .)


state 17

    (20) dec_funciones2 -> tipo . dec_funciones3
    (22) dec_funciones3 -> . FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque

    FUNCION         shift and go to state 27

    dec_funciones3                 shift and go to state 26

state 18

    (21) dec_funciones2 -> VOID . pn_SetCurrentType dec_funciones3
    (149) pn_SetCurrentType -> .

    FUNCION         reduce using rule 149 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 28

state 19

    (4) dec_variables2 -> tipo COLON . lista_ids SEMIC dec_variables3
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 30

    lista_ids                      shift and go to state 29

state 20

    (15) tipo -> INT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    FUNCION         reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    COMMA           reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    RPAREN          reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)


state 21

    (16) tipo -> CHAR_TYPE pn_SetCurrentType .

    COLON           reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    FUNCION         reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    COMMA           reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    RPAREN          reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)


state 22

    (17) tipo -> FLOAT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    FUNCION         reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    COMMA           reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    RPAREN          reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)


state 23

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .)


state 24

    (35) principal -> PRINCIPAL . pn_Principal1 LPAREN RPAREN bloque
    (108) pn_Principal1 -> .

    LPAREN          reduce using rule 108 (pn_Principal1 -> .)

    pn_Principal1                  shift and go to state 31

state 25

    (18) dec_funciones -> dec_funciones2 dec_funciones .

    PRINCIPAL       reduce using rule 18 (dec_funciones -> dec_funciones2 dec_funciones .)


state 26

    (20) dec_funciones2 -> tipo dec_funciones3 .

    VOID            reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    INT_TYPE        reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    CHAR_TYPE       reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    FLOAT_TYPE      reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    PRINCIPAL       reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)


state 27

    (22) dec_funciones3 -> FUNCION . ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque

    ID              shift and go to state 32


state 28

    (21) dec_funciones2 -> VOID pn_SetCurrentType . dec_funciones3
    (22) dec_funciones3 -> . FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque

    FUNCION         shift and go to state 27

    dec_funciones3                 shift and go to state 33

state 29

    (4) dec_variables2 -> tipo COLON lista_ids . SEMIC dec_variables3

    SEMIC           shift and go to state 34


state 30

    (7) lista_ids -> ID . pn_AddVariable DecVarDim lista_ids2
    (150) pn_AddVariable -> .

    LBRACK          reduce using rule 150 (pn_AddVariable -> .)
    COMMA           reduce using rule 150 (pn_AddVariable -> .)
    SEMIC           reduce using rule 150 (pn_AddVariable -> .)

    pn_AddVariable                 shift and go to state 35

state 31

    (35) principal -> PRINCIPAL pn_Principal1 . LPAREN RPAREN bloque

    LPAREN          shift and go to state 36


state 32

    (22) dec_funciones3 -> FUNCION ID . pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque
    (109) pn_AddFunc -> .

    LPAREN          reduce using rule 109 (pn_AddFunc -> .)

    pn_AddFunc                     shift and go to state 37

state 33

    (21) dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .

    VOID            reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    INT_TYPE        reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    CHAR_TYPE       reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    FLOAT_TYPE      reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    PRINCIPAL       reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)


state 34

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC . dec_variables3
    (5) dec_variables3 -> . dec_variables2
    (6) dec_variables3 -> . empty
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (106) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for CHAR_TYPE resolved as shift
  ! shift/reduce conflict for FLOAT_TYPE resolved as shift
    VOID            reduce using rule 106 (empty -> .)
    PRINCIPAL       reduce using rule 106 (empty -> .)
    LCURLY          reduce using rule 106 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

  ! INT_TYPE        [ reduce using rule 106 (empty -> .) ]
  ! CHAR_TYPE       [ reduce using rule 106 (empty -> .) ]
  ! FLOAT_TYPE      [ reduce using rule 106 (empty -> .) ]

    tipo                           shift and go to state 10
    dec_variables3                 shift and go to state 38
    dec_variables2                 shift and go to state 39
    empty                          shift and go to state 40

state 35

    (7) lista_ids -> ID pn_AddVariable . DecVarDim lista_ids2
    (10) DecVarDim -> . DecVarDim2 pn_VarDim
    (11) DecVarDim -> . empty
    (12) DecVarDim2 -> . LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
    (106) empty -> .

    LBRACK          shift and go to state 44
    COMMA           reduce using rule 106 (empty -> .)
    SEMIC           reduce using rule 106 (empty -> .)

    DecVarDim                      shift and go to state 41
    DecVarDim2                     shift and go to state 42
    empty                          shift and go to state 43

state 36

    (35) principal -> PRINCIPAL pn_Principal1 LPAREN . RPAREN bloque

    RPAREN          shift and go to state 45


state 37

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc . LPAREN dec_funcion_param RPAREN dec_variables bloque

    LPAREN          shift and go to state 46


state 38

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .

    VOID            reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    INT_TYPE        reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    CHAR_TYPE       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    FLOAT_TYPE      reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    PRINCIPAL       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    LCURLY          reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)


state 39

    (5) dec_variables3 -> dec_variables2 .

    VOID            reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    INT_TYPE        reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    CHAR_TYPE       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    FLOAT_TYPE      reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    PRINCIPAL       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    LCURLY          reduce using rule 5 (dec_variables3 -> dec_variables2 .)


state 40

    (6) dec_variables3 -> empty .

    VOID            reduce using rule 6 (dec_variables3 -> empty .)
    INT_TYPE        reduce using rule 6 (dec_variables3 -> empty .)
    CHAR_TYPE       reduce using rule 6 (dec_variables3 -> empty .)
    FLOAT_TYPE      reduce using rule 6 (dec_variables3 -> empty .)
    PRINCIPAL       reduce using rule 6 (dec_variables3 -> empty .)
    LCURLY          reduce using rule 6 (dec_variables3 -> empty .)


state 41

    (7) lista_ids -> ID pn_AddVariable DecVarDim . lista_ids2
    (8) lista_ids2 -> . COMMA lista_ids
    (9) lista_ids2 -> . empty
    (106) empty -> .

    COMMA           shift and go to state 48
    SEMIC           reduce using rule 106 (empty -> .)

    lista_ids2                     shift and go to state 47
    empty                          shift and go to state 49

state 42

    (10) DecVarDim -> DecVarDim2 . pn_VarDim
    (154) pn_VarDim -> .

    COMMA           reduce using rule 154 (pn_VarDim -> .)
    SEMIC           reduce using rule 154 (pn_VarDim -> .)

    pn_VarDim                      shift and go to state 50

state 43

    (11) DecVarDim -> empty .

    COMMA           reduce using rule 11 (DecVarDim -> empty .)
    SEMIC           reduce using rule 11 (DecVarDim -> empty .)


state 44

    (12) DecVarDim2 -> LBRACK . pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
    (151) pn_VarDim2 -> .

    INT_CTE         reduce using rule 151 (pn_VarDim2 -> .)

    pn_VarDim2                     shift and go to state 51

state 45

    (35) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 52

state 46

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN . dec_funcion_param RPAREN dec_variables bloque
    (23) dec_funcion_param -> . lista_parametros
    (24) dec_funcion_param -> . empty
    (25) lista_parametros -> . ID parDim COLON tipo lista_parametros2
    (106) empty -> .

    ID              shift and go to state 54
    RPAREN          reduce using rule 106 (empty -> .)

    dec_funcion_param              shift and go to state 55
    lista_parametros               shift and go to state 56
    empty                          shift and go to state 57

state 47

    (7) lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .

    SEMIC           reduce using rule 7 (lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .)


state 48

    (8) lista_ids2 -> COMMA . lista_ids
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 30

    lista_ids                      shift and go to state 58

state 49

    (9) lista_ids2 -> empty .

    SEMIC           reduce using rule 9 (lista_ids2 -> empty .)


state 50

    (10) DecVarDim -> DecVarDim2 pn_VarDim .

    COMMA           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)
    SEMIC           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)


state 51

    (12) DecVarDim2 -> LBRACK pn_VarDim2 . INT_CTE pn_VarDim3 DecVarDim3 RBRACK

    INT_CTE         shift and go to state 59


state 52

    (35) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .

    $end            reduce using rule 35 (principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .)


state 53

    (36) bloque -> LCURLY . estatutos RCURLY
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . empty
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicion
    (41) estatuto -> . regresa
    (42) estatuto -> . loop_condicional
    (43) estatuto -> . loop_no_condicional
    (44) estatuto -> . llamada_funcion
    (45) estatuto -> . escritura
    (46) estatuto -> . lectura
    (106) empty -> .
    (47) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (59) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (74) regresa -> . REGRESA LPAREN variable RPAREN SEMIC
    (62) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (63) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (69) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (67) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (54) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 106 (empty -> .)
    SI              shift and go to state 72
    REGRESA         shift and go to state 73
    MIENTRAS        shift and go to state 74
    DESDE           shift and go to state 75
    ID              shift and go to state 76
    ESCRIBE         shift and go to state 77
    LEE             shift and go to state 78

    estatutos                      shift and go to state 60
    estatuto                       shift and go to state 61
    empty                          shift and go to state 62
    asignacion                     shift and go to state 63
    condicion                      shift and go to state 64
    regresa                        shift and go to state 65
    loop_condicional               shift and go to state 66
    loop_no_condicional            shift and go to state 67
    llamada_funcion                shift and go to state 68
    escritura                      shift and go to state 69
    lectura                        shift and go to state 70
    variable                       shift and go to state 71

state 54

    (25) lista_parametros -> ID . parDim COLON tipo lista_parametros2
    (28) parDim -> . LBRACK expresion parDim2 RBRACK
    (29) parDim -> . empty
    (106) empty -> .

    LBRACK          shift and go to state 80
    COLON           reduce using rule 106 (empty -> .)

    parDim                         shift and go to state 79
    empty                          shift and go to state 81

state 55

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param . RPAREN dec_variables bloque

    RPAREN          shift and go to state 82


state 56

    (23) dec_funcion_param -> lista_parametros .

    RPAREN          reduce using rule 23 (dec_funcion_param -> lista_parametros .)


state 57

    (24) dec_funcion_param -> empty .

    RPAREN          reduce using rule 24 (dec_funcion_param -> empty .)


state 58

    (8) lista_ids2 -> COMMA lista_ids .

    SEMIC           reduce using rule 8 (lista_ids2 -> COMMA lista_ids .)


state 59

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE . pn_VarDim3 DecVarDim3 RBRACK
    (152) pn_VarDim3 -> .

    COMMA           reduce using rule 152 (pn_VarDim3 -> .)
    RBRACK          reduce using rule 152 (pn_VarDim3 -> .)

    pn_VarDim3                     shift and go to state 83

state 60

    (36) bloque -> LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 84


state 61

    (37) estatutos -> estatuto . estatutos
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . empty
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicion
    (41) estatuto -> . regresa
    (42) estatuto -> . loop_condicional
    (43) estatuto -> . loop_no_condicional
    (44) estatuto -> . llamada_funcion
    (45) estatuto -> . escritura
    (46) estatuto -> . lectura
    (106) empty -> .
    (47) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (59) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (74) regresa -> . REGRESA LPAREN variable RPAREN SEMIC
    (62) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (63) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (69) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (67) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (54) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 106 (empty -> .)
    SI              shift and go to state 72
    REGRESA         shift and go to state 73
    MIENTRAS        shift and go to state 74
    DESDE           shift and go to state 75
    ID              shift and go to state 76
    ESCRIBE         shift and go to state 77
    LEE             shift and go to state 78

    estatuto                       shift and go to state 61
    estatutos                      shift and go to state 85
    empty                          shift and go to state 62
    asignacion                     shift and go to state 63
    condicion                      shift and go to state 64
    regresa                        shift and go to state 65
    loop_condicional               shift and go to state 66
    loop_no_condicional            shift and go to state 67
    llamada_funcion                shift and go to state 68
    escritura                      shift and go to state 69
    lectura                        shift and go to state 70
    variable                       shift and go to state 71

state 62

    (38) estatutos -> empty .

    RCURLY          reduce using rule 38 (estatutos -> empty .)


state 63

    (39) estatuto -> asignacion .

    SI              reduce using rule 39 (estatuto -> asignacion .)
    REGRESA         reduce using rule 39 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 39 (estatuto -> asignacion .)
    DESDE           reduce using rule 39 (estatuto -> asignacion .)
    ID              reduce using rule 39 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 39 (estatuto -> asignacion .)
    LEE             reduce using rule 39 (estatuto -> asignacion .)
    RCURLY          reduce using rule 39 (estatuto -> asignacion .)


state 64

    (40) estatuto -> condicion .

    SI              reduce using rule 40 (estatuto -> condicion .)
    REGRESA         reduce using rule 40 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 40 (estatuto -> condicion .)
    DESDE           reduce using rule 40 (estatuto -> condicion .)
    ID              reduce using rule 40 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 40 (estatuto -> condicion .)
    LEE             reduce using rule 40 (estatuto -> condicion .)
    RCURLY          reduce using rule 40 (estatuto -> condicion .)


state 65

    (41) estatuto -> regresa .

    SI              reduce using rule 41 (estatuto -> regresa .)
    REGRESA         reduce using rule 41 (estatuto -> regresa .)
    MIENTRAS        reduce using rule 41 (estatuto -> regresa .)
    DESDE           reduce using rule 41 (estatuto -> regresa .)
    ID              reduce using rule 41 (estatuto -> regresa .)
    ESCRIBE         reduce using rule 41 (estatuto -> regresa .)
    LEE             reduce using rule 41 (estatuto -> regresa .)
    RCURLY          reduce using rule 41 (estatuto -> regresa .)


state 66

    (42) estatuto -> loop_condicional .

    SI              reduce using rule 42 (estatuto -> loop_condicional .)
    REGRESA         reduce using rule 42 (estatuto -> loop_condicional .)
    MIENTRAS        reduce using rule 42 (estatuto -> loop_condicional .)
    DESDE           reduce using rule 42 (estatuto -> loop_condicional .)
    ID              reduce using rule 42 (estatuto -> loop_condicional .)
    ESCRIBE         reduce using rule 42 (estatuto -> loop_condicional .)
    LEE             reduce using rule 42 (estatuto -> loop_condicional .)
    RCURLY          reduce using rule 42 (estatuto -> loop_condicional .)


state 67

    (43) estatuto -> loop_no_condicional .

    SI              reduce using rule 43 (estatuto -> loop_no_condicional .)
    REGRESA         reduce using rule 43 (estatuto -> loop_no_condicional .)
    MIENTRAS        reduce using rule 43 (estatuto -> loop_no_condicional .)
    DESDE           reduce using rule 43 (estatuto -> loop_no_condicional .)
    ID              reduce using rule 43 (estatuto -> loop_no_condicional .)
    ESCRIBE         reduce using rule 43 (estatuto -> loop_no_condicional .)
    LEE             reduce using rule 43 (estatuto -> loop_no_condicional .)
    RCURLY          reduce using rule 43 (estatuto -> loop_no_condicional .)


state 68

    (44) estatuto -> llamada_funcion .

    SI              reduce using rule 44 (estatuto -> llamada_funcion .)
    REGRESA         reduce using rule 44 (estatuto -> llamada_funcion .)
    MIENTRAS        reduce using rule 44 (estatuto -> llamada_funcion .)
    DESDE           reduce using rule 44 (estatuto -> llamada_funcion .)
    ID              reduce using rule 44 (estatuto -> llamada_funcion .)
    ESCRIBE         reduce using rule 44 (estatuto -> llamada_funcion .)
    LEE             reduce using rule 44 (estatuto -> llamada_funcion .)
    RCURLY          reduce using rule 44 (estatuto -> llamada_funcion .)


state 69

    (45) estatuto -> escritura .

    SI              reduce using rule 45 (estatuto -> escritura .)
    REGRESA         reduce using rule 45 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 45 (estatuto -> escritura .)
    DESDE           reduce using rule 45 (estatuto -> escritura .)
    ID              reduce using rule 45 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 45 (estatuto -> escritura .)
    LEE             reduce using rule 45 (estatuto -> escritura .)
    RCURLY          reduce using rule 45 (estatuto -> escritura .)


state 70

    (46) estatuto -> lectura .

    SI              reduce using rule 46 (estatuto -> lectura .)
    REGRESA         reduce using rule 46 (estatuto -> lectura .)
    MIENTRAS        reduce using rule 46 (estatuto -> lectura .)
    DESDE           reduce using rule 46 (estatuto -> lectura .)
    ID              reduce using rule 46 (estatuto -> lectura .)
    ESCRIBE         reduce using rule 46 (estatuto -> lectura .)
    LEE             reduce using rule 46 (estatuto -> lectura .)
    RCURLY          reduce using rule 46 (estatuto -> lectura .)


state 71

    (47) asignacion -> variable . ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2

    ASSIGN          shift and go to state 86


state 72

    (59) condicion -> SI . LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    LPAREN          shift and go to state 87


state 73

    (74) regresa -> REGRESA . LPAREN variable RPAREN SEMIC

    LPAREN          shift and go to state 88


state 74

    (62) loop_condicional -> MIENTRAS . pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (141) pn_loop_condicional1 -> .

    LPAREN          reduce using rule 141 (pn_loop_condicional1 -> .)

    pn_loop_condicional1           shift and go to state 89

state 75

    (63) loop_no_condicional -> DESDE . pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (144) pn_loop_no_condicional1 -> .

    ID              reduce using rule 144 (pn_loop_no_condicional1 -> .)

    pn_loop_no_condicional1        shift and go to state 90

state 76

    (68) llamada_funcion -> ID . LPAREN llamada_param RPAREN SEMIC
    (54) variable -> ID . pn_Expresion1 varDim
    (121) pn_Expresion1 -> .

    LPAREN          shift and go to state 91
    LBRACK          reduce using rule 121 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 121 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 92

state 77

    (69) escritura -> ESCRIBE . pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (134) pn_Secuencial3 -> .

    LPAREN          reduce using rule 134 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 93

state 78

    (67) lectura -> LEE . pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (134) pn_Secuencial3 -> .

    LPAREN          reduce using rule 134 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 94

state 79

    (25) lista_parametros -> ID parDim . COLON tipo lista_parametros2

    COLON           shift and go to state 95


state 80

    (28) parDim -> LBRACK . expresion parDim2 RBRACK
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 96
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 81

    (29) parDim -> empty .

    COLON           reduce using rule 29 (parDim -> empty .)


state 82

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN . dec_variables bloque
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (106) empty -> .

    VARIABLES       shift and go to state 6
    LCURLY          reduce using rule 106 (empty -> .)

    dec_variables                  shift and go to state 113
    empty                          shift and go to state 7

state 83

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 . DecVarDim3 RBRACK
    (13) DecVarDim3 -> . COMMA INT_CTE
    (14) DecVarDim3 -> . empty
    (106) empty -> .

    COMMA           shift and go to state 115
    RBRACK          reduce using rule 106 (empty -> .)

    DecVarDim3                     shift and go to state 114
    empty                          shift and go to state 116

state 84

    (36) bloque -> LCURLY estatutos RCURLY .

    $end            reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    VOID            reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    INT_TYPE        reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    CHAR_TYPE       reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    FLOAT_TYPE      reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    PRINCIPAL       reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    SINO            reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    SI              reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    REGRESA         reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    MIENTRAS        reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    DESDE           reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    ID              reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    ESCRIBE         reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    LEE             reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)


state 85

    (37) estatutos -> estatuto estatutos .

    RCURLY          reduce using rule 37 (estatutos -> estatuto estatutos .)


state 86

    (47) asignacion -> variable ASSIGN . pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (132) pn_Secuencial1 -> .

    LPAREN          reduce using rule 132 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 132 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 132 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 132 (pn_Secuencial1 -> .)
    ID              reduce using rule 132 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 132 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 132 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 117

state 87

    (59) condicion -> SI LPAREN . expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 118
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 88

    (74) regresa -> REGRESA LPAREN . variable RPAREN SEMIC
    (54) variable -> . ID pn_Expresion1 varDim

    ID              shift and go to state 120

    variable                       shift and go to state 119

state 89

    (62) loop_condicional -> MIENTRAS pn_loop_condicional1 . LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    LPAREN          shift and go to state 121


state 90

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 . variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (54) variable -> . ID pn_Expresion1 varDim

    ID              shift and go to state 120

    variable                       shift and go to state 122

state 91

    (68) llamada_funcion -> ID LPAREN . llamada_param RPAREN SEMIC
    (32) llamada_param -> . expresion llamada_param2
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    llamada_param                  shift and go to state 123
    expresion                      shift and go to state 124
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 92

    (54) variable -> ID pn_Expresion1 . varDim
    (55) varDim -> . LBRACK expresion varDim2 RBRACK
    (56) varDim -> . empty
    (106) empty -> .

    LBRACK          shift and go to state 126
    ASSIGN          reduce using rule 106 (empty -> .)
    MULT_OP         reduce using rule 106 (empty -> .)
    DIV_OP          reduce using rule 106 (empty -> .)
    PLUS_OP         reduce using rule 106 (empty -> .)
    MINUS_OP        reduce using rule 106 (empty -> .)
    LT_LOG          reduce using rule 106 (empty -> .)
    GT_LOG          reduce using rule 106 (empty -> .)
    LTE_LOG         reduce using rule 106 (empty -> .)
    GTE_LOG         reduce using rule 106 (empty -> .)
    NE_LOG          reduce using rule 106 (empty -> .)
    EQUAL_LOG       reduce using rule 106 (empty -> .)
    AND_LOG         reduce using rule 106 (empty -> .)
    OR_LOG          reduce using rule 106 (empty -> .)
    COMMA           reduce using rule 106 (empty -> .)
    RBRACK          reduce using rule 106 (empty -> .)
    RPAREN          reduce using rule 106 (empty -> .)
    SEMIC           reduce using rule 106 (empty -> .)
    HASTA           reduce using rule 106 (empty -> .)
    HACER           reduce using rule 106 (empty -> .)

    varDim                         shift and go to state 125
    empty                          shift and go to state 127

state 93

    (69) escritura -> ESCRIBE pn_Secuencial3 . LPAREN escritura2 RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 128


state 94

    (67) lectura -> LEE pn_Secuencial3 . LPAREN varLectura RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 129


state 95

    (25) lista_parametros -> ID parDim COLON . tipo lista_parametros2
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    tipo                           shift and go to state 130

state 96

    (28) parDim -> LBRACK expresion . parDim2 RBRACK
    (30) parDim2 -> . COMMA expresion
    (31) parDim2 -> . empty
    (106) empty -> .

    COMMA           shift and go to state 132
    RBRACK          reduce using rule 106 (empty -> .)

    parDim2                        shift and go to state 131
    empty                          shift and go to state 133

state 97

    (75) expresion -> mega_exp . expresion1
    (76) expresion1 -> . ASSIGN expresion
    (77) expresion1 -> . empty
    (106) empty -> .

    ASSIGN          shift and go to state 135
    COMMA           reduce using rule 106 (empty -> .)
    RBRACK          reduce using rule 106 (empty -> .)
    RPAREN          reduce using rule 106 (empty -> .)
    SEMIC           reduce using rule 106 (empty -> .)
    HASTA           reduce using rule 106 (empty -> .)
    HACER           reduce using rule 106 (empty -> .)

    expresion1                     shift and go to state 134
    empty                          shift and go to state 136

state 98

    (78) mega_exp -> super_exp . meg
    (79) meg -> . op_l pn_Expresion10 mega_exp pn_Expresion11
    (80) meg -> . empty
    (81) op_l -> . AND_LOG
    (82) op_l -> . OR_LOG
    (106) empty -> .

    AND_LOG         shift and go to state 140
    OR_LOG          shift and go to state 141
    ASSIGN          reduce using rule 106 (empty -> .)
    COMMA           reduce using rule 106 (empty -> .)
    RBRACK          reduce using rule 106 (empty -> .)
    RPAREN          reduce using rule 106 (empty -> .)
    SEMIC           reduce using rule 106 (empty -> .)
    HASTA           reduce using rule 106 (empty -> .)
    HACER           reduce using rule 106 (empty -> .)

    meg                            shift and go to state 137
    op_l                           shift and go to state 138
    empty                          shift and go to state 139

state 99

    (83) super_exp -> exp . sp
    (84) sp -> . op_r exp pn_Expresion9
    (85) sp -> . empty
    (86) op_r -> . LT_LOG pn_Expresion8
    (87) op_r -> . GT_LOG pn_Expresion8
    (88) op_r -> . LTE_LOG pn_Expresion8
    (89) op_r -> . GTE_LOG pn_Expresion8
    (90) op_r -> . NE_LOG pn_Expresion8
    (91) op_r -> . EQUAL_LOG pn_Expresion8
    (106) empty -> .

    LT_LOG          shift and go to state 145
    GT_LOG          shift and go to state 146
    LTE_LOG         shift and go to state 147
    GTE_LOG         shift and go to state 148
    NE_LOG          shift and go to state 149
    EQUAL_LOG       shift and go to state 150
    AND_LOG         reduce using rule 106 (empty -> .)
    OR_LOG          reduce using rule 106 (empty -> .)
    ASSIGN          reduce using rule 106 (empty -> .)
    COMMA           reduce using rule 106 (empty -> .)
    RBRACK          reduce using rule 106 (empty -> .)
    RPAREN          reduce using rule 106 (empty -> .)
    SEMIC           reduce using rule 106 (empty -> .)
    HASTA           reduce using rule 106 (empty -> .)
    HACER           reduce using rule 106 (empty -> .)

    sp                             shift and go to state 142
    op_r                           shift and go to state 143
    empty                          shift and go to state 144

state 100

    (92) exp -> termino . pn_Expresion4 exp1
    (124) pn_Expresion4 -> .

    PLUS_OP         reduce using rule 124 (pn_Expresion4 -> .)
    MINUS_OP        reduce using rule 124 (pn_Expresion4 -> .)
    LT_LOG          reduce using rule 124 (pn_Expresion4 -> .)
    GT_LOG          reduce using rule 124 (pn_Expresion4 -> .)
    LTE_LOG         reduce using rule 124 (pn_Expresion4 -> .)
    GTE_LOG         reduce using rule 124 (pn_Expresion4 -> .)
    NE_LOG          reduce using rule 124 (pn_Expresion4 -> .)
    EQUAL_LOG       reduce using rule 124 (pn_Expresion4 -> .)
    AND_LOG         reduce using rule 124 (pn_Expresion4 -> .)
    OR_LOG          reduce using rule 124 (pn_Expresion4 -> .)
    ASSIGN          reduce using rule 124 (pn_Expresion4 -> .)
    COMMA           reduce using rule 124 (pn_Expresion4 -> .)
    RBRACK          reduce using rule 124 (pn_Expresion4 -> .)
    RPAREN          reduce using rule 124 (pn_Expresion4 -> .)
    SEMIC           reduce using rule 124 (pn_Expresion4 -> .)
    HASTA           reduce using rule 124 (pn_Expresion4 -> .)
    HACER           reduce using rule 124 (pn_Expresion4 -> .)

    pn_Expresion4                  shift and go to state 151

state 101

    (97) termino -> factor . pn_Expresion5 term
    (125) pn_Expresion5 -> .

    MULT_OP         reduce using rule 125 (pn_Expresion5 -> .)
    DIV_OP          reduce using rule 125 (pn_Expresion5 -> .)
    PLUS_OP         reduce using rule 125 (pn_Expresion5 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion5 -> .)
    LT_LOG          reduce using rule 125 (pn_Expresion5 -> .)
    GT_LOG          reduce using rule 125 (pn_Expresion5 -> .)
    LTE_LOG         reduce using rule 125 (pn_Expresion5 -> .)
    GTE_LOG         reduce using rule 125 (pn_Expresion5 -> .)
    NE_LOG          reduce using rule 125 (pn_Expresion5 -> .)
    EQUAL_LOG       reduce using rule 125 (pn_Expresion5 -> .)
    AND_LOG         reduce using rule 125 (pn_Expresion5 -> .)
    OR_LOG          reduce using rule 125 (pn_Expresion5 -> .)
    ASSIGN          reduce using rule 125 (pn_Expresion5 -> .)
    COMMA           reduce using rule 125 (pn_Expresion5 -> .)
    RBRACK          reduce using rule 125 (pn_Expresion5 -> .)
    RPAREN          reduce using rule 125 (pn_Expresion5 -> .)
    SEMIC           reduce using rule 125 (pn_Expresion5 -> .)
    HASTA           reduce using rule 125 (pn_Expresion5 -> .)
    HACER           reduce using rule 125 (pn_Expresion5 -> .)

    pn_Expresion5                  shift and go to state 152

state 102

    (102) factor -> ctes .

    MULT_OP         reduce using rule 102 (factor -> ctes .)
    DIV_OP          reduce using rule 102 (factor -> ctes .)
    PLUS_OP         reduce using rule 102 (factor -> ctes .)
    MINUS_OP        reduce using rule 102 (factor -> ctes .)
    LT_LOG          reduce using rule 102 (factor -> ctes .)
    GT_LOG          reduce using rule 102 (factor -> ctes .)
    LTE_LOG         reduce using rule 102 (factor -> ctes .)
    GTE_LOG         reduce using rule 102 (factor -> ctes .)
    NE_LOG          reduce using rule 102 (factor -> ctes .)
    EQUAL_LOG       reduce using rule 102 (factor -> ctes .)
    AND_LOG         reduce using rule 102 (factor -> ctes .)
    OR_LOG          reduce using rule 102 (factor -> ctes .)
    ASSIGN          reduce using rule 102 (factor -> ctes .)
    COMMA           reduce using rule 102 (factor -> ctes .)
    RBRACK          reduce using rule 102 (factor -> ctes .)
    RPAREN          reduce using rule 102 (factor -> ctes .)
    SEMIC           reduce using rule 102 (factor -> ctes .)
    HASTA           reduce using rule 102 (factor -> ctes .)
    HACER           reduce using rule 102 (factor -> ctes .)


state 103

    (103) factor -> LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7
    (126) pn_Expresion6 -> .

    LPAREN          reduce using rule 126 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 126 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 126 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 126 (pn_Expresion6 -> .)
    ID              reduce using rule 126 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 126 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 126 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 153

state 104

    (104) factor -> variable .

    MULT_OP         reduce using rule 104 (factor -> variable .)
    DIV_OP          reduce using rule 104 (factor -> variable .)
    PLUS_OP         reduce using rule 104 (factor -> variable .)
    MINUS_OP        reduce using rule 104 (factor -> variable .)
    LT_LOG          reduce using rule 104 (factor -> variable .)
    GT_LOG          reduce using rule 104 (factor -> variable .)
    LTE_LOG         reduce using rule 104 (factor -> variable .)
    GTE_LOG         reduce using rule 104 (factor -> variable .)
    NE_LOG          reduce using rule 104 (factor -> variable .)
    EQUAL_LOG       reduce using rule 104 (factor -> variable .)
    AND_LOG         reduce using rule 104 (factor -> variable .)
    OR_LOG          reduce using rule 104 (factor -> variable .)
    ASSIGN          reduce using rule 104 (factor -> variable .)
    COMMA           reduce using rule 104 (factor -> variable .)
    RBRACK          reduce using rule 104 (factor -> variable .)
    RPAREN          reduce using rule 104 (factor -> variable .)
    SEMIC           reduce using rule 104 (factor -> variable .)
    HASTA           reduce using rule 104 (factor -> variable .)
    HACER           reduce using rule 104 (factor -> variable .)


state 105

    (105) factor -> llamada_funcion .

    MULT_OP         reduce using rule 105 (factor -> llamada_funcion .)
    DIV_OP          reduce using rule 105 (factor -> llamada_funcion .)
    PLUS_OP         reduce using rule 105 (factor -> llamada_funcion .)
    MINUS_OP        reduce using rule 105 (factor -> llamada_funcion .)
    LT_LOG          reduce using rule 105 (factor -> llamada_funcion .)
    GT_LOG          reduce using rule 105 (factor -> llamada_funcion .)
    LTE_LOG         reduce using rule 105 (factor -> llamada_funcion .)
    GTE_LOG         reduce using rule 105 (factor -> llamada_funcion .)
    NE_LOG          reduce using rule 105 (factor -> llamada_funcion .)
    EQUAL_LOG       reduce using rule 105 (factor -> llamada_funcion .)
    AND_LOG         reduce using rule 105 (factor -> llamada_funcion .)
    OR_LOG          reduce using rule 105 (factor -> llamada_funcion .)
    ASSIGN          reduce using rule 105 (factor -> llamada_funcion .)
    COMMA           reduce using rule 105 (factor -> llamada_funcion .)
    RBRACK          reduce using rule 105 (factor -> llamada_funcion .)
    RPAREN          reduce using rule 105 (factor -> llamada_funcion .)
    SEMIC           reduce using rule 105 (factor -> llamada_funcion .)
    HASTA           reduce using rule 105 (factor -> llamada_funcion .)
    HACER           reduce using rule 105 (factor -> llamada_funcion .)


state 106

    (48) ctes -> CHAR_CTE . pn_CTEChar
    (119) pn_CTEChar -> .

    MULT_OP         reduce using rule 119 (pn_CTEChar -> .)
    DIV_OP          reduce using rule 119 (pn_CTEChar -> .)
    PLUS_OP         reduce using rule 119 (pn_CTEChar -> .)
    MINUS_OP        reduce using rule 119 (pn_CTEChar -> .)
    LT_LOG          reduce using rule 119 (pn_CTEChar -> .)
    GT_LOG          reduce using rule 119 (pn_CTEChar -> .)
    LTE_LOG         reduce using rule 119 (pn_CTEChar -> .)
    GTE_LOG         reduce using rule 119 (pn_CTEChar -> .)
    NE_LOG          reduce using rule 119 (pn_CTEChar -> .)
    EQUAL_LOG       reduce using rule 119 (pn_CTEChar -> .)
    AND_LOG         reduce using rule 119 (pn_CTEChar -> .)
    OR_LOG          reduce using rule 119 (pn_CTEChar -> .)
    ASSIGN          reduce using rule 119 (pn_CTEChar -> .)
    COMMA           reduce using rule 119 (pn_CTEChar -> .)
    RBRACK          reduce using rule 119 (pn_CTEChar -> .)
    RPAREN          reduce using rule 119 (pn_CTEChar -> .)
    SEMIC           reduce using rule 119 (pn_CTEChar -> .)
    HASTA           reduce using rule 119 (pn_CTEChar -> .)
    HACER           reduce using rule 119 (pn_CTEChar -> .)

    pn_CTEChar                     shift and go to state 154

state 107

    (49) ctes -> STRING_CTE . pn_CTEString
    (120) pn_CTEString -> .

    MULT_OP         reduce using rule 120 (pn_CTEString -> .)
    DIV_OP          reduce using rule 120 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 120 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 120 (pn_CTEString -> .)
    LT_LOG          reduce using rule 120 (pn_CTEString -> .)
    GT_LOG          reduce using rule 120 (pn_CTEString -> .)
    LTE_LOG         reduce using rule 120 (pn_CTEString -> .)
    GTE_LOG         reduce using rule 120 (pn_CTEString -> .)
    NE_LOG          reduce using rule 120 (pn_CTEString -> .)
    EQUAL_LOG       reduce using rule 120 (pn_CTEString -> .)
    AND_LOG         reduce using rule 120 (pn_CTEString -> .)
    OR_LOG          reduce using rule 120 (pn_CTEString -> .)
    ASSIGN          reduce using rule 120 (pn_CTEString -> .)
    COMMA           reduce using rule 120 (pn_CTEString -> .)
    RBRACK          reduce using rule 120 (pn_CTEString -> .)
    RPAREN          reduce using rule 120 (pn_CTEString -> .)
    SEMIC           reduce using rule 120 (pn_CTEString -> .)
    HASTA           reduce using rule 120 (pn_CTEString -> .)
    HACER           reduce using rule 120 (pn_CTEString -> .)

    pn_CTEString                   shift and go to state 155

state 108

    (50) ctes -> MINUS_OP . pn_CTENeg num
    (116) pn_CTENeg -> .

    INT_CTE         reduce using rule 116 (pn_CTENeg -> .)
    FLOAT_CTE       reduce using rule 116 (pn_CTENeg -> .)

    pn_CTENeg                      shift and go to state 156

state 109

    (51) ctes -> num .

    MULT_OP         reduce using rule 51 (ctes -> num .)
    DIV_OP          reduce using rule 51 (ctes -> num .)
    PLUS_OP         reduce using rule 51 (ctes -> num .)
    MINUS_OP        reduce using rule 51 (ctes -> num .)
    LT_LOG          reduce using rule 51 (ctes -> num .)
    GT_LOG          reduce using rule 51 (ctes -> num .)
    LTE_LOG         reduce using rule 51 (ctes -> num .)
    GTE_LOG         reduce using rule 51 (ctes -> num .)
    NE_LOG          reduce using rule 51 (ctes -> num .)
    EQUAL_LOG       reduce using rule 51 (ctes -> num .)
    AND_LOG         reduce using rule 51 (ctes -> num .)
    OR_LOG          reduce using rule 51 (ctes -> num .)
    ASSIGN          reduce using rule 51 (ctes -> num .)
    COMMA           reduce using rule 51 (ctes -> num .)
    RBRACK          reduce using rule 51 (ctes -> num .)
    RPAREN          reduce using rule 51 (ctes -> num .)
    SEMIC           reduce using rule 51 (ctes -> num .)
    HASTA           reduce using rule 51 (ctes -> num .)
    HACER           reduce using rule 51 (ctes -> num .)


state 110

    (54) variable -> ID . pn_Expresion1 varDim
    (68) llamada_funcion -> ID . LPAREN llamada_param RPAREN SEMIC
    (121) pn_Expresion1 -> .

    LPAREN          shift and go to state 91
    LBRACK          reduce using rule 121 (pn_Expresion1 -> .)
    MULT_OP         reduce using rule 121 (pn_Expresion1 -> .)
    DIV_OP          reduce using rule 121 (pn_Expresion1 -> .)
    PLUS_OP         reduce using rule 121 (pn_Expresion1 -> .)
    MINUS_OP        reduce using rule 121 (pn_Expresion1 -> .)
    LT_LOG          reduce using rule 121 (pn_Expresion1 -> .)
    GT_LOG          reduce using rule 121 (pn_Expresion1 -> .)
    LTE_LOG         reduce using rule 121 (pn_Expresion1 -> .)
    GTE_LOG         reduce using rule 121 (pn_Expresion1 -> .)
    NE_LOG          reduce using rule 121 (pn_Expresion1 -> .)
    EQUAL_LOG       reduce using rule 121 (pn_Expresion1 -> .)
    AND_LOG         reduce using rule 121 (pn_Expresion1 -> .)
    OR_LOG          reduce using rule 121 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 121 (pn_Expresion1 -> .)
    COMMA           reduce using rule 121 (pn_Expresion1 -> .)
    RBRACK          reduce using rule 121 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 121 (pn_Expresion1 -> .)
    SEMIC           reduce using rule 121 (pn_Expresion1 -> .)
    HASTA           reduce using rule 121 (pn_Expresion1 -> .)
    HACER           reduce using rule 121 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 92

state 111

    (52) num -> INT_CTE . pn_CTEInt
    (117) pn_CTEInt -> .

    MULT_OP         reduce using rule 117 (pn_CTEInt -> .)
    DIV_OP          reduce using rule 117 (pn_CTEInt -> .)
    PLUS_OP         reduce using rule 117 (pn_CTEInt -> .)
    MINUS_OP        reduce using rule 117 (pn_CTEInt -> .)
    LT_LOG          reduce using rule 117 (pn_CTEInt -> .)
    GT_LOG          reduce using rule 117 (pn_CTEInt -> .)
    LTE_LOG         reduce using rule 117 (pn_CTEInt -> .)
    GTE_LOG         reduce using rule 117 (pn_CTEInt -> .)
    NE_LOG          reduce using rule 117 (pn_CTEInt -> .)
    EQUAL_LOG       reduce using rule 117 (pn_CTEInt -> .)
    AND_LOG         reduce using rule 117 (pn_CTEInt -> .)
    OR_LOG          reduce using rule 117 (pn_CTEInt -> .)
    ASSIGN          reduce using rule 117 (pn_CTEInt -> .)
    COMMA           reduce using rule 117 (pn_CTEInt -> .)
    RBRACK          reduce using rule 117 (pn_CTEInt -> .)
    RPAREN          reduce using rule 117 (pn_CTEInt -> .)
    SEMIC           reduce using rule 117 (pn_CTEInt -> .)
    HASTA           reduce using rule 117 (pn_CTEInt -> .)
    HACER           reduce using rule 117 (pn_CTEInt -> .)

    pn_CTEInt                      shift and go to state 157

state 112

    (53) num -> FLOAT_CTE . pn_CTEFloat
    (118) pn_CTEFloat -> .

    MULT_OP         reduce using rule 118 (pn_CTEFloat -> .)
    DIV_OP          reduce using rule 118 (pn_CTEFloat -> .)
    PLUS_OP         reduce using rule 118 (pn_CTEFloat -> .)
    MINUS_OP        reduce using rule 118 (pn_CTEFloat -> .)
    LT_LOG          reduce using rule 118 (pn_CTEFloat -> .)
    GT_LOG          reduce using rule 118 (pn_CTEFloat -> .)
    LTE_LOG         reduce using rule 118 (pn_CTEFloat -> .)
    GTE_LOG         reduce using rule 118 (pn_CTEFloat -> .)
    NE_LOG          reduce using rule 118 (pn_CTEFloat -> .)
    EQUAL_LOG       reduce using rule 118 (pn_CTEFloat -> .)
    AND_LOG         reduce using rule 118 (pn_CTEFloat -> .)
    OR_LOG          reduce using rule 118 (pn_CTEFloat -> .)
    ASSIGN          reduce using rule 118 (pn_CTEFloat -> .)
    COMMA           reduce using rule 118 (pn_CTEFloat -> .)
    RBRACK          reduce using rule 118 (pn_CTEFloat -> .)
    RPAREN          reduce using rule 118 (pn_CTEFloat -> .)
    SEMIC           reduce using rule 118 (pn_CTEFloat -> .)
    HASTA           reduce using rule 118 (pn_CTEFloat -> .)
    HACER           reduce using rule 118 (pn_CTEFloat -> .)

    pn_CTEFloat                    shift and go to state 158

state 113

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 159

state 114

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 . RBRACK

    RBRACK          shift and go to state 160


state 115

    (13) DecVarDim3 -> COMMA . INT_CTE

    INT_CTE         shift and go to state 161


state 116

    (14) DecVarDim3 -> empty .

    RBRACK          reduce using rule 14 (DecVarDim3 -> empty .)


state 117

    (47) asignacion -> variable ASSIGN pn_Secuencial1 . expresion SEMIC pn_Secuencial2
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    variable                       shift and go to state 104
    expresion                      shift and go to state 162
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 118

    (59) condicion -> SI LPAREN expresion . RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    RPAREN          shift and go to state 163


state 119

    (74) regresa -> REGRESA LPAREN variable . RPAREN SEMIC

    RPAREN          shift and go to state 164


state 120

    (54) variable -> ID . pn_Expresion1 varDim
    (121) pn_Expresion1 -> .

    LBRACK          reduce using rule 121 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 121 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 121 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 92

state 121

    (62) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN . expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 165
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 122

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable . ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    ASSIGN          shift and go to state 166


state 123

    (68) llamada_funcion -> ID LPAREN llamada_param . RPAREN SEMIC

    RPAREN          shift and go to state 167


state 124

    (32) llamada_param -> expresion . llamada_param2
    (33) llamada_param2 -> . COMMA expresion
    (34) llamada_param2 -> . empty
    (106) empty -> .

    COMMA           shift and go to state 169
    RPAREN          reduce using rule 106 (empty -> .)

    llamada_param2                 shift and go to state 168
    empty                          shift and go to state 170

state 125

    (54) variable -> ID pn_Expresion1 varDim .

    ASSIGN          reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    MULT_OP         reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    DIV_OP          reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    PLUS_OP         reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    MINUS_OP        reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    LT_LOG          reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    GT_LOG          reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    LTE_LOG         reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    GTE_LOG         reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    NE_LOG          reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    EQUAL_LOG       reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    AND_LOG         reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    OR_LOG          reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    COMMA           reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    RBRACK          reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    RPAREN          reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    SEMIC           reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    HASTA           reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)
    HACER           reduce using rule 54 (variable -> ID pn_Expresion1 varDim .)


state 126

    (55) varDim -> LBRACK . expresion varDim2 RBRACK
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 171
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 127

    (56) varDim -> empty .

    ASSIGN          reduce using rule 56 (varDim -> empty .)
    MULT_OP         reduce using rule 56 (varDim -> empty .)
    DIV_OP          reduce using rule 56 (varDim -> empty .)
    PLUS_OP         reduce using rule 56 (varDim -> empty .)
    MINUS_OP        reduce using rule 56 (varDim -> empty .)
    LT_LOG          reduce using rule 56 (varDim -> empty .)
    GT_LOG          reduce using rule 56 (varDim -> empty .)
    LTE_LOG         reduce using rule 56 (varDim -> empty .)
    GTE_LOG         reduce using rule 56 (varDim -> empty .)
    NE_LOG          reduce using rule 56 (varDim -> empty .)
    EQUAL_LOG       reduce using rule 56 (varDim -> empty .)
    AND_LOG         reduce using rule 56 (varDim -> empty .)
    OR_LOG          reduce using rule 56 (varDim -> empty .)
    COMMA           reduce using rule 56 (varDim -> empty .)
    RBRACK          reduce using rule 56 (varDim -> empty .)
    RPAREN          reduce using rule 56 (varDim -> empty .)
    SEMIC           reduce using rule 56 (varDim -> empty .)
    HASTA           reduce using rule 56 (varDim -> empty .)
    HACER           reduce using rule 56 (varDim -> empty .)


state 128

    (69) escritura -> ESCRIBE pn_Secuencial3 LPAREN . escritura2 RPAREN SEMIC pn_Secuencial5
    (70) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (71) escritura2 -> . expresion pn_Secuencial4 escritura3
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 173
    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    escritura2                     shift and go to state 172
    expresion                      shift and go to state 174
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 129

    (67) lectura -> LEE pn_Secuencial3 LPAREN . varLectura RPAREN SEMIC pn_Secuencial5
    (64) varLectura -> . ID pn_Expresion1 varDim varLectura2

    ID              shift and go to state 176

    varLectura                     shift and go to state 175

state 130

    (25) lista_parametros -> ID parDim COLON tipo . lista_parametros2
    (26) lista_parametros2 -> . COMMA lista_parametros
    (27) lista_parametros2 -> . empty
    (106) empty -> .

    COMMA           shift and go to state 178
    RPAREN          reduce using rule 106 (empty -> .)

    lista_parametros2              shift and go to state 177
    empty                          shift and go to state 179

state 131

    (28) parDim -> LBRACK expresion parDim2 . RBRACK

    RBRACK          shift and go to state 180


state 132

    (30) parDim2 -> COMMA . expresion
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 181
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 133

    (31) parDim2 -> empty .

    RBRACK          reduce using rule 31 (parDim2 -> empty .)


state 134

    (75) expresion -> mega_exp expresion1 .

    COMMA           reduce using rule 75 (expresion -> mega_exp expresion1 .)
    RBRACK          reduce using rule 75 (expresion -> mega_exp expresion1 .)
    RPAREN          reduce using rule 75 (expresion -> mega_exp expresion1 .)
    SEMIC           reduce using rule 75 (expresion -> mega_exp expresion1 .)
    HASTA           reduce using rule 75 (expresion -> mega_exp expresion1 .)
    HACER           reduce using rule 75 (expresion -> mega_exp expresion1 .)


state 135

    (76) expresion1 -> ASSIGN . expresion
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 182
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 136

    (77) expresion1 -> empty .

    COMMA           reduce using rule 77 (expresion1 -> empty .)
    RBRACK          reduce using rule 77 (expresion1 -> empty .)
    RPAREN          reduce using rule 77 (expresion1 -> empty .)
    SEMIC           reduce using rule 77 (expresion1 -> empty .)
    HASTA           reduce using rule 77 (expresion1 -> empty .)
    HACER           reduce using rule 77 (expresion1 -> empty .)


state 137

    (78) mega_exp -> super_exp meg .

    ASSIGN          reduce using rule 78 (mega_exp -> super_exp meg .)
    COMMA           reduce using rule 78 (mega_exp -> super_exp meg .)
    RBRACK          reduce using rule 78 (mega_exp -> super_exp meg .)
    RPAREN          reduce using rule 78 (mega_exp -> super_exp meg .)
    SEMIC           reduce using rule 78 (mega_exp -> super_exp meg .)
    HASTA           reduce using rule 78 (mega_exp -> super_exp meg .)
    HACER           reduce using rule 78 (mega_exp -> super_exp meg .)


state 138

    (79) meg -> op_l . pn_Expresion10 mega_exp pn_Expresion11
    (130) pn_Expresion10 -> .

    LPAREN          reduce using rule 130 (pn_Expresion10 -> .)
    CHAR_CTE        reduce using rule 130 (pn_Expresion10 -> .)
    STRING_CTE      reduce using rule 130 (pn_Expresion10 -> .)
    MINUS_OP        reduce using rule 130 (pn_Expresion10 -> .)
    ID              reduce using rule 130 (pn_Expresion10 -> .)
    INT_CTE         reduce using rule 130 (pn_Expresion10 -> .)
    FLOAT_CTE       reduce using rule 130 (pn_Expresion10 -> .)

    pn_Expresion10                 shift and go to state 183

state 139

    (80) meg -> empty .

    ASSIGN          reduce using rule 80 (meg -> empty .)
    COMMA           reduce using rule 80 (meg -> empty .)
    RBRACK          reduce using rule 80 (meg -> empty .)
    RPAREN          reduce using rule 80 (meg -> empty .)
    SEMIC           reduce using rule 80 (meg -> empty .)
    HASTA           reduce using rule 80 (meg -> empty .)
    HACER           reduce using rule 80 (meg -> empty .)


state 140

    (81) op_l -> AND_LOG .

    LPAREN          reduce using rule 81 (op_l -> AND_LOG .)
    CHAR_CTE        reduce using rule 81 (op_l -> AND_LOG .)
    STRING_CTE      reduce using rule 81 (op_l -> AND_LOG .)
    MINUS_OP        reduce using rule 81 (op_l -> AND_LOG .)
    ID              reduce using rule 81 (op_l -> AND_LOG .)
    INT_CTE         reduce using rule 81 (op_l -> AND_LOG .)
    FLOAT_CTE       reduce using rule 81 (op_l -> AND_LOG .)


state 141

    (82) op_l -> OR_LOG .

    LPAREN          reduce using rule 82 (op_l -> OR_LOG .)
    CHAR_CTE        reduce using rule 82 (op_l -> OR_LOG .)
    STRING_CTE      reduce using rule 82 (op_l -> OR_LOG .)
    MINUS_OP        reduce using rule 82 (op_l -> OR_LOG .)
    ID              reduce using rule 82 (op_l -> OR_LOG .)
    INT_CTE         reduce using rule 82 (op_l -> OR_LOG .)
    FLOAT_CTE       reduce using rule 82 (op_l -> OR_LOG .)


state 142

    (83) super_exp -> exp sp .

    AND_LOG         reduce using rule 83 (super_exp -> exp sp .)
    OR_LOG          reduce using rule 83 (super_exp -> exp sp .)
    ASSIGN          reduce using rule 83 (super_exp -> exp sp .)
    COMMA           reduce using rule 83 (super_exp -> exp sp .)
    RBRACK          reduce using rule 83 (super_exp -> exp sp .)
    RPAREN          reduce using rule 83 (super_exp -> exp sp .)
    SEMIC           reduce using rule 83 (super_exp -> exp sp .)
    HASTA           reduce using rule 83 (super_exp -> exp sp .)
    HACER           reduce using rule 83 (super_exp -> exp sp .)


state 143

    (84) sp -> op_r . exp pn_Expresion9
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    exp                            shift and go to state 184
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 144

    (85) sp -> empty .

    AND_LOG         reduce using rule 85 (sp -> empty .)
    OR_LOG          reduce using rule 85 (sp -> empty .)
    ASSIGN          reduce using rule 85 (sp -> empty .)
    COMMA           reduce using rule 85 (sp -> empty .)
    RBRACK          reduce using rule 85 (sp -> empty .)
    RPAREN          reduce using rule 85 (sp -> empty .)
    SEMIC           reduce using rule 85 (sp -> empty .)
    HASTA           reduce using rule 85 (sp -> empty .)
    HACER           reduce using rule 85 (sp -> empty .)


state 145

    (86) op_r -> LT_LOG . pn_Expresion8
    (128) pn_Expresion8 -> .

    LPAREN          reduce using rule 128 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 128 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 128 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 128 (pn_Expresion8 -> .)
    ID              reduce using rule 128 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 128 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 128 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 185

state 146

    (87) op_r -> GT_LOG . pn_Expresion8
    (128) pn_Expresion8 -> .

    LPAREN          reduce using rule 128 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 128 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 128 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 128 (pn_Expresion8 -> .)
    ID              reduce using rule 128 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 128 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 128 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 186

state 147

    (88) op_r -> LTE_LOG . pn_Expresion8
    (128) pn_Expresion8 -> .

    LPAREN          reduce using rule 128 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 128 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 128 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 128 (pn_Expresion8 -> .)
    ID              reduce using rule 128 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 128 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 128 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 187

state 148

    (89) op_r -> GTE_LOG . pn_Expresion8
    (128) pn_Expresion8 -> .

    LPAREN          reduce using rule 128 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 128 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 128 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 128 (pn_Expresion8 -> .)
    ID              reduce using rule 128 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 128 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 128 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 188

state 149

    (90) op_r -> NE_LOG . pn_Expresion8
    (128) pn_Expresion8 -> .

    LPAREN          reduce using rule 128 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 128 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 128 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 128 (pn_Expresion8 -> .)
    ID              reduce using rule 128 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 128 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 128 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 189

state 150

    (91) op_r -> EQUAL_LOG . pn_Expresion8
    (128) pn_Expresion8 -> .

    LPAREN          reduce using rule 128 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 128 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 128 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 128 (pn_Expresion8 -> .)
    ID              reduce using rule 128 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 128 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 128 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 190

state 151

    (92) exp -> termino pn_Expresion4 . exp1
    (93) exp1 -> . op_a exp
    (94) exp1 -> . empty
    (95) op_a -> . PLUS_OP pn_Expresion2
    (96) op_a -> . MINUS_OP pn_Expresion2
    (106) empty -> .

    PLUS_OP         shift and go to state 194
    MINUS_OP        shift and go to state 195
    LT_LOG          reduce using rule 106 (empty -> .)
    GT_LOG          reduce using rule 106 (empty -> .)
    LTE_LOG         reduce using rule 106 (empty -> .)
    GTE_LOG         reduce using rule 106 (empty -> .)
    NE_LOG          reduce using rule 106 (empty -> .)
    EQUAL_LOG       reduce using rule 106 (empty -> .)
    AND_LOG         reduce using rule 106 (empty -> .)
    OR_LOG          reduce using rule 106 (empty -> .)
    ASSIGN          reduce using rule 106 (empty -> .)
    COMMA           reduce using rule 106 (empty -> .)
    RBRACK          reduce using rule 106 (empty -> .)
    RPAREN          reduce using rule 106 (empty -> .)
    SEMIC           reduce using rule 106 (empty -> .)
    HASTA           reduce using rule 106 (empty -> .)
    HACER           reduce using rule 106 (empty -> .)

    exp1                           shift and go to state 191
    op_a                           shift and go to state 192
    empty                          shift and go to state 193

state 152

    (97) termino -> factor pn_Expresion5 . term
    (98) term -> . op_a1 termino
    (99) term -> . empty
    (100) op_a1 -> . MULT_OP pn_Expresion3
    (101) op_a1 -> . DIV_OP pn_Expresion3
    (106) empty -> .

    MULT_OP         shift and go to state 199
    DIV_OP          shift and go to state 200
    PLUS_OP         reduce using rule 106 (empty -> .)
    MINUS_OP        reduce using rule 106 (empty -> .)
    LT_LOG          reduce using rule 106 (empty -> .)
    GT_LOG          reduce using rule 106 (empty -> .)
    LTE_LOG         reduce using rule 106 (empty -> .)
    GTE_LOG         reduce using rule 106 (empty -> .)
    NE_LOG          reduce using rule 106 (empty -> .)
    EQUAL_LOG       reduce using rule 106 (empty -> .)
    AND_LOG         reduce using rule 106 (empty -> .)
    OR_LOG          reduce using rule 106 (empty -> .)
    ASSIGN          reduce using rule 106 (empty -> .)
    COMMA           reduce using rule 106 (empty -> .)
    RBRACK          reduce using rule 106 (empty -> .)
    RPAREN          reduce using rule 106 (empty -> .)
    SEMIC           reduce using rule 106 (empty -> .)
    HASTA           reduce using rule 106 (empty -> .)
    HACER           reduce using rule 106 (empty -> .)

    term                           shift and go to state 196
    op_a1                          shift and go to state 197
    empty                          shift and go to state 198

state 153

    (103) factor -> LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    exp                            shift and go to state 201
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 154

    (48) ctes -> CHAR_CTE pn_CTEChar .

    MULT_OP         reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    DIV_OP          reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    PLUS_OP         reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    MINUS_OP        reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    LT_LOG          reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    GT_LOG          reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    LTE_LOG         reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    GTE_LOG         reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    NE_LOG          reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    EQUAL_LOG       reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    AND_LOG         reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    OR_LOG          reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    ASSIGN          reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    COMMA           reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    RBRACK          reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    RPAREN          reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    SEMIC           reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    HASTA           reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)
    HACER           reduce using rule 48 (ctes -> CHAR_CTE pn_CTEChar .)


state 155

    (49) ctes -> STRING_CTE pn_CTEString .

    MULT_OP         reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    DIV_OP          reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    PLUS_OP         reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    MINUS_OP        reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    LT_LOG          reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    GT_LOG          reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    LTE_LOG         reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    GTE_LOG         reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    NE_LOG          reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    EQUAL_LOG       reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    AND_LOG         reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    OR_LOG          reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    ASSIGN          reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    COMMA           reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    RBRACK          reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    RPAREN          reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    SEMIC           reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    HASTA           reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)
    HACER           reduce using rule 49 (ctes -> STRING_CTE pn_CTEString .)


state 156

    (50) ctes -> MINUS_OP pn_CTENeg . num
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    num                            shift and go to state 202

state 157

    (52) num -> INT_CTE pn_CTEInt .

    MULT_OP         reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    DIV_OP          reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    PLUS_OP         reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    MINUS_OP        reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    LT_LOG          reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    GT_LOG          reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    LTE_LOG         reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    GTE_LOG         reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    NE_LOG          reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    EQUAL_LOG       reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    AND_LOG         reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    OR_LOG          reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    ASSIGN          reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    COMMA           reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    RBRACK          reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    RPAREN          reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    SEMIC           reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    HASTA           reduce using rule 52 (num -> INT_CTE pn_CTEInt .)
    HACER           reduce using rule 52 (num -> INT_CTE pn_CTEInt .)


state 158

    (53) num -> FLOAT_CTE pn_CTEFloat .

    MULT_OP         reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    DIV_OP          reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    PLUS_OP         reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    MINUS_OP        reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    LT_LOG          reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    GT_LOG          reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    LTE_LOG         reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    GTE_LOG         reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    NE_LOG          reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    EQUAL_LOG       reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    AND_LOG         reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    OR_LOG          reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    ASSIGN          reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    COMMA           reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    RBRACK          reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    RPAREN          reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    SEMIC           reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    HASTA           reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)
    HACER           reduce using rule 53 (num -> FLOAT_CTE pn_CTEFloat .)


state 159

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .

    VOID            reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    INT_TYPE        reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    CHAR_TYPE       reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    FLOAT_TYPE      reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    PRINCIPAL       reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)


state 160

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .

    COMMA           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .)
    SEMIC           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .)


state 161

    (13) DecVarDim3 -> COMMA INT_CTE .

    RBRACK          reduce using rule 13 (DecVarDim3 -> COMMA INT_CTE .)


state 162

    (47) asignacion -> variable ASSIGN pn_Secuencial1 expresion . SEMIC pn_Secuencial2

    SEMIC           shift and go to state 203


state 163

    (59) condicion -> SI LPAREN expresion RPAREN . pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (138) pn_Condicion1 -> .

    ENTONCES        reduce using rule 138 (pn_Condicion1 -> .)

    pn_Condicion1                  shift and go to state 204

state 164

    (74) regresa -> REGRESA LPAREN variable RPAREN . SEMIC

    SEMIC           shift and go to state 205


state 165

    (62) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion . RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    RPAREN          shift and go to state 206


state 166

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN . pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (132) pn_Secuencial1 -> .

    LPAREN          reduce using rule 132 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 132 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 132 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 132 (pn_Secuencial1 -> .)
    ID              reduce using rule 132 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 132 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 132 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 207

state 167

    (68) llamada_funcion -> ID LPAREN llamada_param RPAREN . SEMIC

    SEMIC           shift and go to state 208


state 168

    (32) llamada_param -> expresion llamada_param2 .

    RPAREN          reduce using rule 32 (llamada_param -> expresion llamada_param2 .)


state 169

    (33) llamada_param2 -> COMMA . expresion
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 209
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 170

    (34) llamada_param2 -> empty .

    RPAREN          reduce using rule 34 (llamada_param2 -> empty .)


state 171

    (55) varDim -> LBRACK expresion . varDim2 RBRACK
    (57) varDim2 -> . COMMA expresion
    (58) varDim2 -> . empty
    (106) empty -> .

    COMMA           shift and go to state 211
    RBRACK          reduce using rule 106 (empty -> .)

    varDim2                        shift and go to state 210
    empty                          shift and go to state 212

state 172

    (69) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 213


state 173

    (70) escritura2 -> STRING_CTE . pn_Secuencial4 escritura3
    (49) ctes -> STRING_CTE . pn_CTEString
    (135) pn_Secuencial4 -> .
    (120) pn_CTEString -> .

  ! reduce/reduce conflict for COMMA resolved using rule 120 (pn_CTEString -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 120 (pn_CTEString -> .)
    MULT_OP         reduce using rule 120 (pn_CTEString -> .)
    DIV_OP          reduce using rule 120 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 120 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 120 (pn_CTEString -> .)
    LT_LOG          reduce using rule 120 (pn_CTEString -> .)
    GT_LOG          reduce using rule 120 (pn_CTEString -> .)
    LTE_LOG         reduce using rule 120 (pn_CTEString -> .)
    GTE_LOG         reduce using rule 120 (pn_CTEString -> .)
    NE_LOG          reduce using rule 120 (pn_CTEString -> .)
    EQUAL_LOG       reduce using rule 120 (pn_CTEString -> .)
    AND_LOG         reduce using rule 120 (pn_CTEString -> .)
    OR_LOG          reduce using rule 120 (pn_CTEString -> .)
    ASSIGN          reduce using rule 120 (pn_CTEString -> .)
    COMMA           reduce using rule 120 (pn_CTEString -> .)
    RPAREN          reduce using rule 120 (pn_CTEString -> .)

  ! COMMA           [ reduce using rule 135 (pn_Secuencial4 -> .) ]
  ! RPAREN          [ reduce using rule 135 (pn_Secuencial4 -> .) ]

    pn_Secuencial4                 shift and go to state 214
    pn_CTEString                   shift and go to state 155

state 174

    (71) escritura2 -> expresion . pn_Secuencial4 escritura3
    (135) pn_Secuencial4 -> .

    COMMA           reduce using rule 135 (pn_Secuencial4 -> .)
    RPAREN          reduce using rule 135 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 215

state 175

    (67) lectura -> LEE pn_Secuencial3 LPAREN varLectura . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 216


state 176

    (64) varLectura -> ID . pn_Expresion1 varDim varLectura2
    (121) pn_Expresion1 -> .

    LBRACK          reduce using rule 121 (pn_Expresion1 -> .)
    COMMA           reduce using rule 121 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 121 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 217

state 177

    (25) lista_parametros -> ID parDim COLON tipo lista_parametros2 .

    RPAREN          reduce using rule 25 (lista_parametros -> ID parDim COLON tipo lista_parametros2 .)


state 178

    (26) lista_parametros2 -> COMMA . lista_parametros
    (25) lista_parametros -> . ID parDim COLON tipo lista_parametros2

    ID              shift and go to state 54

    lista_parametros               shift and go to state 218

state 179

    (27) lista_parametros2 -> empty .

    RPAREN          reduce using rule 27 (lista_parametros2 -> empty .)


state 180

    (28) parDim -> LBRACK expresion parDim2 RBRACK .

    COLON           reduce using rule 28 (parDim -> LBRACK expresion parDim2 RBRACK .)


state 181

    (30) parDim2 -> COMMA expresion .

    RBRACK          reduce using rule 30 (parDim2 -> COMMA expresion .)


state 182

    (76) expresion1 -> ASSIGN expresion .

    COMMA           reduce using rule 76 (expresion1 -> ASSIGN expresion .)
    RBRACK          reduce using rule 76 (expresion1 -> ASSIGN expresion .)
    RPAREN          reduce using rule 76 (expresion1 -> ASSIGN expresion .)
    SEMIC           reduce using rule 76 (expresion1 -> ASSIGN expresion .)
    HASTA           reduce using rule 76 (expresion1 -> ASSIGN expresion .)
    HACER           reduce using rule 76 (expresion1 -> ASSIGN expresion .)


state 183

    (79) meg -> op_l pn_Expresion10 . mega_exp pn_Expresion11
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    mega_exp                       shift and go to state 219
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 184

    (84) sp -> op_r exp . pn_Expresion9
    (129) pn_Expresion9 -> .

    AND_LOG         reduce using rule 129 (pn_Expresion9 -> .)
    OR_LOG          reduce using rule 129 (pn_Expresion9 -> .)
    ASSIGN          reduce using rule 129 (pn_Expresion9 -> .)
    COMMA           reduce using rule 129 (pn_Expresion9 -> .)
    RBRACK          reduce using rule 129 (pn_Expresion9 -> .)
    RPAREN          reduce using rule 129 (pn_Expresion9 -> .)
    SEMIC           reduce using rule 129 (pn_Expresion9 -> .)
    HASTA           reduce using rule 129 (pn_Expresion9 -> .)
    HACER           reduce using rule 129 (pn_Expresion9 -> .)

    pn_Expresion9                  shift and go to state 220

state 185

    (86) op_r -> LT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 86 (op_r -> LT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 86 (op_r -> LT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 86 (op_r -> LT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 86 (op_r -> LT_LOG pn_Expresion8 .)
    ID              reduce using rule 86 (op_r -> LT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 86 (op_r -> LT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 86 (op_r -> LT_LOG pn_Expresion8 .)


state 186

    (87) op_r -> GT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 87 (op_r -> GT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 87 (op_r -> GT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 87 (op_r -> GT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 87 (op_r -> GT_LOG pn_Expresion8 .)
    ID              reduce using rule 87 (op_r -> GT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 87 (op_r -> GT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 87 (op_r -> GT_LOG pn_Expresion8 .)


state 187

    (88) op_r -> LTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 88 (op_r -> LTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 88 (op_r -> LTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 88 (op_r -> LTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 88 (op_r -> LTE_LOG pn_Expresion8 .)
    ID              reduce using rule 88 (op_r -> LTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 88 (op_r -> LTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 88 (op_r -> LTE_LOG pn_Expresion8 .)


state 188

    (89) op_r -> GTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 89 (op_r -> GTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 89 (op_r -> GTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 89 (op_r -> GTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 89 (op_r -> GTE_LOG pn_Expresion8 .)
    ID              reduce using rule 89 (op_r -> GTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 89 (op_r -> GTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 89 (op_r -> GTE_LOG pn_Expresion8 .)


state 189

    (90) op_r -> NE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 90 (op_r -> NE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 90 (op_r -> NE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 90 (op_r -> NE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 90 (op_r -> NE_LOG pn_Expresion8 .)
    ID              reduce using rule 90 (op_r -> NE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 90 (op_r -> NE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 90 (op_r -> NE_LOG pn_Expresion8 .)


state 190

    (91) op_r -> EQUAL_LOG pn_Expresion8 .

    LPAREN          reduce using rule 91 (op_r -> EQUAL_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 91 (op_r -> EQUAL_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 91 (op_r -> EQUAL_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 91 (op_r -> EQUAL_LOG pn_Expresion8 .)
    ID              reduce using rule 91 (op_r -> EQUAL_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 91 (op_r -> EQUAL_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 91 (op_r -> EQUAL_LOG pn_Expresion8 .)


state 191

    (92) exp -> termino pn_Expresion4 exp1 .

    LT_LOG          reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    GT_LOG          reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    LTE_LOG         reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    GTE_LOG         reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    NE_LOG          reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    EQUAL_LOG       reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    AND_LOG         reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    OR_LOG          reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    ASSIGN          reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    COMMA           reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    RBRACK          reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    RPAREN          reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    SEMIC           reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    HASTA           reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)
    HACER           reduce using rule 92 (exp -> termino pn_Expresion4 exp1 .)


state 192

    (93) exp1 -> op_a . exp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    exp                            shift and go to state 221
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 193

    (94) exp1 -> empty .

    LT_LOG          reduce using rule 94 (exp1 -> empty .)
    GT_LOG          reduce using rule 94 (exp1 -> empty .)
    LTE_LOG         reduce using rule 94 (exp1 -> empty .)
    GTE_LOG         reduce using rule 94 (exp1 -> empty .)
    NE_LOG          reduce using rule 94 (exp1 -> empty .)
    EQUAL_LOG       reduce using rule 94 (exp1 -> empty .)
    AND_LOG         reduce using rule 94 (exp1 -> empty .)
    OR_LOG          reduce using rule 94 (exp1 -> empty .)
    ASSIGN          reduce using rule 94 (exp1 -> empty .)
    COMMA           reduce using rule 94 (exp1 -> empty .)
    RBRACK          reduce using rule 94 (exp1 -> empty .)
    RPAREN          reduce using rule 94 (exp1 -> empty .)
    SEMIC           reduce using rule 94 (exp1 -> empty .)
    HASTA           reduce using rule 94 (exp1 -> empty .)
    HACER           reduce using rule 94 (exp1 -> empty .)


state 194

    (95) op_a -> PLUS_OP . pn_Expresion2
    (122) pn_Expresion2 -> .

    LPAREN          reduce using rule 122 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 122 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 122 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 122 (pn_Expresion2 -> .)
    ID              reduce using rule 122 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 122 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 122 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 222

state 195

    (96) op_a -> MINUS_OP . pn_Expresion2
    (122) pn_Expresion2 -> .

    LPAREN          reduce using rule 122 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 122 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 122 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 122 (pn_Expresion2 -> .)
    ID              reduce using rule 122 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 122 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 122 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 223

state 196

    (97) termino -> factor pn_Expresion5 term .

    PLUS_OP         reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    MINUS_OP        reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    LT_LOG          reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    GT_LOG          reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    LTE_LOG         reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    GTE_LOG         reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    NE_LOG          reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    EQUAL_LOG       reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    AND_LOG         reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    OR_LOG          reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    ASSIGN          reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    COMMA           reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    RBRACK          reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    RPAREN          reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    SEMIC           reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    HASTA           reduce using rule 97 (termino -> factor pn_Expresion5 term .)
    HACER           reduce using rule 97 (termino -> factor pn_Expresion5 term .)


state 197

    (98) term -> op_a1 . termino
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    termino                        shift and go to state 224
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 198

    (99) term -> empty .

    PLUS_OP         reduce using rule 99 (term -> empty .)
    MINUS_OP        reduce using rule 99 (term -> empty .)
    LT_LOG          reduce using rule 99 (term -> empty .)
    GT_LOG          reduce using rule 99 (term -> empty .)
    LTE_LOG         reduce using rule 99 (term -> empty .)
    GTE_LOG         reduce using rule 99 (term -> empty .)
    NE_LOG          reduce using rule 99 (term -> empty .)
    EQUAL_LOG       reduce using rule 99 (term -> empty .)
    AND_LOG         reduce using rule 99 (term -> empty .)
    OR_LOG          reduce using rule 99 (term -> empty .)
    ASSIGN          reduce using rule 99 (term -> empty .)
    COMMA           reduce using rule 99 (term -> empty .)
    RBRACK          reduce using rule 99 (term -> empty .)
    RPAREN          reduce using rule 99 (term -> empty .)
    SEMIC           reduce using rule 99 (term -> empty .)
    HASTA           reduce using rule 99 (term -> empty .)
    HACER           reduce using rule 99 (term -> empty .)


state 199

    (100) op_a1 -> MULT_OP . pn_Expresion3
    (123) pn_Expresion3 -> .

    LPAREN          reduce using rule 123 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 123 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 123 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 123 (pn_Expresion3 -> .)
    ID              reduce using rule 123 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 123 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 123 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 225

state 200

    (101) op_a1 -> DIV_OP . pn_Expresion3
    (123) pn_Expresion3 -> .

    LPAREN          reduce using rule 123 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 123 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 123 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 123 (pn_Expresion3 -> .)
    ID              reduce using rule 123 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 123 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 123 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 226

state 201

    (103) factor -> LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7

    RPAREN          shift and go to state 227


state 202

    (50) ctes -> MINUS_OP pn_CTENeg num .

    MULT_OP         reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    DIV_OP          reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    PLUS_OP         reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    MINUS_OP        reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    LT_LOG          reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    GT_LOG          reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    LTE_LOG         reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    GTE_LOG         reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    NE_LOG          reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    EQUAL_LOG       reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    AND_LOG         reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    OR_LOG          reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    ASSIGN          reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    COMMA           reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    RBRACK          reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    RPAREN          reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    SEMIC           reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    HASTA           reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)
    HACER           reduce using rule 50 (ctes -> MINUS_OP pn_CTENeg num .)


state 203

    (47) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC . pn_Secuencial2
    (133) pn_Secuencial2 -> .

    SI              reduce using rule 133 (pn_Secuencial2 -> .)
    REGRESA         reduce using rule 133 (pn_Secuencial2 -> .)
    MIENTRAS        reduce using rule 133 (pn_Secuencial2 -> .)
    DESDE           reduce using rule 133 (pn_Secuencial2 -> .)
    ID              reduce using rule 133 (pn_Secuencial2 -> .)
    ESCRIBE         reduce using rule 133 (pn_Secuencial2 -> .)
    LEE             reduce using rule 133 (pn_Secuencial2 -> .)
    RCURLY          reduce using rule 133 (pn_Secuencial2 -> .)

    pn_Secuencial2                 shift and go to state 228

state 204

    (59) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 . ENTONCES bloque else pn_Condicion2

    ENTONCES        shift and go to state 229


state 205

    (74) regresa -> REGRESA LPAREN variable RPAREN SEMIC .

    SI              reduce using rule 74 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    REGRESA         reduce using rule 74 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    MIENTRAS        reduce using rule 74 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    DESDE           reduce using rule 74 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    ID              reduce using rule 74 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    ESCRIBE         reduce using rule 74 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    LEE             reduce using rule 74 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    RCURLY          reduce using rule 74 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)


state 206

    (62) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN . pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (142) pn_loop_condicional2 -> .

    HACER           reduce using rule 142 (pn_loop_condicional2 -> .)

    pn_loop_condicional2           shift and go to state 230

state 207

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 . expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    variable                       shift and go to state 104
    expresion                      shift and go to state 231
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 208

    (68) llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .

    SI              reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    REGRESA         reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    MIENTRAS        reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    DESDE           reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    ID              reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    ESCRIBE         reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    LEE             reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    RCURLY          reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    MULT_OP         reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    DIV_OP          reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    PLUS_OP         reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    MINUS_OP        reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    LT_LOG          reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    GT_LOG          reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    LTE_LOG         reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    GTE_LOG         reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    NE_LOG          reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    EQUAL_LOG       reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    AND_LOG         reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    OR_LOG          reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    ASSIGN          reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    COMMA           reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    RBRACK          reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    RPAREN          reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    SEMIC           reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    HASTA           reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    HACER           reduce using rule 68 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)


state 209

    (33) llamada_param2 -> COMMA expresion .

    RPAREN          reduce using rule 33 (llamada_param2 -> COMMA expresion .)


state 210

    (55) varDim -> LBRACK expresion varDim2 . RBRACK

    RBRACK          shift and go to state 232


state 211

    (57) varDim2 -> COMMA . expresion
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 233
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 212

    (58) varDim2 -> empty .

    RBRACK          reduce using rule 58 (varDim2 -> empty .)


state 213

    (69) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 234


state 214

    (70) escritura2 -> STRING_CTE pn_Secuencial4 . escritura3
    (72) escritura3 -> . COMMA escritura2
    (73) escritura3 -> . empty
    (106) empty -> .

    COMMA           shift and go to state 236
    RPAREN          reduce using rule 106 (empty -> .)

    escritura3                     shift and go to state 235
    empty                          shift and go to state 237

state 215

    (71) escritura2 -> expresion pn_Secuencial4 . escritura3
    (72) escritura3 -> . COMMA escritura2
    (73) escritura3 -> . empty
    (106) empty -> .

    COMMA           shift and go to state 236
    RPAREN          reduce using rule 106 (empty -> .)

    escritura3                     shift and go to state 238
    empty                          shift and go to state 237

state 216

    (67) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 239


state 217

    (64) varLectura -> ID pn_Expresion1 . varDim varLectura2
    (55) varDim -> . LBRACK expresion varDim2 RBRACK
    (56) varDim -> . empty
    (106) empty -> .

    LBRACK          shift and go to state 126
    COMMA           reduce using rule 106 (empty -> .)
    RPAREN          reduce using rule 106 (empty -> .)

    varDim                         shift and go to state 240
    empty                          shift and go to state 127

state 218

    (26) lista_parametros2 -> COMMA lista_parametros .

    RPAREN          reduce using rule 26 (lista_parametros2 -> COMMA lista_parametros .)


state 219

    (79) meg -> op_l pn_Expresion10 mega_exp . pn_Expresion11
    (131) pn_Expresion11 -> .

    ASSIGN          reduce using rule 131 (pn_Expresion11 -> .)
    COMMA           reduce using rule 131 (pn_Expresion11 -> .)
    RBRACK          reduce using rule 131 (pn_Expresion11 -> .)
    RPAREN          reduce using rule 131 (pn_Expresion11 -> .)
    SEMIC           reduce using rule 131 (pn_Expresion11 -> .)
    HASTA           reduce using rule 131 (pn_Expresion11 -> .)
    HACER           reduce using rule 131 (pn_Expresion11 -> .)

    pn_Expresion11                 shift and go to state 241

state 220

    (84) sp -> op_r exp pn_Expresion9 .

    AND_LOG         reduce using rule 84 (sp -> op_r exp pn_Expresion9 .)
    OR_LOG          reduce using rule 84 (sp -> op_r exp pn_Expresion9 .)
    ASSIGN          reduce using rule 84 (sp -> op_r exp pn_Expresion9 .)
    COMMA           reduce using rule 84 (sp -> op_r exp pn_Expresion9 .)
    RBRACK          reduce using rule 84 (sp -> op_r exp pn_Expresion9 .)
    RPAREN          reduce using rule 84 (sp -> op_r exp pn_Expresion9 .)
    SEMIC           reduce using rule 84 (sp -> op_r exp pn_Expresion9 .)
    HASTA           reduce using rule 84 (sp -> op_r exp pn_Expresion9 .)
    HACER           reduce using rule 84 (sp -> op_r exp pn_Expresion9 .)


state 221

    (93) exp1 -> op_a exp .

    LT_LOG          reduce using rule 93 (exp1 -> op_a exp .)
    GT_LOG          reduce using rule 93 (exp1 -> op_a exp .)
    LTE_LOG         reduce using rule 93 (exp1 -> op_a exp .)
    GTE_LOG         reduce using rule 93 (exp1 -> op_a exp .)
    NE_LOG          reduce using rule 93 (exp1 -> op_a exp .)
    EQUAL_LOG       reduce using rule 93 (exp1 -> op_a exp .)
    AND_LOG         reduce using rule 93 (exp1 -> op_a exp .)
    OR_LOG          reduce using rule 93 (exp1 -> op_a exp .)
    ASSIGN          reduce using rule 93 (exp1 -> op_a exp .)
    COMMA           reduce using rule 93 (exp1 -> op_a exp .)
    RBRACK          reduce using rule 93 (exp1 -> op_a exp .)
    RPAREN          reduce using rule 93 (exp1 -> op_a exp .)
    SEMIC           reduce using rule 93 (exp1 -> op_a exp .)
    HASTA           reduce using rule 93 (exp1 -> op_a exp .)
    HACER           reduce using rule 93 (exp1 -> op_a exp .)


state 222

    (95) op_a -> PLUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 95 (op_a -> PLUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 95 (op_a -> PLUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 95 (op_a -> PLUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 95 (op_a -> PLUS_OP pn_Expresion2 .)
    ID              reduce using rule 95 (op_a -> PLUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 95 (op_a -> PLUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 95 (op_a -> PLUS_OP pn_Expresion2 .)


state 223

    (96) op_a -> MINUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 96 (op_a -> MINUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 96 (op_a -> MINUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 96 (op_a -> MINUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 96 (op_a -> MINUS_OP pn_Expresion2 .)
    ID              reduce using rule 96 (op_a -> MINUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 96 (op_a -> MINUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 96 (op_a -> MINUS_OP pn_Expresion2 .)


state 224

    (98) term -> op_a1 termino .

    PLUS_OP         reduce using rule 98 (term -> op_a1 termino .)
    MINUS_OP        reduce using rule 98 (term -> op_a1 termino .)
    LT_LOG          reduce using rule 98 (term -> op_a1 termino .)
    GT_LOG          reduce using rule 98 (term -> op_a1 termino .)
    LTE_LOG         reduce using rule 98 (term -> op_a1 termino .)
    GTE_LOG         reduce using rule 98 (term -> op_a1 termino .)
    NE_LOG          reduce using rule 98 (term -> op_a1 termino .)
    EQUAL_LOG       reduce using rule 98 (term -> op_a1 termino .)
    AND_LOG         reduce using rule 98 (term -> op_a1 termino .)
    OR_LOG          reduce using rule 98 (term -> op_a1 termino .)
    ASSIGN          reduce using rule 98 (term -> op_a1 termino .)
    COMMA           reduce using rule 98 (term -> op_a1 termino .)
    RBRACK          reduce using rule 98 (term -> op_a1 termino .)
    RPAREN          reduce using rule 98 (term -> op_a1 termino .)
    SEMIC           reduce using rule 98 (term -> op_a1 termino .)
    HASTA           reduce using rule 98 (term -> op_a1 termino .)
    HACER           reduce using rule 98 (term -> op_a1 termino .)


state 225

    (100) op_a1 -> MULT_OP pn_Expresion3 .

    LPAREN          reduce using rule 100 (op_a1 -> MULT_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 100 (op_a1 -> MULT_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 100 (op_a1 -> MULT_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 100 (op_a1 -> MULT_OP pn_Expresion3 .)
    ID              reduce using rule 100 (op_a1 -> MULT_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 100 (op_a1 -> MULT_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 100 (op_a1 -> MULT_OP pn_Expresion3 .)


state 226

    (101) op_a1 -> DIV_OP pn_Expresion3 .

    LPAREN          reduce using rule 101 (op_a1 -> DIV_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 101 (op_a1 -> DIV_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 101 (op_a1 -> DIV_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 101 (op_a1 -> DIV_OP pn_Expresion3 .)
    ID              reduce using rule 101 (op_a1 -> DIV_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 101 (op_a1 -> DIV_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 101 (op_a1 -> DIV_OP pn_Expresion3 .)


state 227

    (103) factor -> LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7
    (127) pn_Expresion7 -> .

    MULT_OP         reduce using rule 127 (pn_Expresion7 -> .)
    DIV_OP          reduce using rule 127 (pn_Expresion7 -> .)
    PLUS_OP         reduce using rule 127 (pn_Expresion7 -> .)
    MINUS_OP        reduce using rule 127 (pn_Expresion7 -> .)
    LT_LOG          reduce using rule 127 (pn_Expresion7 -> .)
    GT_LOG          reduce using rule 127 (pn_Expresion7 -> .)
    LTE_LOG         reduce using rule 127 (pn_Expresion7 -> .)
    GTE_LOG         reduce using rule 127 (pn_Expresion7 -> .)
    NE_LOG          reduce using rule 127 (pn_Expresion7 -> .)
    EQUAL_LOG       reduce using rule 127 (pn_Expresion7 -> .)
    AND_LOG         reduce using rule 127 (pn_Expresion7 -> .)
    OR_LOG          reduce using rule 127 (pn_Expresion7 -> .)
    ASSIGN          reduce using rule 127 (pn_Expresion7 -> .)
    COMMA           reduce using rule 127 (pn_Expresion7 -> .)
    RBRACK          reduce using rule 127 (pn_Expresion7 -> .)
    RPAREN          reduce using rule 127 (pn_Expresion7 -> .)
    SEMIC           reduce using rule 127 (pn_Expresion7 -> .)
    HASTA           reduce using rule 127 (pn_Expresion7 -> .)
    HACER           reduce using rule 127 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 242

state 228

    (47) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .

    SI              reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    REGRESA         reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    MIENTRAS        reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    DESDE           reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ID              reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ESCRIBE         reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    LEE             reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    RCURLY          reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)


state 229

    (59) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES . bloque else pn_Condicion2
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 243

state 230

    (62) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 . HACER bloque pn_loop_condicional3

    HACER           shift and go to state 244


state 231

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion . pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (145) pn_loop_no_condicional2 -> .

    HASTA           reduce using rule 145 (pn_loop_no_condicional2 -> .)

    pn_loop_no_condicional2        shift and go to state 245

state 232

    (55) varDim -> LBRACK expresion varDim2 RBRACK .

    ASSIGN          reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    MULT_OP         reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    DIV_OP          reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    PLUS_OP         reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    MINUS_OP        reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    LT_LOG          reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    GT_LOG          reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    LTE_LOG         reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    GTE_LOG         reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    NE_LOG          reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    EQUAL_LOG       reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    AND_LOG         reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    OR_LOG          reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    COMMA           reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    RBRACK          reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    RPAREN          reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    SEMIC           reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    HASTA           reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)
    HACER           reduce using rule 55 (varDim -> LBRACK expresion varDim2 RBRACK .)


state 233

    (57) varDim2 -> COMMA expresion .

    RBRACK          reduce using rule 57 (varDim2 -> COMMA expresion .)


state 234

    (69) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC . pn_Secuencial5
    (136) pn_Secuencial5 -> .

    SI              reduce using rule 136 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 136 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 136 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 136 (pn_Secuencial5 -> .)
    ID              reduce using rule 136 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 136 (pn_Secuencial5 -> .)
    LEE             reduce using rule 136 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 136 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 246

state 235

    (70) escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 70 (escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .)


state 236

    (72) escritura3 -> COMMA . escritura2
    (70) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (71) escritura2 -> . expresion pn_Secuencial4 escritura3
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 173
    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    escritura2                     shift and go to state 247
    expresion                      shift and go to state 174
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 237

    (73) escritura3 -> empty .

    RPAREN          reduce using rule 73 (escritura3 -> empty .)


state 238

    (71) escritura2 -> expresion pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 71 (escritura2 -> expresion pn_Secuencial4 escritura3 .)


state 239

    (67) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC . pn_Secuencial5
    (136) pn_Secuencial5 -> .

    SI              reduce using rule 136 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 136 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 136 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 136 (pn_Secuencial5 -> .)
    ID              reduce using rule 136 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 136 (pn_Secuencial5 -> .)
    LEE             reduce using rule 136 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 136 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 248

state 240

    (64) varLectura -> ID pn_Expresion1 varDim . varLectura2
    (65) varLectura2 -> . COMMA pn_Secuencial4 varLectura
    (66) varLectura2 -> . empty pn_Secuencial4
    (106) empty -> .

    COMMA           shift and go to state 250
    RPAREN          reduce using rule 106 (empty -> .)

    varLectura2                    shift and go to state 249
    empty                          shift and go to state 251

state 241

    (79) meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .

    ASSIGN          reduce using rule 79 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    COMMA           reduce using rule 79 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    RBRACK          reduce using rule 79 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    RPAREN          reduce using rule 79 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    SEMIC           reduce using rule 79 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    HASTA           reduce using rule 79 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    HACER           reduce using rule 79 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)


state 242

    (103) factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .

    MULT_OP         reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    DIV_OP          reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    PLUS_OP         reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    MINUS_OP        reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LT_LOG          reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GT_LOG          reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LTE_LOG         reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GTE_LOG         reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    NE_LOG          reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    EQUAL_LOG       reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    AND_LOG         reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    OR_LOG          reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    ASSIGN          reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    COMMA           reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RBRACK          reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RPAREN          reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    SEMIC           reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HASTA           reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HACER           reduce using rule 103 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)


state 243

    (59) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque . else pn_Condicion2
    (60) else -> . SINO pn_Condicion3 bloque
    (61) else -> . empty
    (106) empty -> .

    SINO            shift and go to state 253
    SI              reduce using rule 106 (empty -> .)
    REGRESA         reduce using rule 106 (empty -> .)
    MIENTRAS        reduce using rule 106 (empty -> .)
    DESDE           reduce using rule 106 (empty -> .)
    ID              reduce using rule 106 (empty -> .)
    ESCRIBE         reduce using rule 106 (empty -> .)
    LEE             reduce using rule 106 (empty -> .)
    RCURLY          reduce using rule 106 (empty -> .)

    else                           shift and go to state 252
    empty                          shift and go to state 254

state 244

    (62) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER . bloque pn_loop_condicional3
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 255

state 245

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 . HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    HASTA           shift and go to state 256


state 246

    (69) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 69 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 69 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 69 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 69 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 69 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 69 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 69 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 69 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)


state 247

    (72) escritura3 -> COMMA escritura2 .

    RPAREN          reduce using rule 72 (escritura3 -> COMMA escritura2 .)


state 248

    (67) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 67 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 67 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 67 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 67 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 67 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 67 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 67 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 67 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)


state 249

    (64) varLectura -> ID pn_Expresion1 varDim varLectura2 .

    RPAREN          reduce using rule 64 (varLectura -> ID pn_Expresion1 varDim varLectura2 .)


state 250

    (65) varLectura2 -> COMMA . pn_Secuencial4 varLectura
    (135) pn_Secuencial4 -> .

    ID              reduce using rule 135 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 257

state 251

    (66) varLectura2 -> empty . pn_Secuencial4
    (135) pn_Secuencial4 -> .

    RPAREN          reduce using rule 135 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 258

state 252

    (59) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else . pn_Condicion2
    (139) pn_Condicion2 -> .

    SI              reduce using rule 139 (pn_Condicion2 -> .)
    REGRESA         reduce using rule 139 (pn_Condicion2 -> .)
    MIENTRAS        reduce using rule 139 (pn_Condicion2 -> .)
    DESDE           reduce using rule 139 (pn_Condicion2 -> .)
    ID              reduce using rule 139 (pn_Condicion2 -> .)
    ESCRIBE         reduce using rule 139 (pn_Condicion2 -> .)
    LEE             reduce using rule 139 (pn_Condicion2 -> .)
    RCURLY          reduce using rule 139 (pn_Condicion2 -> .)

    pn_Condicion2                  shift and go to state 259

state 253

    (60) else -> SINO . pn_Condicion3 bloque
    (140) pn_Condicion3 -> .

    LCURLY          reduce using rule 140 (pn_Condicion3 -> .)

    pn_Condicion3                  shift and go to state 260

state 254

    (61) else -> empty .

    SI              reduce using rule 61 (else -> empty .)
    REGRESA         reduce using rule 61 (else -> empty .)
    MIENTRAS        reduce using rule 61 (else -> empty .)
    DESDE           reduce using rule 61 (else -> empty .)
    ID              reduce using rule 61 (else -> empty .)
    ESCRIBE         reduce using rule 61 (else -> empty .)
    LEE             reduce using rule 61 (else -> empty .)
    RCURLY          reduce using rule 61 (else -> empty .)


state 255

    (62) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque . pn_loop_condicional3
    (143) pn_loop_condicional3 -> .

    SI              reduce using rule 143 (pn_loop_condicional3 -> .)
    REGRESA         reduce using rule 143 (pn_loop_condicional3 -> .)
    MIENTRAS        reduce using rule 143 (pn_loop_condicional3 -> .)
    DESDE           reduce using rule 143 (pn_loop_condicional3 -> .)
    ID              reduce using rule 143 (pn_loop_condicional3 -> .)
    ESCRIBE         reduce using rule 143 (pn_loop_condicional3 -> .)
    LEE             reduce using rule 143 (pn_loop_condicional3 -> .)
    RCURLY          reduce using rule 143 (pn_loop_condicional3 -> .)

    pn_loop_condicional3           shift and go to state 261

state 256

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA . pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (146) pn_loop_no_condicional3 -> .

    LPAREN          reduce using rule 146 (pn_loop_no_condicional3 -> .)
    CHAR_CTE        reduce using rule 146 (pn_loop_no_condicional3 -> .)
    STRING_CTE      reduce using rule 146 (pn_loop_no_condicional3 -> .)
    MINUS_OP        reduce using rule 146 (pn_loop_no_condicional3 -> .)
    ID              reduce using rule 146 (pn_loop_no_condicional3 -> .)
    INT_CTE         reduce using rule 146 (pn_loop_no_condicional3 -> .)
    FLOAT_CTE       reduce using rule 146 (pn_loop_no_condicional3 -> .)

    pn_loop_no_condicional3        shift and go to state 262

state 257

    (65) varLectura2 -> COMMA pn_Secuencial4 . varLectura
    (64) varLectura -> . ID pn_Expresion1 varDim varLectura2

    ID              shift and go to state 176

    varLectura                     shift and go to state 263

state 258

    (66) varLectura2 -> empty pn_Secuencial4 .

    RPAREN          reduce using rule 66 (varLectura2 -> empty pn_Secuencial4 .)


state 259

    (59) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .

    SI              reduce using rule 59 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    REGRESA         reduce using rule 59 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    MIENTRAS        reduce using rule 59 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    DESDE           reduce using rule 59 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ID              reduce using rule 59 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ESCRIBE         reduce using rule 59 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    LEE             reduce using rule 59 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    RCURLY          reduce using rule 59 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)


state 260

    (60) else -> SINO pn_Condicion3 . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 264

state 261

    (62) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .

    SI              reduce using rule 62 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    REGRESA         reduce using rule 62 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    MIENTRAS        reduce using rule 62 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    DESDE           reduce using rule 62 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ID              reduce using rule 62 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ESCRIBE         reduce using rule 62 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    LEE             reduce using rule 62 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    RCURLY          reduce using rule 62 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)


state 262

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 . expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (75) expresion -> . mega_exp expresion1
    (78) mega_exp -> . super_exp meg
    (83) super_exp -> . exp sp
    (92) exp -> . termino pn_Expresion4 exp1
    (97) termino -> . factor pn_Expresion5 term
    (102) factor -> . ctes
    (103) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (104) factor -> . variable
    (105) factor -> . llamada_funcion
    (48) ctes -> . CHAR_CTE pn_CTEChar
    (49) ctes -> . STRING_CTE pn_CTEString
    (50) ctes -> . MINUS_OP pn_CTENeg num
    (51) ctes -> . num
    (54) variable -> . ID pn_Expresion1 varDim
    (68) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (52) num -> . INT_CTE pn_CTEInt
    (53) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 103
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    variable                       shift and go to state 104
    expresion                      shift and go to state 265
    mega_exp                       shift and go to state 97
    super_exp                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    ctes                           shift and go to state 102
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 263

    (65) varLectura2 -> COMMA pn_Secuencial4 varLectura .

    RPAREN          reduce using rule 65 (varLectura2 -> COMMA pn_Secuencial4 varLectura .)


state 264

    (60) else -> SINO pn_Condicion3 bloque .

    SI              reduce using rule 60 (else -> SINO pn_Condicion3 bloque .)
    REGRESA         reduce using rule 60 (else -> SINO pn_Condicion3 bloque .)
    MIENTRAS        reduce using rule 60 (else -> SINO pn_Condicion3 bloque .)
    DESDE           reduce using rule 60 (else -> SINO pn_Condicion3 bloque .)
    ID              reduce using rule 60 (else -> SINO pn_Condicion3 bloque .)
    ESCRIBE         reduce using rule 60 (else -> SINO pn_Condicion3 bloque .)
    LEE             reduce using rule 60 (else -> SINO pn_Condicion3 bloque .)
    RCURLY          reduce using rule 60 (else -> SINO pn_Condicion3 bloque .)


state 265

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion . pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (147) pn_loop_no_condicional4 -> .

    HACER           reduce using rule 147 (pn_loop_no_condicional4 -> .)

    pn_loop_no_condicional4        shift and go to state 266

state 266

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 . HACER bloque pn_loop_no_condicional5

    HACER           shift and go to state 267


state 267

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER . bloque pn_loop_no_condicional5
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 268

state 268

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque . pn_loop_no_condicional5
    (148) pn_loop_no_condicional5 -> .

    SI              reduce using rule 148 (pn_loop_no_condicional5 -> .)
    REGRESA         reduce using rule 148 (pn_loop_no_condicional5 -> .)
    MIENTRAS        reduce using rule 148 (pn_loop_no_condicional5 -> .)
    DESDE           reduce using rule 148 (pn_loop_no_condicional5 -> .)
    ID              reduce using rule 148 (pn_loop_no_condicional5 -> .)
    ESCRIBE         reduce using rule 148 (pn_loop_no_condicional5 -> .)
    LEE             reduce using rule 148 (pn_loop_no_condicional5 -> .)
    RCURLY          reduce using rule 148 (pn_loop_no_condicional5 -> .)

    pn_loop_no_condicional5        shift and go to state 269

state 269

    (63) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .

    SI              reduce using rule 63 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    REGRESA         reduce using rule 63 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    MIENTRAS        reduce using rule 63 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    DESDE           reduce using rule 63 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ID              reduce using rule 63 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ESCRIBE         reduce using rule 63 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    LEE             reduce using rule 63 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    RCURLY          reduce using rule 63 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT_TYPE in state 34 resolved as shift
WARNING: shift/reduce conflict for CHAR_TYPE in state 34 resolved as shift
WARNING: shift/reduce conflict for FLOAT_TYPE in state 34 resolved as shift
WARNING: reduce/reduce conflict in state 173 resolved using rule (pn_CTEString -> <empty>)
WARNING: rejected rule (pn_Secuencial4 -> <empty>) in state 173
