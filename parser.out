Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    NEW_LINE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal
Rule 2     dec_variables -> VARIABLES dec_variables2
Rule 3     dec_variables -> empty
Rule 4     dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3
Rule 5     dec_variables3 -> dec_variables2
Rule 6     dec_variables3 -> empty
Rule 7     lista_ids -> ID pn_AddVariable DecVarDim lista_ids2
Rule 8     lista_ids2 -> COMMA lista_ids
Rule 9     lista_ids2 -> empty
Rule 10    DecVarDim -> DecVarDim2 pn_VarDim
Rule 11    DecVarDim -> empty
Rule 12    DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
Rule 13    DecVarDim3 -> COMMA INT_CTE
Rule 14    DecVarDim3 -> empty
Rule 15    tipo -> INT_TYPE pn_SetCurrentType
Rule 16    tipo -> CHAR_TYPE pn_SetCurrentType
Rule 17    tipo -> FLOAT_TYPE pn_SetCurrentType
Rule 18    dec_funciones -> dec_funciones2 dec_funciones
Rule 19    dec_funciones -> empty
Rule 20    dec_funciones2 -> tipo dec_funciones3
Rule 21    dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3
Rule 22    dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque
Rule 23    dec_funcion_param -> lista_parametros
Rule 24    dec_funcion_param -> empty
Rule 25    lista_parametros -> ID parDim COLON tipo lista_parametros2
Rule 26    lista_parametros2 -> COMMA lista_parametros
Rule 27    lista_parametros2 -> empty
Rule 28    parDim -> LBRACK expresion parDim2 RBRACK
Rule 29    parDim -> empty
Rule 30    parDim2 -> COMMA expresion
Rule 31    parDim2 -> empty
Rule 32    llamada_param -> expresion llamada_param2
Rule 33    llamada_param2 -> COMMA expresion
Rule 34    llamada_param2 -> empty
Rule 35    principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque
Rule 36    bloque -> LCURLY estatutos RCURLY
Rule 37    estatutos -> estatuto estatutos
Rule 38    estatutos -> empty
Rule 39    estatuto -> asignacion
Rule 40    estatuto -> condicion
Rule 41    estatuto -> regresa
Rule 42    estatuto -> loop_condicional
Rule 43    estatuto -> loop_no_condicional
Rule 44    estatuto -> llamada_funcion
Rule 45    estatuto -> escritura
Rule 46    estatuto -> lectura
Rule 47    asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
Rule 48    ctes -> INT_CTE
Rule 49    ctes -> FLOAT_CTE
Rule 50    ctes -> CHAR_CTE
Rule 51    variable -> ID pn_Expresion1 varDim
Rule 52    varDim -> LBRACK expresion varDim2 RBRACK
Rule 53    varDim -> empty
Rule 54    varDim2 -> COMMA expresion
Rule 55    varDim2 -> empty
Rule 56    condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else
Rule 57    else -> SINO bloque
Rule 58    else -> empty
Rule 59    loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque
Rule 60    loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque
Rule 61    varLectura -> ID pn_Expresion1 varDim varLectura2
Rule 62    varLectura2 -> COMMA pn_Secuencial4 varLectura
Rule 63    varLectura2 -> empty pn_Secuencial4
Rule 64    lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
Rule 65    llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC
Rule 66    escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
Rule 67    escritura2 -> STRING_CTE pn_Secuencial4 escritura3
Rule 68    escritura2 -> expresion pn_Secuencial4 escritura3
Rule 69    escritura3 -> COMMA escritura2
Rule 70    escritura3 -> empty
Rule 71    regresa -> REGRESA LPAREN variable RPAREN SEMIC
Rule 72    expresion -> mega_exp expresion1
Rule 73    expresion1 -> ASSIGN expresion
Rule 74    expresion1 -> empty
Rule 75    mega_exp -> super_exp meg
Rule 76    meg -> op_l mega_exp
Rule 77    meg -> empty
Rule 78    op_l -> AND_LOG
Rule 79    op_l -> OR_LOG
Rule 80    super_exp -> exp sp
Rule 81    sp -> op_r exp
Rule 82    sp -> empty
Rule 83    op_r -> LT_LOG
Rule 84    op_r -> GT_LOG
Rule 85    op_r -> LTE_LOG
Rule 86    op_r -> GTE_LOG
Rule 87    op_r -> NE_LOG
Rule 88    op_r -> EQUAL_LOG
Rule 89    exp -> termino exp1
Rule 90    exp1 -> op_a exp
Rule 91    exp1 -> empty
Rule 92    op_a -> PLUS_OP
Rule 93    op_a -> MINUS_OP
Rule 94    termino -> factor term
Rule 95    term -> op_a1 termino
Rule 96    term -> empty
Rule 97    op_a1 -> MULT_OP
Rule 98    op_a1 -> DIV_OP
Rule 99    factor -> ctes
Rule 100   factor -> LPAREN exp RPAREN
Rule 101   factor -> variable
Rule 102   factor -> llamada_funcion
Rule 103   empty -> <empty>
Rule 104   pn_GOTOprincipal -> <empty>
Rule 105   pn_Principal1 -> <empty>
Rule 106   pn_GOTOprincipal2 -> <empty>
Rule 107   pn_Secuencial1 -> <empty>
Rule 108   pn_Secuencial2 -> <empty>
Rule 109   pn_Expresion1 -> <empty>
Rule 110   pn_Secuencial3 -> <empty>
Rule 111   pn_Secuencial4 -> <empty>
Rule 112   pn_Secuencial5 -> <empty>
Rule 113   pn_SetCurrentType -> <empty>
Rule 114   pn_AddVariable -> <empty>
Rule 115   pn_VarDim2 -> <empty>
Rule 116   pn_VarDim3 -> <empty>
Rule 117   pn_VarDim4 -> <empty>
Rule 118   pn_VarDim -> <empty>
Rule 119   pn_AddFunc -> <empty>

Terminals, with rules where they appear

AND_LOG              : 78
ASSIGN               : 47 60 73
CHAR_CTE             : 50
CHAR_TYPE            : 16
COLON                : 4 25
COMMA                : 8 13 26 30 33 54 62 69
COMMENT              : 
DESDE                : 60
DIV_OP               : 98
ENTONCES             : 56
EQUAL_LOG            : 88
ESCRIBE              : 66
FLOAT_CTE            : 49
FLOAT_TYPE           : 17
FUNCION              : 22
GTE_LOG              : 86
GT_LOG               : 84
HACER                : 59 60
HASTA                : 60
ID                   : 1 7 22 25 51 61 65
INT_CTE              : 12 13 48
INT_TYPE             : 15
LBRACK               : 12 28 52
LCURLY               : 36
LEE                  : 64
LPAREN               : 22 35 56 59 64 65 66 71 100
LTE_LOG              : 85
LT_LOG               : 83
MIENTRAS             : 59
MINUS_OP             : 93
MULT_OP              : 97
NEW_LINE             : 
NE_LOG               : 87
OR_LOG               : 79
PLUS_OP              : 92
PRINCIPAL            : 35
PROGRAMA             : 1
RBRACK               : 12 28 52
RCURLY               : 36
REGRESA              : 71
RPAREN               : 22 35 56 59 64 65 66 71 100
SEMIC                : 1 4 47 64 65 66 71
SI                   : 56
SINO                 : 57
STRING_CTE           : 67
VARIABLES            : 2
VOID                 : 21
error                : 

Nonterminals, with rules where they appear

DecVarDim            : 7
DecVarDim2           : 10
DecVarDim3           : 12
asignacion           : 39
bloque               : 22 35 56 57 59 60
condicion            : 40
ctes                 : 99
dec_funcion_param    : 22
dec_funciones        : 1 18
dec_funciones2       : 18
dec_funciones3       : 20 21
dec_variables        : 1 22
dec_variables2       : 2 5
dec_variables3       : 4
else                 : 56
empty                : 3 6 9 11 14 19 24 27 29 31 34 38 53 55 58 63 70 74 77 82 91 96
escritura            : 45
escritura2           : 66 69
escritura3           : 67 68
estatuto             : 37
estatutos            : 36 37
exp                  : 80 81 90 100
exp1                 : 89
expresion            : 28 30 32 33 47 52 54 56 59 60 60 68 73
expresion1           : 72
factor               : 94
lectura              : 46
lista_ids            : 4 8
lista_ids2           : 7
lista_parametros     : 23 26
lista_parametros2    : 25
llamada_funcion      : 44 102
llamada_param        : 65
llamada_param2       : 32
loop_condicional     : 42
loop_no_condicional  : 43
meg                  : 75
mega_exp             : 72 76
op_a                 : 90
op_a1                : 95
op_l                 : 76
op_r                 : 81
parDim               : 25
parDim2              : 28
pn_AddFunc           : 22
pn_AddVariable       : 7
pn_Expresion1        : 51 61
pn_GOTOprincipal     : 1
pn_GOTOprincipal2    : 
pn_Principal1        : 35
pn_Secuencial1       : 47
pn_Secuencial2       : 47
pn_Secuencial3       : 64 66
pn_Secuencial4       : 62 63 67 68
pn_Secuencial5       : 64 66
pn_SetCurrentType    : 15 16 17 21
pn_VarDim            : 10
pn_VarDim2           : 12
pn_VarDim3           : 12
pn_VarDim4           : 
principal            : 1
programa             : 0
regresa              : 41
sp                   : 80
super_exp            : 75
term                 : 94
termino              : 89 95
tipo                 : 4 20 25
varDim               : 51 61
varDim2              : 52
varLectura           : 62 64
varLectura2          : 61
variable             : 47 60 71 101

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    SEMIC           shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMIC . dec_variables pn_GOTOprincipal dec_funciones principal
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (103) empty -> .

    VARIABLES       shift and go to state 6
    VOID            reduce using rule 103 (empty -> .)
    INT_TYPE        reduce using rule 103 (empty -> .)
    CHAR_TYPE       reduce using rule 103 (empty -> .)
    FLOAT_TYPE      reduce using rule 103 (empty -> .)
    PRINCIPAL       reduce using rule 103 (empty -> .)

    dec_variables                  shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMIC dec_variables . pn_GOTOprincipal dec_funciones principal
    (104) pn_GOTOprincipal -> .

    VOID            reduce using rule 104 (pn_GOTOprincipal -> .)
    INT_TYPE        reduce using rule 104 (pn_GOTOprincipal -> .)
    CHAR_TYPE       reduce using rule 104 (pn_GOTOprincipal -> .)
    FLOAT_TYPE      reduce using rule 104 (pn_GOTOprincipal -> .)
    PRINCIPAL       reduce using rule 104 (pn_GOTOprincipal -> .)

    pn_GOTOprincipal               shift and go to state 8

state 6

    (2) dec_variables -> VARIABLES . dec_variables2
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_variables2                 shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (3) dec_variables -> empty .

    VOID            reduce using rule 3 (dec_variables -> empty .)
    INT_TYPE        reduce using rule 3 (dec_variables -> empty .)
    CHAR_TYPE       reduce using rule 3 (dec_variables -> empty .)
    FLOAT_TYPE      reduce using rule 3 (dec_variables -> empty .)
    PRINCIPAL       reduce using rule 3 (dec_variables -> empty .)
    LCURLY          reduce using rule 3 (dec_variables -> empty .)


state 8

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal . dec_funciones principal
    (18) dec_funciones -> . dec_funciones2 dec_funciones
    (19) dec_funciones -> . empty
    (20) dec_funciones2 -> . tipo dec_funciones3
    (21) dec_funciones2 -> . VOID pn_SetCurrentType dec_funciones3
    (103) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 18
    PRINCIPAL       reduce using rule 103 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_funciones                  shift and go to state 14
    dec_funciones2                 shift and go to state 15
    empty                          shift and go to state 16
    tipo                           shift and go to state 17

state 9

    (2) dec_variables -> VARIABLES dec_variables2 .

    VOID            reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    INT_TYPE        reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    CHAR_TYPE       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    FLOAT_TYPE      reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    PRINCIPAL       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    LCURLY          reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)


state 10

    (4) dec_variables2 -> tipo . COLON lista_ids SEMIC dec_variables3

    COLON           shift and go to state 19


state 11

    (15) tipo -> INT_TYPE . pn_SetCurrentType
    (113) pn_SetCurrentType -> .

    COLON           reduce using rule 113 (pn_SetCurrentType -> .)
    FUNCION         reduce using rule 113 (pn_SetCurrentType -> .)
    COMMA           reduce using rule 113 (pn_SetCurrentType -> .)
    RPAREN          reduce using rule 113 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 20

state 12

    (16) tipo -> CHAR_TYPE . pn_SetCurrentType
    (113) pn_SetCurrentType -> .

    COLON           reduce using rule 113 (pn_SetCurrentType -> .)
    FUNCION         reduce using rule 113 (pn_SetCurrentType -> .)
    COMMA           reduce using rule 113 (pn_SetCurrentType -> .)
    RPAREN          reduce using rule 113 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 21

state 13

    (17) tipo -> FLOAT_TYPE . pn_SetCurrentType
    (113) pn_SetCurrentType -> .

    COLON           reduce using rule 113 (pn_SetCurrentType -> .)
    FUNCION         reduce using rule 113 (pn_SetCurrentType -> .)
    COMMA           reduce using rule 113 (pn_SetCurrentType -> .)
    RPAREN          reduce using rule 113 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 22

state 14

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones . principal
    (35) principal -> . PRINCIPAL pn_Principal1 LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 24

    principal                      shift and go to state 23

state 15

    (18) dec_funciones -> dec_funciones2 . dec_funciones
    (18) dec_funciones -> . dec_funciones2 dec_funciones
    (19) dec_funciones -> . empty
    (20) dec_funciones2 -> . tipo dec_funciones3
    (21) dec_funciones2 -> . VOID pn_SetCurrentType dec_funciones3
    (103) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 18
    PRINCIPAL       reduce using rule 103 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_funciones2                 shift and go to state 15
    dec_funciones                  shift and go to state 25
    empty                          shift and go to state 16
    tipo                           shift and go to state 17

state 16

    (19) dec_funciones -> empty .

    PRINCIPAL       reduce using rule 19 (dec_funciones -> empty .)


state 17

    (20) dec_funciones2 -> tipo . dec_funciones3
    (22) dec_funciones3 -> . FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque

    FUNCION         shift and go to state 27

    dec_funciones3                 shift and go to state 26

state 18

    (21) dec_funciones2 -> VOID . pn_SetCurrentType dec_funciones3
    (113) pn_SetCurrentType -> .

    FUNCION         reduce using rule 113 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 28

state 19

    (4) dec_variables2 -> tipo COLON . lista_ids SEMIC dec_variables3
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 30

    lista_ids                      shift and go to state 29

state 20

    (15) tipo -> INT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    FUNCION         reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    COMMA           reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    RPAREN          reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)


state 21

    (16) tipo -> CHAR_TYPE pn_SetCurrentType .

    COLON           reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    FUNCION         reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    COMMA           reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    RPAREN          reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)


state 22

    (17) tipo -> FLOAT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    FUNCION         reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    COMMA           reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    RPAREN          reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)


state 23

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .)


state 24

    (35) principal -> PRINCIPAL . pn_Principal1 LPAREN RPAREN bloque
    (105) pn_Principal1 -> .

    LPAREN          reduce using rule 105 (pn_Principal1 -> .)

    pn_Principal1                  shift and go to state 31

state 25

    (18) dec_funciones -> dec_funciones2 dec_funciones .

    PRINCIPAL       reduce using rule 18 (dec_funciones -> dec_funciones2 dec_funciones .)


state 26

    (20) dec_funciones2 -> tipo dec_funciones3 .

    VOID            reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    INT_TYPE        reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    CHAR_TYPE       reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    FLOAT_TYPE      reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    PRINCIPAL       reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)


state 27

    (22) dec_funciones3 -> FUNCION . ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque

    ID              shift and go to state 32


state 28

    (21) dec_funciones2 -> VOID pn_SetCurrentType . dec_funciones3
    (22) dec_funciones3 -> . FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque

    FUNCION         shift and go to state 27

    dec_funciones3                 shift and go to state 33

state 29

    (4) dec_variables2 -> tipo COLON lista_ids . SEMIC dec_variables3

    SEMIC           shift and go to state 34


state 30

    (7) lista_ids -> ID . pn_AddVariable DecVarDim lista_ids2
    (114) pn_AddVariable -> .

    LBRACK          reduce using rule 114 (pn_AddVariable -> .)
    COMMA           reduce using rule 114 (pn_AddVariable -> .)
    SEMIC           reduce using rule 114 (pn_AddVariable -> .)

    pn_AddVariable                 shift and go to state 35

state 31

    (35) principal -> PRINCIPAL pn_Principal1 . LPAREN RPAREN bloque

    LPAREN          shift and go to state 36


state 32

    (22) dec_funciones3 -> FUNCION ID . pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque
    (119) pn_AddFunc -> .

    LPAREN          reduce using rule 119 (pn_AddFunc -> .)

    pn_AddFunc                     shift and go to state 37

state 33

    (21) dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .

    VOID            reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    INT_TYPE        reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    CHAR_TYPE       reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    FLOAT_TYPE      reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    PRINCIPAL       reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)


state 34

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC . dec_variables3
    (5) dec_variables3 -> . dec_variables2
    (6) dec_variables3 -> . empty
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (103) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for CHAR_TYPE resolved as shift
  ! shift/reduce conflict for FLOAT_TYPE resolved as shift
    VOID            reduce using rule 103 (empty -> .)
    PRINCIPAL       reduce using rule 103 (empty -> .)
    LCURLY          reduce using rule 103 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

  ! INT_TYPE        [ reduce using rule 103 (empty -> .) ]
  ! CHAR_TYPE       [ reduce using rule 103 (empty -> .) ]
  ! FLOAT_TYPE      [ reduce using rule 103 (empty -> .) ]

    tipo                           shift and go to state 10
    dec_variables3                 shift and go to state 38
    dec_variables2                 shift and go to state 39
    empty                          shift and go to state 40

state 35

    (7) lista_ids -> ID pn_AddVariable . DecVarDim lista_ids2
    (10) DecVarDim -> . DecVarDim2 pn_VarDim
    (11) DecVarDim -> . empty
    (12) DecVarDim2 -> . LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
    (103) empty -> .

    LBRACK          shift and go to state 44
    COMMA           reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)

    DecVarDim                      shift and go to state 41
    DecVarDim2                     shift and go to state 42
    empty                          shift and go to state 43

state 36

    (35) principal -> PRINCIPAL pn_Principal1 LPAREN . RPAREN bloque

    RPAREN          shift and go to state 45


state 37

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc . LPAREN dec_funcion_param RPAREN dec_variables bloque

    LPAREN          shift and go to state 46


state 38

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .

    VOID            reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    INT_TYPE        reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    CHAR_TYPE       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    FLOAT_TYPE      reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    PRINCIPAL       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    LCURLY          reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)


state 39

    (5) dec_variables3 -> dec_variables2 .

    VOID            reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    INT_TYPE        reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    CHAR_TYPE       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    FLOAT_TYPE      reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    PRINCIPAL       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    LCURLY          reduce using rule 5 (dec_variables3 -> dec_variables2 .)


state 40

    (6) dec_variables3 -> empty .

    VOID            reduce using rule 6 (dec_variables3 -> empty .)
    INT_TYPE        reduce using rule 6 (dec_variables3 -> empty .)
    CHAR_TYPE       reduce using rule 6 (dec_variables3 -> empty .)
    FLOAT_TYPE      reduce using rule 6 (dec_variables3 -> empty .)
    PRINCIPAL       reduce using rule 6 (dec_variables3 -> empty .)
    LCURLY          reduce using rule 6 (dec_variables3 -> empty .)


state 41

    (7) lista_ids -> ID pn_AddVariable DecVarDim . lista_ids2
    (8) lista_ids2 -> . COMMA lista_ids
    (9) lista_ids2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 48
    SEMIC           reduce using rule 103 (empty -> .)

    lista_ids2                     shift and go to state 47
    empty                          shift and go to state 49

state 42

    (10) DecVarDim -> DecVarDim2 . pn_VarDim
    (118) pn_VarDim -> .

    COMMA           reduce using rule 118 (pn_VarDim -> .)
    SEMIC           reduce using rule 118 (pn_VarDim -> .)

    pn_VarDim                      shift and go to state 50

state 43

    (11) DecVarDim -> empty .

    COMMA           reduce using rule 11 (DecVarDim -> empty .)
    SEMIC           reduce using rule 11 (DecVarDim -> empty .)


state 44

    (12) DecVarDim2 -> LBRACK . pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
    (115) pn_VarDim2 -> .

    INT_CTE         reduce using rule 115 (pn_VarDim2 -> .)

    pn_VarDim2                     shift and go to state 51

state 45

    (35) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 52

state 46

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN . dec_funcion_param RPAREN dec_variables bloque
    (23) dec_funcion_param -> . lista_parametros
    (24) dec_funcion_param -> . empty
    (25) lista_parametros -> . ID parDim COLON tipo lista_parametros2
    (103) empty -> .

    ID              shift and go to state 54
    RPAREN          reduce using rule 103 (empty -> .)

    dec_funcion_param              shift and go to state 55
    lista_parametros               shift and go to state 56
    empty                          shift and go to state 57

state 47

    (7) lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .

    SEMIC           reduce using rule 7 (lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .)


state 48

    (8) lista_ids2 -> COMMA . lista_ids
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 30

    lista_ids                      shift and go to state 58

state 49

    (9) lista_ids2 -> empty .

    SEMIC           reduce using rule 9 (lista_ids2 -> empty .)


state 50

    (10) DecVarDim -> DecVarDim2 pn_VarDim .

    COMMA           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)
    SEMIC           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)


state 51

    (12) DecVarDim2 -> LBRACK pn_VarDim2 . INT_CTE pn_VarDim3 DecVarDim3 RBRACK

    INT_CTE         shift and go to state 59


state 52

    (35) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .

    $end            reduce using rule 35 (principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .)


state 53

    (36) bloque -> LCURLY . estatutos RCURLY
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . empty
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicion
    (41) estatuto -> . regresa
    (42) estatuto -> . loop_condicional
    (43) estatuto -> . loop_no_condicional
    (44) estatuto -> . llamada_funcion
    (45) estatuto -> . escritura
    (46) estatuto -> . lectura
    (103) empty -> .
    (47) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (56) condicion -> . SI LPAREN expresion RPAREN ENTONCES bloque else
    (71) regresa -> . REGRESA LPAREN variable RPAREN SEMIC
    (59) loop_condicional -> . MIENTRAS LPAREN expresion RPAREN HACER bloque
    (60) loop_no_condicional -> . DESDE variable ASSIGN expresion HASTA expresion HACER bloque
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (66) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (64) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (51) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 103 (empty -> .)
    SI              shift and go to state 72
    REGRESA         shift and go to state 73
    MIENTRAS        shift and go to state 74
    DESDE           shift and go to state 75
    ID              shift and go to state 76
    ESCRIBE         shift and go to state 77
    LEE             shift and go to state 78

    estatutos                      shift and go to state 60
    estatuto                       shift and go to state 61
    empty                          shift and go to state 62
    asignacion                     shift and go to state 63
    condicion                      shift and go to state 64
    regresa                        shift and go to state 65
    loop_condicional               shift and go to state 66
    loop_no_condicional            shift and go to state 67
    llamada_funcion                shift and go to state 68
    escritura                      shift and go to state 69
    lectura                        shift and go to state 70
    variable                       shift and go to state 71

state 54

    (25) lista_parametros -> ID . parDim COLON tipo lista_parametros2
    (28) parDim -> . LBRACK expresion parDim2 RBRACK
    (29) parDim -> . empty
    (103) empty -> .

    LBRACK          shift and go to state 80
    COLON           reduce using rule 103 (empty -> .)

    parDim                         shift and go to state 79
    empty                          shift and go to state 81

state 55

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param . RPAREN dec_variables bloque

    RPAREN          shift and go to state 82


state 56

    (23) dec_funcion_param -> lista_parametros .

    RPAREN          reduce using rule 23 (dec_funcion_param -> lista_parametros .)


state 57

    (24) dec_funcion_param -> empty .

    RPAREN          reduce using rule 24 (dec_funcion_param -> empty .)


state 58

    (8) lista_ids2 -> COMMA lista_ids .

    SEMIC           reduce using rule 8 (lista_ids2 -> COMMA lista_ids .)


state 59

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE . pn_VarDim3 DecVarDim3 RBRACK
    (116) pn_VarDim3 -> .

    COMMA           reduce using rule 116 (pn_VarDim3 -> .)
    RBRACK          reduce using rule 116 (pn_VarDim3 -> .)

    pn_VarDim3                     shift and go to state 83

state 60

    (36) bloque -> LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 84


state 61

    (37) estatutos -> estatuto . estatutos
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . empty
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicion
    (41) estatuto -> . regresa
    (42) estatuto -> . loop_condicional
    (43) estatuto -> . loop_no_condicional
    (44) estatuto -> . llamada_funcion
    (45) estatuto -> . escritura
    (46) estatuto -> . lectura
    (103) empty -> .
    (47) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (56) condicion -> . SI LPAREN expresion RPAREN ENTONCES bloque else
    (71) regresa -> . REGRESA LPAREN variable RPAREN SEMIC
    (59) loop_condicional -> . MIENTRAS LPAREN expresion RPAREN HACER bloque
    (60) loop_no_condicional -> . DESDE variable ASSIGN expresion HASTA expresion HACER bloque
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (66) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (64) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (51) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 103 (empty -> .)
    SI              shift and go to state 72
    REGRESA         shift and go to state 73
    MIENTRAS        shift and go to state 74
    DESDE           shift and go to state 75
    ID              shift and go to state 76
    ESCRIBE         shift and go to state 77
    LEE             shift and go to state 78

    estatuto                       shift and go to state 61
    estatutos                      shift and go to state 85
    empty                          shift and go to state 62
    asignacion                     shift and go to state 63
    condicion                      shift and go to state 64
    regresa                        shift and go to state 65
    loop_condicional               shift and go to state 66
    loop_no_condicional            shift and go to state 67
    llamada_funcion                shift and go to state 68
    escritura                      shift and go to state 69
    lectura                        shift and go to state 70
    variable                       shift and go to state 71

state 62

    (38) estatutos -> empty .

    RCURLY          reduce using rule 38 (estatutos -> empty .)


state 63

    (39) estatuto -> asignacion .

    SI              reduce using rule 39 (estatuto -> asignacion .)
    REGRESA         reduce using rule 39 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 39 (estatuto -> asignacion .)
    DESDE           reduce using rule 39 (estatuto -> asignacion .)
    ID              reduce using rule 39 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 39 (estatuto -> asignacion .)
    LEE             reduce using rule 39 (estatuto -> asignacion .)
    RCURLY          reduce using rule 39 (estatuto -> asignacion .)


state 64

    (40) estatuto -> condicion .

    SI              reduce using rule 40 (estatuto -> condicion .)
    REGRESA         reduce using rule 40 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 40 (estatuto -> condicion .)
    DESDE           reduce using rule 40 (estatuto -> condicion .)
    ID              reduce using rule 40 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 40 (estatuto -> condicion .)
    LEE             reduce using rule 40 (estatuto -> condicion .)
    RCURLY          reduce using rule 40 (estatuto -> condicion .)


state 65

    (41) estatuto -> regresa .

    SI              reduce using rule 41 (estatuto -> regresa .)
    REGRESA         reduce using rule 41 (estatuto -> regresa .)
    MIENTRAS        reduce using rule 41 (estatuto -> regresa .)
    DESDE           reduce using rule 41 (estatuto -> regresa .)
    ID              reduce using rule 41 (estatuto -> regresa .)
    ESCRIBE         reduce using rule 41 (estatuto -> regresa .)
    LEE             reduce using rule 41 (estatuto -> regresa .)
    RCURLY          reduce using rule 41 (estatuto -> regresa .)


state 66

    (42) estatuto -> loop_condicional .

    SI              reduce using rule 42 (estatuto -> loop_condicional .)
    REGRESA         reduce using rule 42 (estatuto -> loop_condicional .)
    MIENTRAS        reduce using rule 42 (estatuto -> loop_condicional .)
    DESDE           reduce using rule 42 (estatuto -> loop_condicional .)
    ID              reduce using rule 42 (estatuto -> loop_condicional .)
    ESCRIBE         reduce using rule 42 (estatuto -> loop_condicional .)
    LEE             reduce using rule 42 (estatuto -> loop_condicional .)
    RCURLY          reduce using rule 42 (estatuto -> loop_condicional .)


state 67

    (43) estatuto -> loop_no_condicional .

    SI              reduce using rule 43 (estatuto -> loop_no_condicional .)
    REGRESA         reduce using rule 43 (estatuto -> loop_no_condicional .)
    MIENTRAS        reduce using rule 43 (estatuto -> loop_no_condicional .)
    DESDE           reduce using rule 43 (estatuto -> loop_no_condicional .)
    ID              reduce using rule 43 (estatuto -> loop_no_condicional .)
    ESCRIBE         reduce using rule 43 (estatuto -> loop_no_condicional .)
    LEE             reduce using rule 43 (estatuto -> loop_no_condicional .)
    RCURLY          reduce using rule 43 (estatuto -> loop_no_condicional .)


state 68

    (44) estatuto -> llamada_funcion .

    SI              reduce using rule 44 (estatuto -> llamada_funcion .)
    REGRESA         reduce using rule 44 (estatuto -> llamada_funcion .)
    MIENTRAS        reduce using rule 44 (estatuto -> llamada_funcion .)
    DESDE           reduce using rule 44 (estatuto -> llamada_funcion .)
    ID              reduce using rule 44 (estatuto -> llamada_funcion .)
    ESCRIBE         reduce using rule 44 (estatuto -> llamada_funcion .)
    LEE             reduce using rule 44 (estatuto -> llamada_funcion .)
    RCURLY          reduce using rule 44 (estatuto -> llamada_funcion .)


state 69

    (45) estatuto -> escritura .

    SI              reduce using rule 45 (estatuto -> escritura .)
    REGRESA         reduce using rule 45 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 45 (estatuto -> escritura .)
    DESDE           reduce using rule 45 (estatuto -> escritura .)
    ID              reduce using rule 45 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 45 (estatuto -> escritura .)
    LEE             reduce using rule 45 (estatuto -> escritura .)
    RCURLY          reduce using rule 45 (estatuto -> escritura .)


state 70

    (46) estatuto -> lectura .

    SI              reduce using rule 46 (estatuto -> lectura .)
    REGRESA         reduce using rule 46 (estatuto -> lectura .)
    MIENTRAS        reduce using rule 46 (estatuto -> lectura .)
    DESDE           reduce using rule 46 (estatuto -> lectura .)
    ID              reduce using rule 46 (estatuto -> lectura .)
    ESCRIBE         reduce using rule 46 (estatuto -> lectura .)
    LEE             reduce using rule 46 (estatuto -> lectura .)
    RCURLY          reduce using rule 46 (estatuto -> lectura .)


state 71

    (47) asignacion -> variable . ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2

    ASSIGN          shift and go to state 86


state 72

    (56) condicion -> SI . LPAREN expresion RPAREN ENTONCES bloque else

    LPAREN          shift and go to state 87


state 73

    (71) regresa -> REGRESA . LPAREN variable RPAREN SEMIC

    LPAREN          shift and go to state 88


state 74

    (59) loop_condicional -> MIENTRAS . LPAREN expresion RPAREN HACER bloque

    LPAREN          shift and go to state 89


state 75

    (60) loop_no_condicional -> DESDE . variable ASSIGN expresion HASTA expresion HACER bloque
    (51) variable -> . ID pn_Expresion1 varDim

    ID              shift and go to state 91

    variable                       shift and go to state 90

state 76

    (65) llamada_funcion -> ID . LPAREN llamada_param RPAREN SEMIC
    (51) variable -> ID . pn_Expresion1 varDim
    (109) pn_Expresion1 -> .

    LPAREN          shift and go to state 92
    LBRACK          reduce using rule 109 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 109 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 93

state 77

    (66) escritura -> ESCRIBE . pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (110) pn_Secuencial3 -> .

    LPAREN          reduce using rule 110 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 94

state 78

    (64) lectura -> LEE . pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (110) pn_Secuencial3 -> .

    LPAREN          reduce using rule 110 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 95

state 79

    (25) lista_parametros -> ID parDim . COLON tipo lista_parametros2

    COLON           shift and go to state 96


state 80

    (28) parDim -> LBRACK . expresion parDim2 RBRACK
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    expresion                      shift and go to state 97
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 81

    (29) parDim -> empty .

    COLON           reduce using rule 29 (parDim -> empty .)


state 82

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN . dec_variables bloque
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (103) empty -> .

    VARIABLES       shift and go to state 6
    LCURLY          reduce using rule 103 (empty -> .)

    dec_variables                  shift and go to state 111
    empty                          shift and go to state 7

state 83

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 . DecVarDim3 RBRACK
    (13) DecVarDim3 -> . COMMA INT_CTE
    (14) DecVarDim3 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 113
    RBRACK          reduce using rule 103 (empty -> .)

    DecVarDim3                     shift and go to state 112
    empty                          shift and go to state 114

state 84

    (36) bloque -> LCURLY estatutos RCURLY .

    $end            reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    VOID            reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    INT_TYPE        reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    CHAR_TYPE       reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    FLOAT_TYPE      reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    PRINCIPAL       reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    SINO            reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    SI              reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    REGRESA         reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    MIENTRAS        reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    DESDE           reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    ID              reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    ESCRIBE         reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    LEE             reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)


state 85

    (37) estatutos -> estatuto estatutos .

    RCURLY          reduce using rule 37 (estatutos -> estatuto estatutos .)


state 86

    (47) asignacion -> variable ASSIGN . pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (107) pn_Secuencial1 -> .

    LPAREN          reduce using rule 107 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 107 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 107 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 107 (pn_Secuencial1 -> .)
    ID              reduce using rule 107 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 115

state 87

    (56) condicion -> SI LPAREN . expresion RPAREN ENTONCES bloque else
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    expresion                      shift and go to state 116
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 88

    (71) regresa -> REGRESA LPAREN . variable RPAREN SEMIC
    (51) variable -> . ID pn_Expresion1 varDim

    ID              shift and go to state 91

    variable                       shift and go to state 117

state 89

    (59) loop_condicional -> MIENTRAS LPAREN . expresion RPAREN HACER bloque
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    expresion                      shift and go to state 118
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 90

    (60) loop_no_condicional -> DESDE variable . ASSIGN expresion HASTA expresion HACER bloque

    ASSIGN          shift and go to state 119


state 91

    (51) variable -> ID . pn_Expresion1 varDim
    (109) pn_Expresion1 -> .

    LBRACK          reduce using rule 109 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 109 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 109 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 93

state 92

    (65) llamada_funcion -> ID LPAREN . llamada_param RPAREN SEMIC
    (32) llamada_param -> . expresion llamada_param2
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    llamada_param                  shift and go to state 120
    expresion                      shift and go to state 121
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 93

    (51) variable -> ID pn_Expresion1 . varDim
    (52) varDim -> . LBRACK expresion varDim2 RBRACK
    (53) varDim -> . empty
    (103) empty -> .

    LBRACK          shift and go to state 123
    ASSIGN          reduce using rule 103 (empty -> .)
    MULT_OP         reduce using rule 103 (empty -> .)
    DIV_OP          reduce using rule 103 (empty -> .)
    PLUS_OP         reduce using rule 103 (empty -> .)
    MINUS_OP        reduce using rule 103 (empty -> .)
    LT_LOG          reduce using rule 103 (empty -> .)
    GT_LOG          reduce using rule 103 (empty -> .)
    LTE_LOG         reduce using rule 103 (empty -> .)
    GTE_LOG         reduce using rule 103 (empty -> .)
    NE_LOG          reduce using rule 103 (empty -> .)
    EQUAL_LOG       reduce using rule 103 (empty -> .)
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    varDim                         shift and go to state 122
    empty                          shift and go to state 124

state 94

    (66) escritura -> ESCRIBE pn_Secuencial3 . LPAREN escritura2 RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 125


state 95

    (64) lectura -> LEE pn_Secuencial3 . LPAREN varLectura RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 126


state 96

    (25) lista_parametros -> ID parDim COLON . tipo lista_parametros2
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    tipo                           shift and go to state 127

state 97

    (28) parDim -> LBRACK expresion . parDim2 RBRACK
    (30) parDim2 -> . COMMA expresion
    (31) parDim2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 129
    RBRACK          reduce using rule 103 (empty -> .)

    parDim2                        shift and go to state 128
    empty                          shift and go to state 130

state 98

    (72) expresion -> mega_exp . expresion1
    (73) expresion1 -> . ASSIGN expresion
    (74) expresion1 -> . empty
    (103) empty -> .

    ASSIGN          shift and go to state 132
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    expresion1                     shift and go to state 131
    empty                          shift and go to state 133

state 99

    (75) mega_exp -> super_exp . meg
    (76) meg -> . op_l mega_exp
    (77) meg -> . empty
    (78) op_l -> . AND_LOG
    (79) op_l -> . OR_LOG
    (103) empty -> .

    AND_LOG         shift and go to state 137
    OR_LOG          shift and go to state 138
    ASSIGN          reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    meg                            shift and go to state 134
    op_l                           shift and go to state 135
    empty                          shift and go to state 136

state 100

    (80) super_exp -> exp . sp
    (81) sp -> . op_r exp
    (82) sp -> . empty
    (83) op_r -> . LT_LOG
    (84) op_r -> . GT_LOG
    (85) op_r -> . LTE_LOG
    (86) op_r -> . GTE_LOG
    (87) op_r -> . NE_LOG
    (88) op_r -> . EQUAL_LOG
    (103) empty -> .

    LT_LOG          shift and go to state 142
    GT_LOG          shift and go to state 143
    LTE_LOG         shift and go to state 144
    GTE_LOG         shift and go to state 145
    NE_LOG          shift and go to state 146
    EQUAL_LOG       shift and go to state 147
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    ASSIGN          reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    sp                             shift and go to state 139
    op_r                           shift and go to state 140
    empty                          shift and go to state 141

state 101

    (89) exp -> termino . exp1
    (90) exp1 -> . op_a exp
    (91) exp1 -> . empty
    (92) op_a -> . PLUS_OP
    (93) op_a -> . MINUS_OP
    (103) empty -> .

    PLUS_OP         shift and go to state 151
    MINUS_OP        shift and go to state 152
    LT_LOG          reduce using rule 103 (empty -> .)
    GT_LOG          reduce using rule 103 (empty -> .)
    LTE_LOG         reduce using rule 103 (empty -> .)
    GTE_LOG         reduce using rule 103 (empty -> .)
    NE_LOG          reduce using rule 103 (empty -> .)
    EQUAL_LOG       reduce using rule 103 (empty -> .)
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    ASSIGN          reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    exp1                           shift and go to state 148
    op_a                           shift and go to state 149
    empty                          shift and go to state 150

state 102

    (94) termino -> factor . term
    (95) term -> . op_a1 termino
    (96) term -> . empty
    (97) op_a1 -> . MULT_OP
    (98) op_a1 -> . DIV_OP
    (103) empty -> .

    MULT_OP         shift and go to state 156
    DIV_OP          shift and go to state 157
    PLUS_OP         reduce using rule 103 (empty -> .)
    MINUS_OP        reduce using rule 103 (empty -> .)
    LT_LOG          reduce using rule 103 (empty -> .)
    GT_LOG          reduce using rule 103 (empty -> .)
    LTE_LOG         reduce using rule 103 (empty -> .)
    GTE_LOG         reduce using rule 103 (empty -> .)
    NE_LOG          reduce using rule 103 (empty -> .)
    EQUAL_LOG       reduce using rule 103 (empty -> .)
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    ASSIGN          reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    term                           shift and go to state 153
    op_a1                          shift and go to state 154
    empty                          shift and go to state 155

state 103

    (99) factor -> ctes .

    MULT_OP         reduce using rule 99 (factor -> ctes .)
    DIV_OP          reduce using rule 99 (factor -> ctes .)
    PLUS_OP         reduce using rule 99 (factor -> ctes .)
    MINUS_OP        reduce using rule 99 (factor -> ctes .)
    LT_LOG          reduce using rule 99 (factor -> ctes .)
    GT_LOG          reduce using rule 99 (factor -> ctes .)
    LTE_LOG         reduce using rule 99 (factor -> ctes .)
    GTE_LOG         reduce using rule 99 (factor -> ctes .)
    NE_LOG          reduce using rule 99 (factor -> ctes .)
    EQUAL_LOG       reduce using rule 99 (factor -> ctes .)
    AND_LOG         reduce using rule 99 (factor -> ctes .)
    OR_LOG          reduce using rule 99 (factor -> ctes .)
    ASSIGN          reduce using rule 99 (factor -> ctes .)
    COMMA           reduce using rule 99 (factor -> ctes .)
    RBRACK          reduce using rule 99 (factor -> ctes .)
    RPAREN          reduce using rule 99 (factor -> ctes .)
    SEMIC           reduce using rule 99 (factor -> ctes .)
    HASTA           reduce using rule 99 (factor -> ctes .)
    HACER           reduce using rule 99 (factor -> ctes .)


state 104

    (100) factor -> LPAREN . exp RPAREN
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    exp                            shift and go to state 158
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 105

    (101) factor -> variable .

    MULT_OP         reduce using rule 101 (factor -> variable .)
    DIV_OP          reduce using rule 101 (factor -> variable .)
    PLUS_OP         reduce using rule 101 (factor -> variable .)
    MINUS_OP        reduce using rule 101 (factor -> variable .)
    LT_LOG          reduce using rule 101 (factor -> variable .)
    GT_LOG          reduce using rule 101 (factor -> variable .)
    LTE_LOG         reduce using rule 101 (factor -> variable .)
    GTE_LOG         reduce using rule 101 (factor -> variable .)
    NE_LOG          reduce using rule 101 (factor -> variable .)
    EQUAL_LOG       reduce using rule 101 (factor -> variable .)
    AND_LOG         reduce using rule 101 (factor -> variable .)
    OR_LOG          reduce using rule 101 (factor -> variable .)
    ASSIGN          reduce using rule 101 (factor -> variable .)
    COMMA           reduce using rule 101 (factor -> variable .)
    RBRACK          reduce using rule 101 (factor -> variable .)
    RPAREN          reduce using rule 101 (factor -> variable .)
    SEMIC           reduce using rule 101 (factor -> variable .)
    HASTA           reduce using rule 101 (factor -> variable .)
    HACER           reduce using rule 101 (factor -> variable .)


state 106

    (102) factor -> llamada_funcion .

    MULT_OP         reduce using rule 102 (factor -> llamada_funcion .)
    DIV_OP          reduce using rule 102 (factor -> llamada_funcion .)
    PLUS_OP         reduce using rule 102 (factor -> llamada_funcion .)
    MINUS_OP        reduce using rule 102 (factor -> llamada_funcion .)
    LT_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    GT_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    LTE_LOG         reduce using rule 102 (factor -> llamada_funcion .)
    GTE_LOG         reduce using rule 102 (factor -> llamada_funcion .)
    NE_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    EQUAL_LOG       reduce using rule 102 (factor -> llamada_funcion .)
    AND_LOG         reduce using rule 102 (factor -> llamada_funcion .)
    OR_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    ASSIGN          reduce using rule 102 (factor -> llamada_funcion .)
    COMMA           reduce using rule 102 (factor -> llamada_funcion .)
    RBRACK          reduce using rule 102 (factor -> llamada_funcion .)
    RPAREN          reduce using rule 102 (factor -> llamada_funcion .)
    SEMIC           reduce using rule 102 (factor -> llamada_funcion .)
    HASTA           reduce using rule 102 (factor -> llamada_funcion .)
    HACER           reduce using rule 102 (factor -> llamada_funcion .)


state 107

    (48) ctes -> INT_CTE .

    MULT_OP         reduce using rule 48 (ctes -> INT_CTE .)
    DIV_OP          reduce using rule 48 (ctes -> INT_CTE .)
    PLUS_OP         reduce using rule 48 (ctes -> INT_CTE .)
    MINUS_OP        reduce using rule 48 (ctes -> INT_CTE .)
    LT_LOG          reduce using rule 48 (ctes -> INT_CTE .)
    GT_LOG          reduce using rule 48 (ctes -> INT_CTE .)
    LTE_LOG         reduce using rule 48 (ctes -> INT_CTE .)
    GTE_LOG         reduce using rule 48 (ctes -> INT_CTE .)
    NE_LOG          reduce using rule 48 (ctes -> INT_CTE .)
    EQUAL_LOG       reduce using rule 48 (ctes -> INT_CTE .)
    AND_LOG         reduce using rule 48 (ctes -> INT_CTE .)
    OR_LOG          reduce using rule 48 (ctes -> INT_CTE .)
    ASSIGN          reduce using rule 48 (ctes -> INT_CTE .)
    COMMA           reduce using rule 48 (ctes -> INT_CTE .)
    RBRACK          reduce using rule 48 (ctes -> INT_CTE .)
    RPAREN          reduce using rule 48 (ctes -> INT_CTE .)
    SEMIC           reduce using rule 48 (ctes -> INT_CTE .)
    HASTA           reduce using rule 48 (ctes -> INT_CTE .)
    HACER           reduce using rule 48 (ctes -> INT_CTE .)


state 108

    (49) ctes -> FLOAT_CTE .

    MULT_OP         reduce using rule 49 (ctes -> FLOAT_CTE .)
    DIV_OP          reduce using rule 49 (ctes -> FLOAT_CTE .)
    PLUS_OP         reduce using rule 49 (ctes -> FLOAT_CTE .)
    MINUS_OP        reduce using rule 49 (ctes -> FLOAT_CTE .)
    LT_LOG          reduce using rule 49 (ctes -> FLOAT_CTE .)
    GT_LOG          reduce using rule 49 (ctes -> FLOAT_CTE .)
    LTE_LOG         reduce using rule 49 (ctes -> FLOAT_CTE .)
    GTE_LOG         reduce using rule 49 (ctes -> FLOAT_CTE .)
    NE_LOG          reduce using rule 49 (ctes -> FLOAT_CTE .)
    EQUAL_LOG       reduce using rule 49 (ctes -> FLOAT_CTE .)
    AND_LOG         reduce using rule 49 (ctes -> FLOAT_CTE .)
    OR_LOG          reduce using rule 49 (ctes -> FLOAT_CTE .)
    ASSIGN          reduce using rule 49 (ctes -> FLOAT_CTE .)
    COMMA           reduce using rule 49 (ctes -> FLOAT_CTE .)
    RBRACK          reduce using rule 49 (ctes -> FLOAT_CTE .)
    RPAREN          reduce using rule 49 (ctes -> FLOAT_CTE .)
    SEMIC           reduce using rule 49 (ctes -> FLOAT_CTE .)
    HASTA           reduce using rule 49 (ctes -> FLOAT_CTE .)
    HACER           reduce using rule 49 (ctes -> FLOAT_CTE .)


state 109

    (50) ctes -> CHAR_CTE .

    MULT_OP         reduce using rule 50 (ctes -> CHAR_CTE .)
    DIV_OP          reduce using rule 50 (ctes -> CHAR_CTE .)
    PLUS_OP         reduce using rule 50 (ctes -> CHAR_CTE .)
    MINUS_OP        reduce using rule 50 (ctes -> CHAR_CTE .)
    LT_LOG          reduce using rule 50 (ctes -> CHAR_CTE .)
    GT_LOG          reduce using rule 50 (ctes -> CHAR_CTE .)
    LTE_LOG         reduce using rule 50 (ctes -> CHAR_CTE .)
    GTE_LOG         reduce using rule 50 (ctes -> CHAR_CTE .)
    NE_LOG          reduce using rule 50 (ctes -> CHAR_CTE .)
    EQUAL_LOG       reduce using rule 50 (ctes -> CHAR_CTE .)
    AND_LOG         reduce using rule 50 (ctes -> CHAR_CTE .)
    OR_LOG          reduce using rule 50 (ctes -> CHAR_CTE .)
    ASSIGN          reduce using rule 50 (ctes -> CHAR_CTE .)
    COMMA           reduce using rule 50 (ctes -> CHAR_CTE .)
    RBRACK          reduce using rule 50 (ctes -> CHAR_CTE .)
    RPAREN          reduce using rule 50 (ctes -> CHAR_CTE .)
    SEMIC           reduce using rule 50 (ctes -> CHAR_CTE .)
    HASTA           reduce using rule 50 (ctes -> CHAR_CTE .)
    HACER           reduce using rule 50 (ctes -> CHAR_CTE .)


state 110

    (51) variable -> ID . pn_Expresion1 varDim
    (65) llamada_funcion -> ID . LPAREN llamada_param RPAREN SEMIC
    (109) pn_Expresion1 -> .

    LPAREN          shift and go to state 92
    LBRACK          reduce using rule 109 (pn_Expresion1 -> .)
    MULT_OP         reduce using rule 109 (pn_Expresion1 -> .)
    DIV_OP          reduce using rule 109 (pn_Expresion1 -> .)
    PLUS_OP         reduce using rule 109 (pn_Expresion1 -> .)
    MINUS_OP        reduce using rule 109 (pn_Expresion1 -> .)
    LT_LOG          reduce using rule 109 (pn_Expresion1 -> .)
    GT_LOG          reduce using rule 109 (pn_Expresion1 -> .)
    LTE_LOG         reduce using rule 109 (pn_Expresion1 -> .)
    GTE_LOG         reduce using rule 109 (pn_Expresion1 -> .)
    NE_LOG          reduce using rule 109 (pn_Expresion1 -> .)
    EQUAL_LOG       reduce using rule 109 (pn_Expresion1 -> .)
    AND_LOG         reduce using rule 109 (pn_Expresion1 -> .)
    OR_LOG          reduce using rule 109 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 109 (pn_Expresion1 -> .)
    COMMA           reduce using rule 109 (pn_Expresion1 -> .)
    RBRACK          reduce using rule 109 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 109 (pn_Expresion1 -> .)
    SEMIC           reduce using rule 109 (pn_Expresion1 -> .)
    HASTA           reduce using rule 109 (pn_Expresion1 -> .)
    HACER           reduce using rule 109 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 93

state 111

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 159

state 112

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 . RBRACK

    RBRACK          shift and go to state 160


state 113

    (13) DecVarDim3 -> COMMA . INT_CTE

    INT_CTE         shift and go to state 161


state 114

    (14) DecVarDim3 -> empty .

    RBRACK          reduce using rule 14 (DecVarDim3 -> empty .)


state 115

    (47) asignacion -> variable ASSIGN pn_Secuencial1 . expresion SEMIC pn_Secuencial2
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    variable                       shift and go to state 105
    expresion                      shift and go to state 162
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    llamada_funcion                shift and go to state 106

state 116

    (56) condicion -> SI LPAREN expresion . RPAREN ENTONCES bloque else

    RPAREN          shift and go to state 163


state 117

    (71) regresa -> REGRESA LPAREN variable . RPAREN SEMIC

    RPAREN          shift and go to state 164


state 118

    (59) loop_condicional -> MIENTRAS LPAREN expresion . RPAREN HACER bloque

    RPAREN          shift and go to state 165


state 119

    (60) loop_no_condicional -> DESDE variable ASSIGN . expresion HASTA expresion HACER bloque
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    variable                       shift and go to state 105
    expresion                      shift and go to state 166
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    llamada_funcion                shift and go to state 106

state 120

    (65) llamada_funcion -> ID LPAREN llamada_param . RPAREN SEMIC

    RPAREN          shift and go to state 167


state 121

    (32) llamada_param -> expresion . llamada_param2
    (33) llamada_param2 -> . COMMA expresion
    (34) llamada_param2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 169
    RPAREN          reduce using rule 103 (empty -> .)

    llamada_param2                 shift and go to state 168
    empty                          shift and go to state 170

state 122

    (51) variable -> ID pn_Expresion1 varDim .

    ASSIGN          reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    MULT_OP         reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    DIV_OP          reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    PLUS_OP         reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    MINUS_OP        reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    LT_LOG          reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    GT_LOG          reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    LTE_LOG         reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    GTE_LOG         reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    NE_LOG          reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    EQUAL_LOG       reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    AND_LOG         reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    OR_LOG          reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    COMMA           reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    RBRACK          reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    RPAREN          reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    SEMIC           reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    HASTA           reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)
    HACER           reduce using rule 51 (variable -> ID pn_Expresion1 varDim .)


state 123

    (52) varDim -> LBRACK . expresion varDim2 RBRACK
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    expresion                      shift and go to state 171
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 124

    (53) varDim -> empty .

    ASSIGN          reduce using rule 53 (varDim -> empty .)
    MULT_OP         reduce using rule 53 (varDim -> empty .)
    DIV_OP          reduce using rule 53 (varDim -> empty .)
    PLUS_OP         reduce using rule 53 (varDim -> empty .)
    MINUS_OP        reduce using rule 53 (varDim -> empty .)
    LT_LOG          reduce using rule 53 (varDim -> empty .)
    GT_LOG          reduce using rule 53 (varDim -> empty .)
    LTE_LOG         reduce using rule 53 (varDim -> empty .)
    GTE_LOG         reduce using rule 53 (varDim -> empty .)
    NE_LOG          reduce using rule 53 (varDim -> empty .)
    EQUAL_LOG       reduce using rule 53 (varDim -> empty .)
    AND_LOG         reduce using rule 53 (varDim -> empty .)
    OR_LOG          reduce using rule 53 (varDim -> empty .)
    COMMA           reduce using rule 53 (varDim -> empty .)
    RBRACK          reduce using rule 53 (varDim -> empty .)
    RPAREN          reduce using rule 53 (varDim -> empty .)
    SEMIC           reduce using rule 53 (varDim -> empty .)
    HASTA           reduce using rule 53 (varDim -> empty .)
    HACER           reduce using rule 53 (varDim -> empty .)


state 125

    (66) escritura -> ESCRIBE pn_Secuencial3 LPAREN . escritura2 RPAREN SEMIC pn_Secuencial5
    (67) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (68) escritura2 -> . expresion pn_Secuencial4 escritura3
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    STRING_CTE      shift and go to state 173
    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    escritura2                     shift and go to state 172
    expresion                      shift and go to state 174
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 126

    (64) lectura -> LEE pn_Secuencial3 LPAREN . varLectura RPAREN SEMIC pn_Secuencial5
    (61) varLectura -> . ID pn_Expresion1 varDim varLectura2

    ID              shift and go to state 176

    varLectura                     shift and go to state 175

state 127

    (25) lista_parametros -> ID parDim COLON tipo . lista_parametros2
    (26) lista_parametros2 -> . COMMA lista_parametros
    (27) lista_parametros2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 178
    RPAREN          reduce using rule 103 (empty -> .)

    lista_parametros2              shift and go to state 177
    empty                          shift and go to state 179

state 128

    (28) parDim -> LBRACK expresion parDim2 . RBRACK

    RBRACK          shift and go to state 180


state 129

    (30) parDim2 -> COMMA . expresion
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    expresion                      shift and go to state 181
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 130

    (31) parDim2 -> empty .

    RBRACK          reduce using rule 31 (parDim2 -> empty .)


state 131

    (72) expresion -> mega_exp expresion1 .

    COMMA           reduce using rule 72 (expresion -> mega_exp expresion1 .)
    RBRACK          reduce using rule 72 (expresion -> mega_exp expresion1 .)
    RPAREN          reduce using rule 72 (expresion -> mega_exp expresion1 .)
    SEMIC           reduce using rule 72 (expresion -> mega_exp expresion1 .)
    HASTA           reduce using rule 72 (expresion -> mega_exp expresion1 .)
    HACER           reduce using rule 72 (expresion -> mega_exp expresion1 .)


state 132

    (73) expresion1 -> ASSIGN . expresion
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    expresion                      shift and go to state 182
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 133

    (74) expresion1 -> empty .

    COMMA           reduce using rule 74 (expresion1 -> empty .)
    RBRACK          reduce using rule 74 (expresion1 -> empty .)
    RPAREN          reduce using rule 74 (expresion1 -> empty .)
    SEMIC           reduce using rule 74 (expresion1 -> empty .)
    HASTA           reduce using rule 74 (expresion1 -> empty .)
    HACER           reduce using rule 74 (expresion1 -> empty .)


state 134

    (75) mega_exp -> super_exp meg .

    ASSIGN          reduce using rule 75 (mega_exp -> super_exp meg .)
    COMMA           reduce using rule 75 (mega_exp -> super_exp meg .)
    RBRACK          reduce using rule 75 (mega_exp -> super_exp meg .)
    RPAREN          reduce using rule 75 (mega_exp -> super_exp meg .)
    SEMIC           reduce using rule 75 (mega_exp -> super_exp meg .)
    HASTA           reduce using rule 75 (mega_exp -> super_exp meg .)
    HACER           reduce using rule 75 (mega_exp -> super_exp meg .)


state 135

    (76) meg -> op_l . mega_exp
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    mega_exp                       shift and go to state 183
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 136

    (77) meg -> empty .

    ASSIGN          reduce using rule 77 (meg -> empty .)
    COMMA           reduce using rule 77 (meg -> empty .)
    RBRACK          reduce using rule 77 (meg -> empty .)
    RPAREN          reduce using rule 77 (meg -> empty .)
    SEMIC           reduce using rule 77 (meg -> empty .)
    HASTA           reduce using rule 77 (meg -> empty .)
    HACER           reduce using rule 77 (meg -> empty .)


state 137

    (78) op_l -> AND_LOG .

    LPAREN          reduce using rule 78 (op_l -> AND_LOG .)
    INT_CTE         reduce using rule 78 (op_l -> AND_LOG .)
    FLOAT_CTE       reduce using rule 78 (op_l -> AND_LOG .)
    CHAR_CTE        reduce using rule 78 (op_l -> AND_LOG .)
    ID              reduce using rule 78 (op_l -> AND_LOG .)


state 138

    (79) op_l -> OR_LOG .

    LPAREN          reduce using rule 79 (op_l -> OR_LOG .)
    INT_CTE         reduce using rule 79 (op_l -> OR_LOG .)
    FLOAT_CTE       reduce using rule 79 (op_l -> OR_LOG .)
    CHAR_CTE        reduce using rule 79 (op_l -> OR_LOG .)
    ID              reduce using rule 79 (op_l -> OR_LOG .)


state 139

    (80) super_exp -> exp sp .

    AND_LOG         reduce using rule 80 (super_exp -> exp sp .)
    OR_LOG          reduce using rule 80 (super_exp -> exp sp .)
    ASSIGN          reduce using rule 80 (super_exp -> exp sp .)
    COMMA           reduce using rule 80 (super_exp -> exp sp .)
    RBRACK          reduce using rule 80 (super_exp -> exp sp .)
    RPAREN          reduce using rule 80 (super_exp -> exp sp .)
    SEMIC           reduce using rule 80 (super_exp -> exp sp .)
    HASTA           reduce using rule 80 (super_exp -> exp sp .)
    HACER           reduce using rule 80 (super_exp -> exp sp .)


state 140

    (81) sp -> op_r . exp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    exp                            shift and go to state 184
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 141

    (82) sp -> empty .

    AND_LOG         reduce using rule 82 (sp -> empty .)
    OR_LOG          reduce using rule 82 (sp -> empty .)
    ASSIGN          reduce using rule 82 (sp -> empty .)
    COMMA           reduce using rule 82 (sp -> empty .)
    RBRACK          reduce using rule 82 (sp -> empty .)
    RPAREN          reduce using rule 82 (sp -> empty .)
    SEMIC           reduce using rule 82 (sp -> empty .)
    HASTA           reduce using rule 82 (sp -> empty .)
    HACER           reduce using rule 82 (sp -> empty .)


state 142

    (83) op_r -> LT_LOG .

    LPAREN          reduce using rule 83 (op_r -> LT_LOG .)
    INT_CTE         reduce using rule 83 (op_r -> LT_LOG .)
    FLOAT_CTE       reduce using rule 83 (op_r -> LT_LOG .)
    CHAR_CTE        reduce using rule 83 (op_r -> LT_LOG .)
    ID              reduce using rule 83 (op_r -> LT_LOG .)


state 143

    (84) op_r -> GT_LOG .

    LPAREN          reduce using rule 84 (op_r -> GT_LOG .)
    INT_CTE         reduce using rule 84 (op_r -> GT_LOG .)
    FLOAT_CTE       reduce using rule 84 (op_r -> GT_LOG .)
    CHAR_CTE        reduce using rule 84 (op_r -> GT_LOG .)
    ID              reduce using rule 84 (op_r -> GT_LOG .)


state 144

    (85) op_r -> LTE_LOG .

    LPAREN          reduce using rule 85 (op_r -> LTE_LOG .)
    INT_CTE         reduce using rule 85 (op_r -> LTE_LOG .)
    FLOAT_CTE       reduce using rule 85 (op_r -> LTE_LOG .)
    CHAR_CTE        reduce using rule 85 (op_r -> LTE_LOG .)
    ID              reduce using rule 85 (op_r -> LTE_LOG .)


state 145

    (86) op_r -> GTE_LOG .

    LPAREN          reduce using rule 86 (op_r -> GTE_LOG .)
    INT_CTE         reduce using rule 86 (op_r -> GTE_LOG .)
    FLOAT_CTE       reduce using rule 86 (op_r -> GTE_LOG .)
    CHAR_CTE        reduce using rule 86 (op_r -> GTE_LOG .)
    ID              reduce using rule 86 (op_r -> GTE_LOG .)


state 146

    (87) op_r -> NE_LOG .

    LPAREN          reduce using rule 87 (op_r -> NE_LOG .)
    INT_CTE         reduce using rule 87 (op_r -> NE_LOG .)
    FLOAT_CTE       reduce using rule 87 (op_r -> NE_LOG .)
    CHAR_CTE        reduce using rule 87 (op_r -> NE_LOG .)
    ID              reduce using rule 87 (op_r -> NE_LOG .)


state 147

    (88) op_r -> EQUAL_LOG .

    LPAREN          reduce using rule 88 (op_r -> EQUAL_LOG .)
    INT_CTE         reduce using rule 88 (op_r -> EQUAL_LOG .)
    FLOAT_CTE       reduce using rule 88 (op_r -> EQUAL_LOG .)
    CHAR_CTE        reduce using rule 88 (op_r -> EQUAL_LOG .)
    ID              reduce using rule 88 (op_r -> EQUAL_LOG .)


state 148

    (89) exp -> termino exp1 .

    LT_LOG          reduce using rule 89 (exp -> termino exp1 .)
    GT_LOG          reduce using rule 89 (exp -> termino exp1 .)
    LTE_LOG         reduce using rule 89 (exp -> termino exp1 .)
    GTE_LOG         reduce using rule 89 (exp -> termino exp1 .)
    NE_LOG          reduce using rule 89 (exp -> termino exp1 .)
    EQUAL_LOG       reduce using rule 89 (exp -> termino exp1 .)
    AND_LOG         reduce using rule 89 (exp -> termino exp1 .)
    OR_LOG          reduce using rule 89 (exp -> termino exp1 .)
    ASSIGN          reduce using rule 89 (exp -> termino exp1 .)
    COMMA           reduce using rule 89 (exp -> termino exp1 .)
    RBRACK          reduce using rule 89 (exp -> termino exp1 .)
    RPAREN          reduce using rule 89 (exp -> termino exp1 .)
    SEMIC           reduce using rule 89 (exp -> termino exp1 .)
    HASTA           reduce using rule 89 (exp -> termino exp1 .)
    HACER           reduce using rule 89 (exp -> termino exp1 .)


state 149

    (90) exp1 -> op_a . exp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    exp                            shift and go to state 185
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 150

    (91) exp1 -> empty .

    LT_LOG          reduce using rule 91 (exp1 -> empty .)
    GT_LOG          reduce using rule 91 (exp1 -> empty .)
    LTE_LOG         reduce using rule 91 (exp1 -> empty .)
    GTE_LOG         reduce using rule 91 (exp1 -> empty .)
    NE_LOG          reduce using rule 91 (exp1 -> empty .)
    EQUAL_LOG       reduce using rule 91 (exp1 -> empty .)
    AND_LOG         reduce using rule 91 (exp1 -> empty .)
    OR_LOG          reduce using rule 91 (exp1 -> empty .)
    ASSIGN          reduce using rule 91 (exp1 -> empty .)
    COMMA           reduce using rule 91 (exp1 -> empty .)
    RBRACK          reduce using rule 91 (exp1 -> empty .)
    RPAREN          reduce using rule 91 (exp1 -> empty .)
    SEMIC           reduce using rule 91 (exp1 -> empty .)
    HASTA           reduce using rule 91 (exp1 -> empty .)
    HACER           reduce using rule 91 (exp1 -> empty .)


state 151

    (92) op_a -> PLUS_OP .

    LPAREN          reduce using rule 92 (op_a -> PLUS_OP .)
    INT_CTE         reduce using rule 92 (op_a -> PLUS_OP .)
    FLOAT_CTE       reduce using rule 92 (op_a -> PLUS_OP .)
    CHAR_CTE        reduce using rule 92 (op_a -> PLUS_OP .)
    ID              reduce using rule 92 (op_a -> PLUS_OP .)


state 152

    (93) op_a -> MINUS_OP .

    LPAREN          reduce using rule 93 (op_a -> MINUS_OP .)
    INT_CTE         reduce using rule 93 (op_a -> MINUS_OP .)
    FLOAT_CTE       reduce using rule 93 (op_a -> MINUS_OP .)
    CHAR_CTE        reduce using rule 93 (op_a -> MINUS_OP .)
    ID              reduce using rule 93 (op_a -> MINUS_OP .)


state 153

    (94) termino -> factor term .

    PLUS_OP         reduce using rule 94 (termino -> factor term .)
    MINUS_OP        reduce using rule 94 (termino -> factor term .)
    LT_LOG          reduce using rule 94 (termino -> factor term .)
    GT_LOG          reduce using rule 94 (termino -> factor term .)
    LTE_LOG         reduce using rule 94 (termino -> factor term .)
    GTE_LOG         reduce using rule 94 (termino -> factor term .)
    NE_LOG          reduce using rule 94 (termino -> factor term .)
    EQUAL_LOG       reduce using rule 94 (termino -> factor term .)
    AND_LOG         reduce using rule 94 (termino -> factor term .)
    OR_LOG          reduce using rule 94 (termino -> factor term .)
    ASSIGN          reduce using rule 94 (termino -> factor term .)
    COMMA           reduce using rule 94 (termino -> factor term .)
    RBRACK          reduce using rule 94 (termino -> factor term .)
    RPAREN          reduce using rule 94 (termino -> factor term .)
    SEMIC           reduce using rule 94 (termino -> factor term .)
    HASTA           reduce using rule 94 (termino -> factor term .)
    HACER           reduce using rule 94 (termino -> factor term .)


state 154

    (95) term -> op_a1 . termino
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    termino                        shift and go to state 186
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 155

    (96) term -> empty .

    PLUS_OP         reduce using rule 96 (term -> empty .)
    MINUS_OP        reduce using rule 96 (term -> empty .)
    LT_LOG          reduce using rule 96 (term -> empty .)
    GT_LOG          reduce using rule 96 (term -> empty .)
    LTE_LOG         reduce using rule 96 (term -> empty .)
    GTE_LOG         reduce using rule 96 (term -> empty .)
    NE_LOG          reduce using rule 96 (term -> empty .)
    EQUAL_LOG       reduce using rule 96 (term -> empty .)
    AND_LOG         reduce using rule 96 (term -> empty .)
    OR_LOG          reduce using rule 96 (term -> empty .)
    ASSIGN          reduce using rule 96 (term -> empty .)
    COMMA           reduce using rule 96 (term -> empty .)
    RBRACK          reduce using rule 96 (term -> empty .)
    RPAREN          reduce using rule 96 (term -> empty .)
    SEMIC           reduce using rule 96 (term -> empty .)
    HASTA           reduce using rule 96 (term -> empty .)
    HACER           reduce using rule 96 (term -> empty .)


state 156

    (97) op_a1 -> MULT_OP .

    LPAREN          reduce using rule 97 (op_a1 -> MULT_OP .)
    INT_CTE         reduce using rule 97 (op_a1 -> MULT_OP .)
    FLOAT_CTE       reduce using rule 97 (op_a1 -> MULT_OP .)
    CHAR_CTE        reduce using rule 97 (op_a1 -> MULT_OP .)
    ID              reduce using rule 97 (op_a1 -> MULT_OP .)


state 157

    (98) op_a1 -> DIV_OP .

    LPAREN          reduce using rule 98 (op_a1 -> DIV_OP .)
    INT_CTE         reduce using rule 98 (op_a1 -> DIV_OP .)
    FLOAT_CTE       reduce using rule 98 (op_a1 -> DIV_OP .)
    CHAR_CTE        reduce using rule 98 (op_a1 -> DIV_OP .)
    ID              reduce using rule 98 (op_a1 -> DIV_OP .)


state 158

    (100) factor -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 187


state 159

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .

    VOID            reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    INT_TYPE        reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    CHAR_TYPE       reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    FLOAT_TYPE      reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    PRINCIPAL       reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)


state 160

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .

    COMMA           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .)
    SEMIC           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .)


state 161

    (13) DecVarDim3 -> COMMA INT_CTE .

    RBRACK          reduce using rule 13 (DecVarDim3 -> COMMA INT_CTE .)


state 162

    (47) asignacion -> variable ASSIGN pn_Secuencial1 expresion . SEMIC pn_Secuencial2

    SEMIC           shift and go to state 188


state 163

    (56) condicion -> SI LPAREN expresion RPAREN . ENTONCES bloque else

    ENTONCES        shift and go to state 189


state 164

    (71) regresa -> REGRESA LPAREN variable RPAREN . SEMIC

    SEMIC           shift and go to state 190


state 165

    (59) loop_condicional -> MIENTRAS LPAREN expresion RPAREN . HACER bloque

    HACER           shift and go to state 191


state 166

    (60) loop_no_condicional -> DESDE variable ASSIGN expresion . HASTA expresion HACER bloque

    HASTA           shift and go to state 192


state 167

    (65) llamada_funcion -> ID LPAREN llamada_param RPAREN . SEMIC

    SEMIC           shift and go to state 193


state 168

    (32) llamada_param -> expresion llamada_param2 .

    RPAREN          reduce using rule 32 (llamada_param -> expresion llamada_param2 .)


state 169

    (33) llamada_param2 -> COMMA . expresion
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    expresion                      shift and go to state 194
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 170

    (34) llamada_param2 -> empty .

    RPAREN          reduce using rule 34 (llamada_param2 -> empty .)


state 171

    (52) varDim -> LBRACK expresion . varDim2 RBRACK
    (54) varDim2 -> . COMMA expresion
    (55) varDim2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 196
    RBRACK          reduce using rule 103 (empty -> .)

    varDim2                        shift and go to state 195
    empty                          shift and go to state 197

state 172

    (66) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 198


state 173

    (67) escritura2 -> STRING_CTE . pn_Secuencial4 escritura3
    (111) pn_Secuencial4 -> .

    COMMA           reduce using rule 111 (pn_Secuencial4 -> .)
    RPAREN          reduce using rule 111 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 199

state 174

    (68) escritura2 -> expresion . pn_Secuencial4 escritura3
    (111) pn_Secuencial4 -> .

    COMMA           reduce using rule 111 (pn_Secuencial4 -> .)
    RPAREN          reduce using rule 111 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 200

state 175

    (64) lectura -> LEE pn_Secuencial3 LPAREN varLectura . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 201


state 176

    (61) varLectura -> ID . pn_Expresion1 varDim varLectura2
    (109) pn_Expresion1 -> .

    LBRACK          reduce using rule 109 (pn_Expresion1 -> .)
    COMMA           reduce using rule 109 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 109 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 202

state 177

    (25) lista_parametros -> ID parDim COLON tipo lista_parametros2 .

    RPAREN          reduce using rule 25 (lista_parametros -> ID parDim COLON tipo lista_parametros2 .)


state 178

    (26) lista_parametros2 -> COMMA . lista_parametros
    (25) lista_parametros -> . ID parDim COLON tipo lista_parametros2

    ID              shift and go to state 54

    lista_parametros               shift and go to state 203

state 179

    (27) lista_parametros2 -> empty .

    RPAREN          reduce using rule 27 (lista_parametros2 -> empty .)


state 180

    (28) parDim -> LBRACK expresion parDim2 RBRACK .

    COLON           reduce using rule 28 (parDim -> LBRACK expresion parDim2 RBRACK .)


state 181

    (30) parDim2 -> COMMA expresion .

    RBRACK          reduce using rule 30 (parDim2 -> COMMA expresion .)


state 182

    (73) expresion1 -> ASSIGN expresion .

    COMMA           reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    RBRACK          reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    RPAREN          reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    SEMIC           reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    HASTA           reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    HACER           reduce using rule 73 (expresion1 -> ASSIGN expresion .)


state 183

    (76) meg -> op_l mega_exp .

    ASSIGN          reduce using rule 76 (meg -> op_l mega_exp .)
    COMMA           reduce using rule 76 (meg -> op_l mega_exp .)
    RBRACK          reduce using rule 76 (meg -> op_l mega_exp .)
    RPAREN          reduce using rule 76 (meg -> op_l mega_exp .)
    SEMIC           reduce using rule 76 (meg -> op_l mega_exp .)
    HASTA           reduce using rule 76 (meg -> op_l mega_exp .)
    HACER           reduce using rule 76 (meg -> op_l mega_exp .)


state 184

    (81) sp -> op_r exp .

    AND_LOG         reduce using rule 81 (sp -> op_r exp .)
    OR_LOG          reduce using rule 81 (sp -> op_r exp .)
    ASSIGN          reduce using rule 81 (sp -> op_r exp .)
    COMMA           reduce using rule 81 (sp -> op_r exp .)
    RBRACK          reduce using rule 81 (sp -> op_r exp .)
    RPAREN          reduce using rule 81 (sp -> op_r exp .)
    SEMIC           reduce using rule 81 (sp -> op_r exp .)
    HASTA           reduce using rule 81 (sp -> op_r exp .)
    HACER           reduce using rule 81 (sp -> op_r exp .)


state 185

    (90) exp1 -> op_a exp .

    LT_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    GT_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    LTE_LOG         reduce using rule 90 (exp1 -> op_a exp .)
    GTE_LOG         reduce using rule 90 (exp1 -> op_a exp .)
    NE_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    EQUAL_LOG       reduce using rule 90 (exp1 -> op_a exp .)
    AND_LOG         reduce using rule 90 (exp1 -> op_a exp .)
    OR_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    ASSIGN          reduce using rule 90 (exp1 -> op_a exp .)
    COMMA           reduce using rule 90 (exp1 -> op_a exp .)
    RBRACK          reduce using rule 90 (exp1 -> op_a exp .)
    RPAREN          reduce using rule 90 (exp1 -> op_a exp .)
    SEMIC           reduce using rule 90 (exp1 -> op_a exp .)
    HASTA           reduce using rule 90 (exp1 -> op_a exp .)
    HACER           reduce using rule 90 (exp1 -> op_a exp .)


state 186

    (95) term -> op_a1 termino .

    PLUS_OP         reduce using rule 95 (term -> op_a1 termino .)
    MINUS_OP        reduce using rule 95 (term -> op_a1 termino .)
    LT_LOG          reduce using rule 95 (term -> op_a1 termino .)
    GT_LOG          reduce using rule 95 (term -> op_a1 termino .)
    LTE_LOG         reduce using rule 95 (term -> op_a1 termino .)
    GTE_LOG         reduce using rule 95 (term -> op_a1 termino .)
    NE_LOG          reduce using rule 95 (term -> op_a1 termino .)
    EQUAL_LOG       reduce using rule 95 (term -> op_a1 termino .)
    AND_LOG         reduce using rule 95 (term -> op_a1 termino .)
    OR_LOG          reduce using rule 95 (term -> op_a1 termino .)
    ASSIGN          reduce using rule 95 (term -> op_a1 termino .)
    COMMA           reduce using rule 95 (term -> op_a1 termino .)
    RBRACK          reduce using rule 95 (term -> op_a1 termino .)
    RPAREN          reduce using rule 95 (term -> op_a1 termino .)
    SEMIC           reduce using rule 95 (term -> op_a1 termino .)
    HASTA           reduce using rule 95 (term -> op_a1 termino .)
    HACER           reduce using rule 95 (term -> op_a1 termino .)


state 187

    (100) factor -> LPAREN exp RPAREN .

    MULT_OP         reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    DIV_OP          reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    PLUS_OP         reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    MINUS_OP        reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    LT_LOG          reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    GT_LOG          reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    LTE_LOG         reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    GTE_LOG         reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    NE_LOG          reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    EQUAL_LOG       reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    AND_LOG         reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    OR_LOG          reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    ASSIGN          reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    RBRACK          reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    SEMIC           reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    HASTA           reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    HACER           reduce using rule 100 (factor -> LPAREN exp RPAREN .)


state 188

    (47) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC . pn_Secuencial2
    (108) pn_Secuencial2 -> .

    SI              reduce using rule 108 (pn_Secuencial2 -> .)
    REGRESA         reduce using rule 108 (pn_Secuencial2 -> .)
    MIENTRAS        reduce using rule 108 (pn_Secuencial2 -> .)
    DESDE           reduce using rule 108 (pn_Secuencial2 -> .)
    ID              reduce using rule 108 (pn_Secuencial2 -> .)
    ESCRIBE         reduce using rule 108 (pn_Secuencial2 -> .)
    LEE             reduce using rule 108 (pn_Secuencial2 -> .)
    RCURLY          reduce using rule 108 (pn_Secuencial2 -> .)

    pn_Secuencial2                 shift and go to state 204

state 189

    (56) condicion -> SI LPAREN expresion RPAREN ENTONCES . bloque else
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 205

state 190

    (71) regresa -> REGRESA LPAREN variable RPAREN SEMIC .

    SI              reduce using rule 71 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    REGRESA         reduce using rule 71 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    MIENTRAS        reduce using rule 71 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    DESDE           reduce using rule 71 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    ID              reduce using rule 71 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    ESCRIBE         reduce using rule 71 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    LEE             reduce using rule 71 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    RCURLY          reduce using rule 71 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)


state 191

    (59) loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 206

state 192

    (60) loop_no_condicional -> DESDE variable ASSIGN expresion HASTA . expresion HACER bloque
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    variable                       shift and go to state 105
    expresion                      shift and go to state 207
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    llamada_funcion                shift and go to state 106

state 193

    (65) llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .

    SI              reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    REGRESA         reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    MIENTRAS        reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    DESDE           reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    ID              reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    ESCRIBE         reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    LEE             reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    RCURLY          reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    MULT_OP         reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    DIV_OP          reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    PLUS_OP         reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    MINUS_OP        reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    LT_LOG          reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    GT_LOG          reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    LTE_LOG         reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    GTE_LOG         reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    NE_LOG          reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    EQUAL_LOG       reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    AND_LOG         reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    OR_LOG          reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    ASSIGN          reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    COMMA           reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    RBRACK          reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    RPAREN          reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    SEMIC           reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    HASTA           reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    HACER           reduce using rule 65 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)


state 194

    (33) llamada_param2 -> COMMA expresion .

    RPAREN          reduce using rule 33 (llamada_param2 -> COMMA expresion .)


state 195

    (52) varDim -> LBRACK expresion varDim2 . RBRACK

    RBRACK          shift and go to state 208


state 196

    (54) varDim2 -> COMMA . expresion
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    expresion                      shift and go to state 209
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 197

    (55) varDim2 -> empty .

    RBRACK          reduce using rule 55 (varDim2 -> empty .)


state 198

    (66) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 210


state 199

    (67) escritura2 -> STRING_CTE pn_Secuencial4 . escritura3
    (69) escritura3 -> . COMMA escritura2
    (70) escritura3 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 212
    RPAREN          reduce using rule 103 (empty -> .)

    escritura3                     shift and go to state 211
    empty                          shift and go to state 213

state 200

    (68) escritura2 -> expresion pn_Secuencial4 . escritura3
    (69) escritura3 -> . COMMA escritura2
    (70) escritura3 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 212
    RPAREN          reduce using rule 103 (empty -> .)

    escritura3                     shift and go to state 214
    empty                          shift and go to state 213

state 201

    (64) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 215


state 202

    (61) varLectura -> ID pn_Expresion1 . varDim varLectura2
    (52) varDim -> . LBRACK expresion varDim2 RBRACK
    (53) varDim -> . empty
    (103) empty -> .

    LBRACK          shift and go to state 123
    COMMA           reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)

    varDim                         shift and go to state 216
    empty                          shift and go to state 124

state 203

    (26) lista_parametros2 -> COMMA lista_parametros .

    RPAREN          reduce using rule 26 (lista_parametros2 -> COMMA lista_parametros .)


state 204

    (47) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .

    SI              reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    REGRESA         reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    MIENTRAS        reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    DESDE           reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ID              reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ESCRIBE         reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    LEE             reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    RCURLY          reduce using rule 47 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)


state 205

    (56) condicion -> SI LPAREN expresion RPAREN ENTONCES bloque . else
    (57) else -> . SINO bloque
    (58) else -> . empty
    (103) empty -> .

    SINO            shift and go to state 218
    SI              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ESCRIBE         reduce using rule 103 (empty -> .)
    LEE             reduce using rule 103 (empty -> .)
    RCURLY          reduce using rule 103 (empty -> .)

    else                           shift and go to state 217
    empty                          shift and go to state 219

state 206

    (59) loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .

    SI              reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    REGRESA         reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    MIENTRAS        reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    DESDE           reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    ID              reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    ESCRIBE         reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    LEE             reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    RCURLY          reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)


state 207

    (60) loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion . HACER bloque

    HACER           shift and go to state 220


state 208

    (52) varDim -> LBRACK expresion varDim2 RBRACK .

    ASSIGN          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    MULT_OP         reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    DIV_OP          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    PLUS_OP         reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    MINUS_OP        reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    LT_LOG          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    GT_LOG          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    LTE_LOG         reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    GTE_LOG         reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    NE_LOG          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    EQUAL_LOG       reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    AND_LOG         reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    OR_LOG          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    COMMA           reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    RBRACK          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    RPAREN          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    SEMIC           reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    HASTA           reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    HACER           reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)


state 209

    (54) varDim2 -> COMMA expresion .

    RBRACK          reduce using rule 54 (varDim2 -> COMMA expresion .)


state 210

    (66) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC . pn_Secuencial5
    (112) pn_Secuencial5 -> .

    SI              reduce using rule 112 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 112 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 112 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 112 (pn_Secuencial5 -> .)
    ID              reduce using rule 112 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 112 (pn_Secuencial5 -> .)
    LEE             reduce using rule 112 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 112 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 221

state 211

    (67) escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 67 (escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .)


state 212

    (69) escritura3 -> COMMA . escritura2
    (67) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (68) escritura2 -> . expresion pn_Secuencial4 escritura3
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino exp1
    (94) termino -> . factor term
    (99) factor -> . ctes
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    STRING_CTE      shift and go to state 173
    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 107
    FLOAT_CTE       shift and go to state 108
    CHAR_CTE        shift and go to state 109
    ID              shift and go to state 110

    escritura2                     shift and go to state 222
    expresion                      shift and go to state 174
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 105
    llamada_funcion                shift and go to state 106

state 213

    (70) escritura3 -> empty .

    RPAREN          reduce using rule 70 (escritura3 -> empty .)


state 214

    (68) escritura2 -> expresion pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 68 (escritura2 -> expresion pn_Secuencial4 escritura3 .)


state 215

    (64) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC . pn_Secuencial5
    (112) pn_Secuencial5 -> .

    SI              reduce using rule 112 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 112 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 112 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 112 (pn_Secuencial5 -> .)
    ID              reduce using rule 112 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 112 (pn_Secuencial5 -> .)
    LEE             reduce using rule 112 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 112 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 223

state 216

    (61) varLectura -> ID pn_Expresion1 varDim . varLectura2
    (62) varLectura2 -> . COMMA pn_Secuencial4 varLectura
    (63) varLectura2 -> . empty pn_Secuencial4
    (103) empty -> .

    COMMA           shift and go to state 225
    RPAREN          reduce using rule 103 (empty -> .)

    varLectura2                    shift and go to state 224
    empty                          shift and go to state 226

state 217

    (56) condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .

    SI              reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    REGRESA         reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    MIENTRAS        reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    DESDE           reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    ID              reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    ESCRIBE         reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    LEE             reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    RCURLY          reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)


state 218

    (57) else -> SINO . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 227

state 219

    (58) else -> empty .

    SI              reduce using rule 58 (else -> empty .)
    REGRESA         reduce using rule 58 (else -> empty .)
    MIENTRAS        reduce using rule 58 (else -> empty .)
    DESDE           reduce using rule 58 (else -> empty .)
    ID              reduce using rule 58 (else -> empty .)
    ESCRIBE         reduce using rule 58 (else -> empty .)
    LEE             reduce using rule 58 (else -> empty .)
    RCURLY          reduce using rule 58 (else -> empty .)


state 220

    (60) loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 228

state 221

    (66) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 66 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 66 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 66 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 66 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 66 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 66 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 66 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 66 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)


state 222

    (69) escritura3 -> COMMA escritura2 .

    RPAREN          reduce using rule 69 (escritura3 -> COMMA escritura2 .)


state 223

    (64) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 64 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 64 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 64 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 64 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 64 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 64 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 64 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 64 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)


state 224

    (61) varLectura -> ID pn_Expresion1 varDim varLectura2 .

    RPAREN          reduce using rule 61 (varLectura -> ID pn_Expresion1 varDim varLectura2 .)


state 225

    (62) varLectura2 -> COMMA . pn_Secuencial4 varLectura
    (111) pn_Secuencial4 -> .

    ID              reduce using rule 111 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 229

state 226

    (63) varLectura2 -> empty . pn_Secuencial4
    (111) pn_Secuencial4 -> .

    RPAREN          reduce using rule 111 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 230

state 227

    (57) else -> SINO bloque .

    SI              reduce using rule 57 (else -> SINO bloque .)
    REGRESA         reduce using rule 57 (else -> SINO bloque .)
    MIENTRAS        reduce using rule 57 (else -> SINO bloque .)
    DESDE           reduce using rule 57 (else -> SINO bloque .)
    ID              reduce using rule 57 (else -> SINO bloque .)
    ESCRIBE         reduce using rule 57 (else -> SINO bloque .)
    LEE             reduce using rule 57 (else -> SINO bloque .)
    RCURLY          reduce using rule 57 (else -> SINO bloque .)


state 228

    (60) loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .

    SI              reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    REGRESA         reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    MIENTRAS        reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    DESDE           reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    ID              reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    ESCRIBE         reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    LEE             reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    RCURLY          reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)


state 229

    (62) varLectura2 -> COMMA pn_Secuencial4 . varLectura
    (61) varLectura -> . ID pn_Expresion1 varDim varLectura2

    ID              shift and go to state 176

    varLectura                     shift and go to state 231

state 230

    (63) varLectura2 -> empty pn_Secuencial4 .

    RPAREN          reduce using rule 63 (varLectura2 -> empty pn_Secuencial4 .)


state 231

    (62) varLectura2 -> COMMA pn_Secuencial4 varLectura .

    RPAREN          reduce using rule 62 (varLectura2 -> COMMA pn_Secuencial4 varLectura .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT_TYPE in state 34 resolved as shift
WARNING: shift/reduce conflict for CHAR_TYPE in state 34 resolved as shift
WARNING: shift/reduce conflict for FLOAT_TYPE in state 34 resolved as shift
