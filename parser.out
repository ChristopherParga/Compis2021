Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    NEW_LINE
    STRING_TYPE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal
Rule 2     dec_variables -> VARIABLES dec_variables2
Rule 3     dec_variables -> empty
Rule 4     dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3
Rule 5     dec_variables3 -> dec_variables2
Rule 6     dec_variables3 -> empty
Rule 7     lista_ids -> ID pn_AddVariable DecVarDim lista_ids2
Rule 8     lista_ids2 -> COMMA lista_ids
Rule 9     lista_ids2 -> empty
Rule 10    DecVarDim -> DecVarDim2 pn_VarDim
Rule 11    DecVarDim -> empty
Rule 12    DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
Rule 13    DecVarDim3 -> COMMA INT_CTE
Rule 14    DecVarDim3 -> empty
Rule 15    tipo -> INT_TYPE pn_SetCurrentType
Rule 16    tipo -> CHAR_TYPE pn_SetCurrentType
Rule 17    tipo -> FLOAT_TYPE pn_SetCurrentType
Rule 18    dec_funciones -> dec_funciones2 dec_funciones
Rule 19    dec_funciones -> empty
Rule 20    dec_funciones2 -> tipo dec_funciones3
Rule 21    dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3
Rule 22    dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
Rule 23    dec_funcion_param -> lista_parametros
Rule 24    dec_funcion_param -> empty
Rule 25    lista_parametros -> tipo ID pn_Funcion1 lista_parametros2
Rule 26    lista_parametros2 -> COMMA lista_parametros
Rule 27    lista_parametros2 -> empty
Rule 28    principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque
Rule 29    bloque -> LCURLY estatutos RCURLY
Rule 30    estatutos -> estatuto estatutos
Rule 31    estatutos -> empty
Rule 32    estatuto -> asignacion
Rule 33    estatuto -> condicion
Rule 34    estatuto -> regresa
Rule 35    estatuto -> loop_condicional
Rule 36    estatuto -> loop_no_condicional
Rule 37    estatuto -> llamada_funcion
Rule 38    estatuto -> escritura
Rule 39    estatuto -> lectura
Rule 40    asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
Rule 41    ctes -> CHAR_CTE pn_CTEChar
Rule 42    ctes -> STRING_CTE pn_CTEString
Rule 43    ctes -> MINUS_OP pn_CTENeg num
Rule 44    ctes -> num
Rule 45    num -> INT_CTE pn_CTEInt
Rule 46    num -> FLOAT_CTE pn_CTEFloat
Rule 47    variable -> ID pn_Expresion1 varDim
Rule 48    varDim -> LBRACK expresion varDim2 RBRACK
Rule 49    varDim -> empty
Rule 50    varDim2 -> COMMA expresion
Rule 51    varDim2 -> empty
Rule 52    condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
Rule 53    else -> SINO pn_Condicion3 bloque
Rule 54    else -> empty
Rule 55    loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
Rule 56    loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
Rule 57    varLectura -> ID pn_Expresion1 varDim varLectura2
Rule 58    varLectura2 -> COMMA pn_Secuencial4 varLectura
Rule 59    varLectura2 -> empty pn_Secuencial4
Rule 60    lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
Rule 61    llamada_param -> expresion pn_FuncionLlamada2 llamada_param2
Rule 62    llamada_param -> empty
Rule 63    llamada_param2 -> COMMA llamada_param
Rule 64    llamada_param2 -> empty
Rule 65    llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
Rule 66    regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
Rule 67    escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
Rule 68    escritura2 -> STRING_CTE pn_Secuencial4 escritura3
Rule 69    escritura2 -> expresion pn_Secuencial4 escritura3
Rule 70    escritura3 -> COMMA escritura2
Rule 71    escritura3 -> empty
Rule 72    expresion -> mega_exp expresion1
Rule 73    expresion1 -> ASSIGN expresion
Rule 74    expresion1 -> empty
Rule 75    mega_exp -> super_exp meg
Rule 76    meg -> op_l pn_Expresion10 mega_exp pn_Expresion11
Rule 77    meg -> empty
Rule 78    op_l -> AND_LOG
Rule 79    op_l -> OR_LOG
Rule 80    super_exp -> exp sp
Rule 81    sp -> op_r exp pn_Expresion9
Rule 82    sp -> empty
Rule 83    op_r -> LT_LOG pn_Expresion8
Rule 84    op_r -> GT_LOG pn_Expresion8
Rule 85    op_r -> LTE_LOG pn_Expresion8
Rule 86    op_r -> GTE_LOG pn_Expresion8
Rule 87    op_r -> NE_LOG pn_Expresion8
Rule 88    op_r -> EQUAL_LOG pn_Expresion8
Rule 89    exp -> termino pn_Expresion4 exp1
Rule 90    exp1 -> op_a exp
Rule 91    exp1 -> empty
Rule 92    op_a -> PLUS_OP pn_Expresion2
Rule 93    op_a -> MINUS_OP pn_Expresion2
Rule 94    termino -> factor pn_Expresion5 term
Rule 95    term -> op_a1 termino
Rule 96    term -> empty
Rule 97    op_a1 -> MULT_OP pn_Expresion3
Rule 98    op_a1 -> DIV_OP pn_Expresion3
Rule 99    factor -> ctes
Rule 100   factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
Rule 101   factor -> variable
Rule 102   factor -> llamada_funcion
Rule 103   empty -> <empty>
Rule 104   pn_GOTOprincipal -> <empty>
Rule 105   pn_Principal1 -> <empty>
Rule 106   pn_AddFunc -> <empty>
Rule 107   pn_Funcion1 -> <empty>
Rule 108   pn_Funcion2 -> <empty>
Rule 109   pn_Funcion3 -> <empty>
Rule 110   pn_FuncionLlamada1 -> <empty>
Rule 111   pn_FuncionLlamada2 -> <empty>
Rule 112   pn_FuncionLlamada3 -> <empty>
Rule 113   pn_CTENeg -> <empty>
Rule 114   pn_CTEInt -> <empty>
Rule 115   pn_CTEFloat -> <empty>
Rule 116   pn_CTEChar -> <empty>
Rule 117   pn_CTEString -> <empty>
Rule 118   pn_Expresion1 -> <empty>
Rule 119   pn_Expresion2 -> <empty>
Rule 120   pn_Expresion3 -> <empty>
Rule 121   pn_Expresion4 -> <empty>
Rule 122   pn_Expresion5 -> <empty>
Rule 123   pn_Expresion6 -> <empty>
Rule 124   pn_Expresion7 -> <empty>
Rule 125   pn_Expresion8 -> <empty>
Rule 126   pn_Expresion9 -> <empty>
Rule 127   pn_Expresion10 -> <empty>
Rule 128   pn_Expresion11 -> <empty>
Rule 129   pn_Secuencial1 -> <empty>
Rule 130   pn_Secuencial2 -> <empty>
Rule 131   pn_Secuencial3 -> <empty>
Rule 132   pn_Secuencial4 -> <empty>
Rule 133   pn_Secuencial5 -> <empty>
Rule 134   pn_Regresa -> <empty>
Rule 135   pn_Condicion1 -> <empty>
Rule 136   pn_Condicion2 -> <empty>
Rule 137   pn_Condicion3 -> <empty>
Rule 138   pn_loop_condicional1 -> <empty>
Rule 139   pn_loop_condicional2 -> <empty>
Rule 140   pn_loop_condicional3 -> <empty>
Rule 141   pn_loop_no_condicional1 -> <empty>
Rule 142   pn_loop_no_condicional2 -> <empty>
Rule 143   pn_loop_no_condicional3 -> <empty>
Rule 144   pn_loop_no_condicional4 -> <empty>
Rule 145   pn_loop_no_condicional5 -> <empty>
Rule 146   pn_SetCurrentType -> <empty>
Rule 147   pn_AddVariable -> <empty>
Rule 148   pn_VarDim2 -> <empty>
Rule 149   pn_VarDim3 -> <empty>
Rule 150   pn_VarDim4 -> <empty>
Rule 151   pn_VarDim -> <empty>

Terminals, with rules where they appear

AND_LOG              : 78
ASSIGN               : 40 56 73
CHAR_CTE             : 41
CHAR_TYPE            : 16
COLON                : 4
COMMA                : 8 13 26 50 58 63 70
COMMENT              : 
DESDE                : 56
DIV_OP               : 98
ENTONCES             : 52
EQUAL_LOG            : 88
ESCRIBE              : 67
FLOAT_CTE            : 46
FLOAT_TYPE           : 17
FUNCION              : 22
GTE_LOG              : 86
GT_LOG               : 84
HACER                : 55 56
HASTA                : 56
ID                   : 1 7 22 25 47 57 65
INT_CTE              : 12 13 45
INT_TYPE             : 15
LBRACK               : 12 48
LCURLY               : 29
LEE                  : 60
LPAREN               : 22 28 52 55 60 65 66 67 100
LTE_LOG              : 85
LT_LOG               : 83
MIENTRAS             : 55
MINUS_OP             : 43 93
MULT_OP              : 97
NEW_LINE             : 
NE_LOG               : 87
OR_LOG               : 79
PLUS_OP              : 92
PRINCIPAL            : 28
PROGRAMA             : 1
RBRACK               : 12 48
RCURLY               : 29
REGRESA              : 66
RPAREN               : 22 28 52 55 60 65 66 67 100
SEMIC                : 1 4 40 60 65 66 67
SI                   : 52
SINO                 : 53
STRING_CTE           : 42 68
STRING_TYPE          : 
VARIABLES            : 2
VOID                 : 21
error                : 

Nonterminals, with rules where they appear

DecVarDim            : 7
DecVarDim2           : 10
DecVarDim3           : 12
asignacion           : 32
bloque               : 22 28 52 53 55 56
condicion            : 33
ctes                 : 99
dec_funcion_param    : 22
dec_funciones        : 1 18
dec_funciones2       : 18
dec_funciones3       : 20 21
dec_variables        : 1 22
dec_variables2       : 2 5
dec_variables3       : 4
else                 : 52
empty                : 3 6 9 11 14 19 24 27 31 49 51 54 59 62 64 71 74 77 82 91 96
escritura            : 38
escritura2           : 67 70
escritura3           : 68 69
estatuto             : 30
estatutos            : 29 30
exp                  : 66 80 81 90 100
exp1                 : 89
expresion            : 40 48 50 52 55 56 56 61 69 73
expresion1           : 72
factor               : 94
lectura              : 39
lista_ids            : 4 8
lista_ids2           : 7
lista_parametros     : 23 26
lista_parametros2    : 25
llamada_funcion      : 37 102
llamada_param        : 63 65
llamada_param2       : 61
loop_condicional     : 35
loop_no_condicional  : 36
meg                  : 75
mega_exp             : 72 76
num                  : 43 44
op_a                 : 90
op_a1                : 95
op_l                 : 76
op_r                 : 81
pn_AddFunc           : 22
pn_AddVariable       : 7
pn_CTEChar           : 41
pn_CTEFloat          : 46
pn_CTEInt            : 45
pn_CTENeg            : 43
pn_CTEString         : 42
pn_Condicion1        : 52
pn_Condicion2        : 52
pn_Condicion3        : 53
pn_Expresion1        : 47 57
pn_Expresion10       : 76
pn_Expresion11       : 76
pn_Expresion2        : 92 93
pn_Expresion3        : 97 98
pn_Expresion4        : 89
pn_Expresion5        : 94
pn_Expresion6        : 65 100
pn_Expresion7        : 65 100
pn_Expresion8        : 83 84 85 86 87 88
pn_Expresion9        : 81
pn_Funcion1          : 25
pn_Funcion2          : 22
pn_Funcion3          : 22
pn_FuncionLlamada1   : 65
pn_FuncionLlamada2   : 61
pn_FuncionLlamada3   : 65
pn_GOTOprincipal     : 1
pn_Principal1        : 28
pn_Regresa           : 66
pn_Secuencial1       : 40 56
pn_Secuencial2       : 40
pn_Secuencial3       : 60 66 67
pn_Secuencial4       : 58 59 68 69
pn_Secuencial5       : 60 67
pn_SetCurrentType    : 15 16 17 21
pn_VarDim            : 10
pn_VarDim2           : 12
pn_VarDim3           : 12
pn_VarDim4           : 
pn_loop_condicional1 : 55
pn_loop_condicional2 : 55
pn_loop_condicional3 : 55
pn_loop_no_condicional1 : 56
pn_loop_no_condicional2 : 56
pn_loop_no_condicional3 : 56
pn_loop_no_condicional4 : 56
pn_loop_no_condicional5 : 56
principal            : 1
programa             : 0
regresa              : 34
sp                   : 80
super_exp            : 75
term                 : 94
termino              : 89 95
tipo                 : 4 20 25
varDim               : 47 57
varDim2              : 48
varLectura           : 58 60
varLectura2          : 57
variable             : 40 56 101

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    SEMIC           shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMIC . dec_variables pn_GOTOprincipal dec_funciones principal
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (103) empty -> .

    VARIABLES       shift and go to state 6
    VOID            reduce using rule 103 (empty -> .)
    INT_TYPE        reduce using rule 103 (empty -> .)
    CHAR_TYPE       reduce using rule 103 (empty -> .)
    FLOAT_TYPE      reduce using rule 103 (empty -> .)
    PRINCIPAL       reduce using rule 103 (empty -> .)

    dec_variables                  shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMIC dec_variables . pn_GOTOprincipal dec_funciones principal
    (104) pn_GOTOprincipal -> .

    VOID            reduce using rule 104 (pn_GOTOprincipal -> .)
    INT_TYPE        reduce using rule 104 (pn_GOTOprincipal -> .)
    CHAR_TYPE       reduce using rule 104 (pn_GOTOprincipal -> .)
    FLOAT_TYPE      reduce using rule 104 (pn_GOTOprincipal -> .)
    PRINCIPAL       reduce using rule 104 (pn_GOTOprincipal -> .)

    pn_GOTOprincipal               shift and go to state 8

state 6

    (2) dec_variables -> VARIABLES . dec_variables2
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_variables2                 shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (3) dec_variables -> empty .

    VOID            reduce using rule 3 (dec_variables -> empty .)
    INT_TYPE        reduce using rule 3 (dec_variables -> empty .)
    CHAR_TYPE       reduce using rule 3 (dec_variables -> empty .)
    FLOAT_TYPE      reduce using rule 3 (dec_variables -> empty .)
    PRINCIPAL       reduce using rule 3 (dec_variables -> empty .)
    LCURLY          reduce using rule 3 (dec_variables -> empty .)


state 8

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal . dec_funciones principal
    (18) dec_funciones -> . dec_funciones2 dec_funciones
    (19) dec_funciones -> . empty
    (20) dec_funciones2 -> . tipo dec_funciones3
    (21) dec_funciones2 -> . VOID pn_SetCurrentType dec_funciones3
    (103) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 18
    PRINCIPAL       reduce using rule 103 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_funciones                  shift and go to state 14
    dec_funciones2                 shift and go to state 15
    empty                          shift and go to state 16
    tipo                           shift and go to state 17

state 9

    (2) dec_variables -> VARIABLES dec_variables2 .

    VOID            reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    INT_TYPE        reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    CHAR_TYPE       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    FLOAT_TYPE      reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    PRINCIPAL       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    LCURLY          reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)


state 10

    (4) dec_variables2 -> tipo . COLON lista_ids SEMIC dec_variables3

    COLON           shift and go to state 19


state 11

    (15) tipo -> INT_TYPE . pn_SetCurrentType
    (146) pn_SetCurrentType -> .

    COLON           reduce using rule 146 (pn_SetCurrentType -> .)
    FUNCION         reduce using rule 146 (pn_SetCurrentType -> .)
    ID              reduce using rule 146 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 20

state 12

    (16) tipo -> CHAR_TYPE . pn_SetCurrentType
    (146) pn_SetCurrentType -> .

    COLON           reduce using rule 146 (pn_SetCurrentType -> .)
    FUNCION         reduce using rule 146 (pn_SetCurrentType -> .)
    ID              reduce using rule 146 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 21

state 13

    (17) tipo -> FLOAT_TYPE . pn_SetCurrentType
    (146) pn_SetCurrentType -> .

    COLON           reduce using rule 146 (pn_SetCurrentType -> .)
    FUNCION         reduce using rule 146 (pn_SetCurrentType -> .)
    ID              reduce using rule 146 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 22

state 14

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones . principal
    (28) principal -> . PRINCIPAL pn_Principal1 LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 24

    principal                      shift and go to state 23

state 15

    (18) dec_funciones -> dec_funciones2 . dec_funciones
    (18) dec_funciones -> . dec_funciones2 dec_funciones
    (19) dec_funciones -> . empty
    (20) dec_funciones2 -> . tipo dec_funciones3
    (21) dec_funciones2 -> . VOID pn_SetCurrentType dec_funciones3
    (103) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 18
    PRINCIPAL       reduce using rule 103 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_funciones2                 shift and go to state 15
    dec_funciones                  shift and go to state 25
    empty                          shift and go to state 16
    tipo                           shift and go to state 17

state 16

    (19) dec_funciones -> empty .

    PRINCIPAL       reduce using rule 19 (dec_funciones -> empty .)


state 17

    (20) dec_funciones2 -> tipo . dec_funciones3
    (22) dec_funciones3 -> . FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    FUNCION         shift and go to state 27

    dec_funciones3                 shift and go to state 26

state 18

    (21) dec_funciones2 -> VOID . pn_SetCurrentType dec_funciones3
    (146) pn_SetCurrentType -> .

    FUNCION         reduce using rule 146 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 28

state 19

    (4) dec_variables2 -> tipo COLON . lista_ids SEMIC dec_variables3
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 30

    lista_ids                      shift and go to state 29

state 20

    (15) tipo -> INT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    FUNCION         reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    ID              reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)


state 21

    (16) tipo -> CHAR_TYPE pn_SetCurrentType .

    COLON           reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    FUNCION         reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    ID              reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)


state 22

    (17) tipo -> FLOAT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    FUNCION         reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    ID              reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)


state 23

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .)


state 24

    (28) principal -> PRINCIPAL . pn_Principal1 LPAREN RPAREN bloque
    (105) pn_Principal1 -> .

    LPAREN          reduce using rule 105 (pn_Principal1 -> .)

    pn_Principal1                  shift and go to state 31

state 25

    (18) dec_funciones -> dec_funciones2 dec_funciones .

    PRINCIPAL       reduce using rule 18 (dec_funciones -> dec_funciones2 dec_funciones .)


state 26

    (20) dec_funciones2 -> tipo dec_funciones3 .

    VOID            reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    INT_TYPE        reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    CHAR_TYPE       reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    FLOAT_TYPE      reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    PRINCIPAL       reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)


state 27

    (22) dec_funciones3 -> FUNCION . ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    ID              shift and go to state 32


state 28

    (21) dec_funciones2 -> VOID pn_SetCurrentType . dec_funciones3
    (22) dec_funciones3 -> . FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    FUNCION         shift and go to state 27

    dec_funciones3                 shift and go to state 33

state 29

    (4) dec_variables2 -> tipo COLON lista_ids . SEMIC dec_variables3

    SEMIC           shift and go to state 34


state 30

    (7) lista_ids -> ID . pn_AddVariable DecVarDim lista_ids2
    (147) pn_AddVariable -> .

    LBRACK          reduce using rule 147 (pn_AddVariable -> .)
    COMMA           reduce using rule 147 (pn_AddVariable -> .)
    SEMIC           reduce using rule 147 (pn_AddVariable -> .)

    pn_AddVariable                 shift and go to state 35

state 31

    (28) principal -> PRINCIPAL pn_Principal1 . LPAREN RPAREN bloque

    LPAREN          shift and go to state 36


state 32

    (22) dec_funciones3 -> FUNCION ID . pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (106) pn_AddFunc -> .

    LPAREN          reduce using rule 106 (pn_AddFunc -> .)

    pn_AddFunc                     shift and go to state 37

state 33

    (21) dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .

    VOID            reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    INT_TYPE        reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    CHAR_TYPE       reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    FLOAT_TYPE      reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    PRINCIPAL       reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)


state 34

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC . dec_variables3
    (5) dec_variables3 -> . dec_variables2
    (6) dec_variables3 -> . empty
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (103) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for CHAR_TYPE resolved as shift
  ! shift/reduce conflict for FLOAT_TYPE resolved as shift
    VOID            reduce using rule 103 (empty -> .)
    PRINCIPAL       reduce using rule 103 (empty -> .)
    LCURLY          reduce using rule 103 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

  ! INT_TYPE        [ reduce using rule 103 (empty -> .) ]
  ! CHAR_TYPE       [ reduce using rule 103 (empty -> .) ]
  ! FLOAT_TYPE      [ reduce using rule 103 (empty -> .) ]

    tipo                           shift and go to state 10
    dec_variables3                 shift and go to state 38
    dec_variables2                 shift and go to state 39
    empty                          shift and go to state 40

state 35

    (7) lista_ids -> ID pn_AddVariable . DecVarDim lista_ids2
    (10) DecVarDim -> . DecVarDim2 pn_VarDim
    (11) DecVarDim -> . empty
    (12) DecVarDim2 -> . LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
    (103) empty -> .

    LBRACK          shift and go to state 44
    COMMA           reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)

    DecVarDim                      shift and go to state 41
    DecVarDim2                     shift and go to state 42
    empty                          shift and go to state 43

state 36

    (28) principal -> PRINCIPAL pn_Principal1 LPAREN . RPAREN bloque

    RPAREN          shift and go to state 45


state 37

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc . LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    LPAREN          shift and go to state 46


state 38

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .

    VOID            reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    INT_TYPE        reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    CHAR_TYPE       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    FLOAT_TYPE      reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    PRINCIPAL       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    LCURLY          reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)


state 39

    (5) dec_variables3 -> dec_variables2 .

    VOID            reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    INT_TYPE        reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    CHAR_TYPE       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    FLOAT_TYPE      reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    PRINCIPAL       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    LCURLY          reduce using rule 5 (dec_variables3 -> dec_variables2 .)


state 40

    (6) dec_variables3 -> empty .

    VOID            reduce using rule 6 (dec_variables3 -> empty .)
    INT_TYPE        reduce using rule 6 (dec_variables3 -> empty .)
    CHAR_TYPE       reduce using rule 6 (dec_variables3 -> empty .)
    FLOAT_TYPE      reduce using rule 6 (dec_variables3 -> empty .)
    PRINCIPAL       reduce using rule 6 (dec_variables3 -> empty .)
    LCURLY          reduce using rule 6 (dec_variables3 -> empty .)


state 41

    (7) lista_ids -> ID pn_AddVariable DecVarDim . lista_ids2
    (8) lista_ids2 -> . COMMA lista_ids
    (9) lista_ids2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 48
    SEMIC           reduce using rule 103 (empty -> .)

    lista_ids2                     shift and go to state 47
    empty                          shift and go to state 49

state 42

    (10) DecVarDim -> DecVarDim2 . pn_VarDim
    (151) pn_VarDim -> .

    COMMA           reduce using rule 151 (pn_VarDim -> .)
    SEMIC           reduce using rule 151 (pn_VarDim -> .)

    pn_VarDim                      shift and go to state 50

state 43

    (11) DecVarDim -> empty .

    COMMA           reduce using rule 11 (DecVarDim -> empty .)
    SEMIC           reduce using rule 11 (DecVarDim -> empty .)


state 44

    (12) DecVarDim2 -> LBRACK . pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK
    (148) pn_VarDim2 -> .

    INT_CTE         reduce using rule 148 (pn_VarDim2 -> .)

    pn_VarDim2                     shift and go to state 51

state 45

    (28) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN . bloque
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 52

state 46

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN . dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (23) dec_funcion_param -> . lista_parametros
    (24) dec_funcion_param -> . empty
    (25) lista_parametros -> . tipo ID pn_Funcion1 lista_parametros2
    (103) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    RPAREN          reduce using rule 103 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_funcion_param              shift and go to state 54
    lista_parametros               shift and go to state 55
    empty                          shift and go to state 56
    tipo                           shift and go to state 57

state 47

    (7) lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .

    SEMIC           reduce using rule 7 (lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .)


state 48

    (8) lista_ids2 -> COMMA . lista_ids
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 30

    lista_ids                      shift and go to state 58

state 49

    (9) lista_ids2 -> empty .

    SEMIC           reduce using rule 9 (lista_ids2 -> empty .)


state 50

    (10) DecVarDim -> DecVarDim2 pn_VarDim .

    COMMA           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)
    SEMIC           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)


state 51

    (12) DecVarDim2 -> LBRACK pn_VarDim2 . INT_CTE pn_VarDim3 DecVarDim3 RBRACK

    INT_CTE         shift and go to state 59


state 52

    (28) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .

    $end            reduce using rule 28 (principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .)


state 53

    (29) bloque -> LCURLY . estatutos RCURLY
    (30) estatutos -> . estatuto estatutos
    (31) estatutos -> . empty
    (32) estatuto -> . asignacion
    (33) estatuto -> . condicion
    (34) estatuto -> . regresa
    (35) estatuto -> . loop_condicional
    (36) estatuto -> . loop_no_condicional
    (37) estatuto -> . llamada_funcion
    (38) estatuto -> . escritura
    (39) estatuto -> . lectura
    (103) empty -> .
    (40) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (52) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (66) regresa -> . REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (55) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (56) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (67) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (60) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (47) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 103 (empty -> .)
    SI              shift and go to state 72
    REGRESA         shift and go to state 73
    MIENTRAS        shift and go to state 74
    DESDE           shift and go to state 75
    ID              shift and go to state 76
    ESCRIBE         shift and go to state 77
    LEE             shift and go to state 78

    estatutos                      shift and go to state 60
    estatuto                       shift and go to state 61
    empty                          shift and go to state 62
    asignacion                     shift and go to state 63
    condicion                      shift and go to state 64
    regresa                        shift and go to state 65
    loop_condicional               shift and go to state 66
    loop_no_condicional            shift and go to state 67
    llamada_funcion                shift and go to state 68
    escritura                      shift and go to state 69
    lectura                        shift and go to state 70
    variable                       shift and go to state 71

state 54

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param . RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    RPAREN          shift and go to state 79


state 55

    (23) dec_funcion_param -> lista_parametros .

    RPAREN          reduce using rule 23 (dec_funcion_param -> lista_parametros .)


state 56

    (24) dec_funcion_param -> empty .

    RPAREN          reduce using rule 24 (dec_funcion_param -> empty .)


state 57

    (25) lista_parametros -> tipo . ID pn_Funcion1 lista_parametros2

    ID              shift and go to state 80


state 58

    (8) lista_ids2 -> COMMA lista_ids .

    SEMIC           reduce using rule 8 (lista_ids2 -> COMMA lista_ids .)


state 59

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE . pn_VarDim3 DecVarDim3 RBRACK
    (149) pn_VarDim3 -> .

    COMMA           reduce using rule 149 (pn_VarDim3 -> .)
    RBRACK          reduce using rule 149 (pn_VarDim3 -> .)

    pn_VarDim3                     shift and go to state 81

state 60

    (29) bloque -> LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 82


state 61

    (30) estatutos -> estatuto . estatutos
    (30) estatutos -> . estatuto estatutos
    (31) estatutos -> . empty
    (32) estatuto -> . asignacion
    (33) estatuto -> . condicion
    (34) estatuto -> . regresa
    (35) estatuto -> . loop_condicional
    (36) estatuto -> . loop_no_condicional
    (37) estatuto -> . llamada_funcion
    (38) estatuto -> . escritura
    (39) estatuto -> . lectura
    (103) empty -> .
    (40) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (52) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (66) regresa -> . REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (55) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (56) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (67) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (60) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (47) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 103 (empty -> .)
    SI              shift and go to state 72
    REGRESA         shift and go to state 73
    MIENTRAS        shift and go to state 74
    DESDE           shift and go to state 75
    ID              shift and go to state 76
    ESCRIBE         shift and go to state 77
    LEE             shift and go to state 78

    estatuto                       shift and go to state 61
    estatutos                      shift and go to state 83
    empty                          shift and go to state 62
    asignacion                     shift and go to state 63
    condicion                      shift and go to state 64
    regresa                        shift and go to state 65
    loop_condicional               shift and go to state 66
    loop_no_condicional            shift and go to state 67
    llamada_funcion                shift and go to state 68
    escritura                      shift and go to state 69
    lectura                        shift and go to state 70
    variable                       shift and go to state 71

state 62

    (31) estatutos -> empty .

    RCURLY          reduce using rule 31 (estatutos -> empty .)


state 63

    (32) estatuto -> asignacion .

    SI              reduce using rule 32 (estatuto -> asignacion .)
    REGRESA         reduce using rule 32 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 32 (estatuto -> asignacion .)
    DESDE           reduce using rule 32 (estatuto -> asignacion .)
    ID              reduce using rule 32 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 32 (estatuto -> asignacion .)
    LEE             reduce using rule 32 (estatuto -> asignacion .)
    RCURLY          reduce using rule 32 (estatuto -> asignacion .)


state 64

    (33) estatuto -> condicion .

    SI              reduce using rule 33 (estatuto -> condicion .)
    REGRESA         reduce using rule 33 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 33 (estatuto -> condicion .)
    DESDE           reduce using rule 33 (estatuto -> condicion .)
    ID              reduce using rule 33 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 33 (estatuto -> condicion .)
    LEE             reduce using rule 33 (estatuto -> condicion .)
    RCURLY          reduce using rule 33 (estatuto -> condicion .)


state 65

    (34) estatuto -> regresa .

    SI              reduce using rule 34 (estatuto -> regresa .)
    REGRESA         reduce using rule 34 (estatuto -> regresa .)
    MIENTRAS        reduce using rule 34 (estatuto -> regresa .)
    DESDE           reduce using rule 34 (estatuto -> regresa .)
    ID              reduce using rule 34 (estatuto -> regresa .)
    ESCRIBE         reduce using rule 34 (estatuto -> regresa .)
    LEE             reduce using rule 34 (estatuto -> regresa .)
    RCURLY          reduce using rule 34 (estatuto -> regresa .)


state 66

    (35) estatuto -> loop_condicional .

    SI              reduce using rule 35 (estatuto -> loop_condicional .)
    REGRESA         reduce using rule 35 (estatuto -> loop_condicional .)
    MIENTRAS        reduce using rule 35 (estatuto -> loop_condicional .)
    DESDE           reduce using rule 35 (estatuto -> loop_condicional .)
    ID              reduce using rule 35 (estatuto -> loop_condicional .)
    ESCRIBE         reduce using rule 35 (estatuto -> loop_condicional .)
    LEE             reduce using rule 35 (estatuto -> loop_condicional .)
    RCURLY          reduce using rule 35 (estatuto -> loop_condicional .)


state 67

    (36) estatuto -> loop_no_condicional .

    SI              reduce using rule 36 (estatuto -> loop_no_condicional .)
    REGRESA         reduce using rule 36 (estatuto -> loop_no_condicional .)
    MIENTRAS        reduce using rule 36 (estatuto -> loop_no_condicional .)
    DESDE           reduce using rule 36 (estatuto -> loop_no_condicional .)
    ID              reduce using rule 36 (estatuto -> loop_no_condicional .)
    ESCRIBE         reduce using rule 36 (estatuto -> loop_no_condicional .)
    LEE             reduce using rule 36 (estatuto -> loop_no_condicional .)
    RCURLY          reduce using rule 36 (estatuto -> loop_no_condicional .)


state 68

    (37) estatuto -> llamada_funcion .

    SI              reduce using rule 37 (estatuto -> llamada_funcion .)
    REGRESA         reduce using rule 37 (estatuto -> llamada_funcion .)
    MIENTRAS        reduce using rule 37 (estatuto -> llamada_funcion .)
    DESDE           reduce using rule 37 (estatuto -> llamada_funcion .)
    ID              reduce using rule 37 (estatuto -> llamada_funcion .)
    ESCRIBE         reduce using rule 37 (estatuto -> llamada_funcion .)
    LEE             reduce using rule 37 (estatuto -> llamada_funcion .)
    RCURLY          reduce using rule 37 (estatuto -> llamada_funcion .)


state 69

    (38) estatuto -> escritura .

    SI              reduce using rule 38 (estatuto -> escritura .)
    REGRESA         reduce using rule 38 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 38 (estatuto -> escritura .)
    DESDE           reduce using rule 38 (estatuto -> escritura .)
    ID              reduce using rule 38 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 38 (estatuto -> escritura .)
    LEE             reduce using rule 38 (estatuto -> escritura .)
    RCURLY          reduce using rule 38 (estatuto -> escritura .)


state 70

    (39) estatuto -> lectura .

    SI              reduce using rule 39 (estatuto -> lectura .)
    REGRESA         reduce using rule 39 (estatuto -> lectura .)
    MIENTRAS        reduce using rule 39 (estatuto -> lectura .)
    DESDE           reduce using rule 39 (estatuto -> lectura .)
    ID              reduce using rule 39 (estatuto -> lectura .)
    ESCRIBE         reduce using rule 39 (estatuto -> lectura .)
    LEE             reduce using rule 39 (estatuto -> lectura .)
    RCURLY          reduce using rule 39 (estatuto -> lectura .)


state 71

    (40) asignacion -> variable . ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2

    ASSIGN          shift and go to state 84


state 72

    (52) condicion -> SI . LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    LPAREN          shift and go to state 85


state 73

    (66) regresa -> REGRESA . pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (131) pn_Secuencial3 -> .

    LPAREN          reduce using rule 131 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 86

state 74

    (55) loop_condicional -> MIENTRAS . pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (138) pn_loop_condicional1 -> .

    LPAREN          reduce using rule 138 (pn_loop_condicional1 -> .)

    pn_loop_condicional1           shift and go to state 87

state 75

    (56) loop_no_condicional -> DESDE . pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (141) pn_loop_no_condicional1 -> .

    ID              reduce using rule 141 (pn_loop_no_condicional1 -> .)

    pn_loop_no_condicional1        shift and go to state 88

state 76

    (65) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (47) variable -> ID . pn_Expresion1 varDim
    (110) pn_FuncionLlamada1 -> .
    (118) pn_Expresion1 -> .

    LPAREN          reduce using rule 110 (pn_FuncionLlamada1 -> .)
    LBRACK          reduce using rule 118 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 118 (pn_Expresion1 -> .)

    pn_FuncionLlamada1             shift and go to state 89
    pn_Expresion1                  shift and go to state 90

state 77

    (67) escritura -> ESCRIBE . pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (131) pn_Secuencial3 -> .

    LPAREN          reduce using rule 131 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 91

state 78

    (60) lectura -> LEE . pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (131) pn_Secuencial3 -> .

    LPAREN          reduce using rule 131 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 92

state 79

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN . pn_Funcion2 dec_variables bloque pn_Funcion3
    (108) pn_Funcion2 -> .

    VARIABLES       reduce using rule 108 (pn_Funcion2 -> .)
    LCURLY          reduce using rule 108 (pn_Funcion2 -> .)

    pn_Funcion2                    shift and go to state 93

state 80

    (25) lista_parametros -> tipo ID . pn_Funcion1 lista_parametros2
    (107) pn_Funcion1 -> .

    COMMA           reduce using rule 107 (pn_Funcion1 -> .)
    RPAREN          reduce using rule 107 (pn_Funcion1 -> .)

    pn_Funcion1                    shift and go to state 94

state 81

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 . DecVarDim3 RBRACK
    (13) DecVarDim3 -> . COMMA INT_CTE
    (14) DecVarDim3 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 96
    RBRACK          reduce using rule 103 (empty -> .)

    DecVarDim3                     shift and go to state 95
    empty                          shift and go to state 97

state 82

    (29) bloque -> LCURLY estatutos RCURLY .

    $end            reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    VOID            reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    INT_TYPE        reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    CHAR_TYPE       reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    FLOAT_TYPE      reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    PRINCIPAL       reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    SINO            reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    SI              reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    REGRESA         reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    MIENTRAS        reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    DESDE           reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    ID              reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    ESCRIBE         reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    LEE             reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 29 (bloque -> LCURLY estatutos RCURLY .)


state 83

    (30) estatutos -> estatuto estatutos .

    RCURLY          reduce using rule 30 (estatutos -> estatuto estatutos .)


state 84

    (40) asignacion -> variable ASSIGN . pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (129) pn_Secuencial1 -> .

    LPAREN          reduce using rule 129 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 129 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 129 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 129 (pn_Secuencial1 -> .)
    ID              reduce using rule 129 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 129 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 129 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 98

state 85

    (52) condicion -> SI LPAREN . expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    expresion                      shift and go to state 100
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 86

    (66) regresa -> REGRESA pn_Secuencial3 . LPAREN exp RPAREN pn_Regresa SEMIC

    LPAREN          shift and go to state 116


state 87

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 . LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    LPAREN          shift and go to state 117


state 88

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 . variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (47) variable -> . ID pn_Expresion1 varDim

    ID              shift and go to state 119

    variable                       shift and go to state 118

state 89

    (65) llamada_funcion -> ID pn_FuncionLlamada1 . LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC

    LPAREN          shift and go to state 120


state 90

    (47) variable -> ID pn_Expresion1 . varDim
    (48) varDim -> . LBRACK expresion varDim2 RBRACK
    (49) varDim -> . empty
    (103) empty -> .

    LBRACK          shift and go to state 122
    ASSIGN          reduce using rule 103 (empty -> .)
    MULT_OP         reduce using rule 103 (empty -> .)
    DIV_OP          reduce using rule 103 (empty -> .)
    PLUS_OP         reduce using rule 103 (empty -> .)
    MINUS_OP        reduce using rule 103 (empty -> .)
    LT_LOG          reduce using rule 103 (empty -> .)
    GT_LOG          reduce using rule 103 (empty -> .)
    LTE_LOG         reduce using rule 103 (empty -> .)
    GTE_LOG         reduce using rule 103 (empty -> .)
    NE_LOG          reduce using rule 103 (empty -> .)
    EQUAL_LOG       reduce using rule 103 (empty -> .)
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    varDim                         shift and go to state 121
    empty                          shift and go to state 123

state 91

    (67) escritura -> ESCRIBE pn_Secuencial3 . LPAREN escritura2 RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 124


state 92

    (60) lectura -> LEE pn_Secuencial3 . LPAREN varLectura RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 125


state 93

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 . dec_variables bloque pn_Funcion3
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (103) empty -> .

    VARIABLES       shift and go to state 6
    LCURLY          reduce using rule 103 (empty -> .)

    dec_variables                  shift and go to state 126
    empty                          shift and go to state 7

state 94

    (25) lista_parametros -> tipo ID pn_Funcion1 . lista_parametros2
    (26) lista_parametros2 -> . COMMA lista_parametros
    (27) lista_parametros2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 128
    RPAREN          reduce using rule 103 (empty -> .)

    lista_parametros2              shift and go to state 127
    empty                          shift and go to state 129

state 95

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 . RBRACK

    RBRACK          shift and go to state 130


state 96

    (13) DecVarDim3 -> COMMA . INT_CTE

    INT_CTE         shift and go to state 131


state 97

    (14) DecVarDim3 -> empty .

    RBRACK          reduce using rule 14 (DecVarDim3 -> empty .)


state 98

    (40) asignacion -> variable ASSIGN pn_Secuencial1 . expresion SEMIC pn_Secuencial2
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    variable                       shift and go to state 107
    expresion                      shift and go to state 132
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 99

    (100) factor -> LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7
    (123) pn_Expresion6 -> .

    LPAREN          reduce using rule 123 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 123 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 123 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 123 (pn_Expresion6 -> .)
    ID              reduce using rule 123 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 123 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 123 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 133

state 100

    (52) condicion -> SI LPAREN expresion . RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    RPAREN          shift and go to state 134


state 101

    (72) expresion -> mega_exp . expresion1
    (73) expresion1 -> . ASSIGN expresion
    (74) expresion1 -> . empty
    (103) empty -> .

    ASSIGN          shift and go to state 136
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    expresion1                     shift and go to state 135
    empty                          shift and go to state 137

state 102

    (75) mega_exp -> super_exp . meg
    (76) meg -> . op_l pn_Expresion10 mega_exp pn_Expresion11
    (77) meg -> . empty
    (78) op_l -> . AND_LOG
    (79) op_l -> . OR_LOG
    (103) empty -> .

    AND_LOG         shift and go to state 141
    OR_LOG          shift and go to state 142
    ASSIGN          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    meg                            shift and go to state 138
    op_l                           shift and go to state 139
    empty                          shift and go to state 140

state 103

    (80) super_exp -> exp . sp
    (81) sp -> . op_r exp pn_Expresion9
    (82) sp -> . empty
    (83) op_r -> . LT_LOG pn_Expresion8
    (84) op_r -> . GT_LOG pn_Expresion8
    (85) op_r -> . LTE_LOG pn_Expresion8
    (86) op_r -> . GTE_LOG pn_Expresion8
    (87) op_r -> . NE_LOG pn_Expresion8
    (88) op_r -> . EQUAL_LOG pn_Expresion8
    (103) empty -> .

    LT_LOG          shift and go to state 146
    GT_LOG          shift and go to state 147
    LTE_LOG         shift and go to state 148
    GTE_LOG         shift and go to state 149
    NE_LOG          shift and go to state 150
    EQUAL_LOG       shift and go to state 151
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    ASSIGN          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    sp                             shift and go to state 143
    op_r                           shift and go to state 144
    empty                          shift and go to state 145

state 104

    (89) exp -> termino . pn_Expresion4 exp1
    (121) pn_Expresion4 -> .

    PLUS_OP         reduce using rule 121 (pn_Expresion4 -> .)
    MINUS_OP        reduce using rule 121 (pn_Expresion4 -> .)
    LT_LOG          reduce using rule 121 (pn_Expresion4 -> .)
    GT_LOG          reduce using rule 121 (pn_Expresion4 -> .)
    LTE_LOG         reduce using rule 121 (pn_Expresion4 -> .)
    GTE_LOG         reduce using rule 121 (pn_Expresion4 -> .)
    NE_LOG          reduce using rule 121 (pn_Expresion4 -> .)
    EQUAL_LOG       reduce using rule 121 (pn_Expresion4 -> .)
    AND_LOG         reduce using rule 121 (pn_Expresion4 -> .)
    OR_LOG          reduce using rule 121 (pn_Expresion4 -> .)
    ASSIGN          reduce using rule 121 (pn_Expresion4 -> .)
    RPAREN          reduce using rule 121 (pn_Expresion4 -> .)
    SEMIC           reduce using rule 121 (pn_Expresion4 -> .)
    COMMA           reduce using rule 121 (pn_Expresion4 -> .)
    RBRACK          reduce using rule 121 (pn_Expresion4 -> .)
    HASTA           reduce using rule 121 (pn_Expresion4 -> .)
    HACER           reduce using rule 121 (pn_Expresion4 -> .)

    pn_Expresion4                  shift and go to state 152

state 105

    (94) termino -> factor . pn_Expresion5 term
    (122) pn_Expresion5 -> .

    MULT_OP         reduce using rule 122 (pn_Expresion5 -> .)
    DIV_OP          reduce using rule 122 (pn_Expresion5 -> .)
    PLUS_OP         reduce using rule 122 (pn_Expresion5 -> .)
    MINUS_OP        reduce using rule 122 (pn_Expresion5 -> .)
    LT_LOG          reduce using rule 122 (pn_Expresion5 -> .)
    GT_LOG          reduce using rule 122 (pn_Expresion5 -> .)
    LTE_LOG         reduce using rule 122 (pn_Expresion5 -> .)
    GTE_LOG         reduce using rule 122 (pn_Expresion5 -> .)
    NE_LOG          reduce using rule 122 (pn_Expresion5 -> .)
    EQUAL_LOG       reduce using rule 122 (pn_Expresion5 -> .)
    AND_LOG         reduce using rule 122 (pn_Expresion5 -> .)
    OR_LOG          reduce using rule 122 (pn_Expresion5 -> .)
    ASSIGN          reduce using rule 122 (pn_Expresion5 -> .)
    RPAREN          reduce using rule 122 (pn_Expresion5 -> .)
    SEMIC           reduce using rule 122 (pn_Expresion5 -> .)
    COMMA           reduce using rule 122 (pn_Expresion5 -> .)
    RBRACK          reduce using rule 122 (pn_Expresion5 -> .)
    HASTA           reduce using rule 122 (pn_Expresion5 -> .)
    HACER           reduce using rule 122 (pn_Expresion5 -> .)

    pn_Expresion5                  shift and go to state 153

state 106

    (99) factor -> ctes .

    MULT_OP         reduce using rule 99 (factor -> ctes .)
    DIV_OP          reduce using rule 99 (factor -> ctes .)
    PLUS_OP         reduce using rule 99 (factor -> ctes .)
    MINUS_OP        reduce using rule 99 (factor -> ctes .)
    LT_LOG          reduce using rule 99 (factor -> ctes .)
    GT_LOG          reduce using rule 99 (factor -> ctes .)
    LTE_LOG         reduce using rule 99 (factor -> ctes .)
    GTE_LOG         reduce using rule 99 (factor -> ctes .)
    NE_LOG          reduce using rule 99 (factor -> ctes .)
    EQUAL_LOG       reduce using rule 99 (factor -> ctes .)
    AND_LOG         reduce using rule 99 (factor -> ctes .)
    OR_LOG          reduce using rule 99 (factor -> ctes .)
    ASSIGN          reduce using rule 99 (factor -> ctes .)
    RPAREN          reduce using rule 99 (factor -> ctes .)
    SEMIC           reduce using rule 99 (factor -> ctes .)
    COMMA           reduce using rule 99 (factor -> ctes .)
    RBRACK          reduce using rule 99 (factor -> ctes .)
    HASTA           reduce using rule 99 (factor -> ctes .)
    HACER           reduce using rule 99 (factor -> ctes .)


state 107

    (101) factor -> variable .

    MULT_OP         reduce using rule 101 (factor -> variable .)
    DIV_OP          reduce using rule 101 (factor -> variable .)
    PLUS_OP         reduce using rule 101 (factor -> variable .)
    MINUS_OP        reduce using rule 101 (factor -> variable .)
    LT_LOG          reduce using rule 101 (factor -> variable .)
    GT_LOG          reduce using rule 101 (factor -> variable .)
    LTE_LOG         reduce using rule 101 (factor -> variable .)
    GTE_LOG         reduce using rule 101 (factor -> variable .)
    NE_LOG          reduce using rule 101 (factor -> variable .)
    EQUAL_LOG       reduce using rule 101 (factor -> variable .)
    AND_LOG         reduce using rule 101 (factor -> variable .)
    OR_LOG          reduce using rule 101 (factor -> variable .)
    ASSIGN          reduce using rule 101 (factor -> variable .)
    RPAREN          reduce using rule 101 (factor -> variable .)
    SEMIC           reduce using rule 101 (factor -> variable .)
    COMMA           reduce using rule 101 (factor -> variable .)
    RBRACK          reduce using rule 101 (factor -> variable .)
    HASTA           reduce using rule 101 (factor -> variable .)
    HACER           reduce using rule 101 (factor -> variable .)


state 108

    (102) factor -> llamada_funcion .

    MULT_OP         reduce using rule 102 (factor -> llamada_funcion .)
    DIV_OP          reduce using rule 102 (factor -> llamada_funcion .)
    PLUS_OP         reduce using rule 102 (factor -> llamada_funcion .)
    MINUS_OP        reduce using rule 102 (factor -> llamada_funcion .)
    LT_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    GT_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    LTE_LOG         reduce using rule 102 (factor -> llamada_funcion .)
    GTE_LOG         reduce using rule 102 (factor -> llamada_funcion .)
    NE_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    EQUAL_LOG       reduce using rule 102 (factor -> llamada_funcion .)
    AND_LOG         reduce using rule 102 (factor -> llamada_funcion .)
    OR_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    ASSIGN          reduce using rule 102 (factor -> llamada_funcion .)
    RPAREN          reduce using rule 102 (factor -> llamada_funcion .)
    SEMIC           reduce using rule 102 (factor -> llamada_funcion .)
    COMMA           reduce using rule 102 (factor -> llamada_funcion .)
    RBRACK          reduce using rule 102 (factor -> llamada_funcion .)
    HASTA           reduce using rule 102 (factor -> llamada_funcion .)
    HACER           reduce using rule 102 (factor -> llamada_funcion .)


state 109

    (41) ctes -> CHAR_CTE . pn_CTEChar
    (116) pn_CTEChar -> .

    MULT_OP         reduce using rule 116 (pn_CTEChar -> .)
    DIV_OP          reduce using rule 116 (pn_CTEChar -> .)
    PLUS_OP         reduce using rule 116 (pn_CTEChar -> .)
    MINUS_OP        reduce using rule 116 (pn_CTEChar -> .)
    LT_LOG          reduce using rule 116 (pn_CTEChar -> .)
    GT_LOG          reduce using rule 116 (pn_CTEChar -> .)
    LTE_LOG         reduce using rule 116 (pn_CTEChar -> .)
    GTE_LOG         reduce using rule 116 (pn_CTEChar -> .)
    NE_LOG          reduce using rule 116 (pn_CTEChar -> .)
    EQUAL_LOG       reduce using rule 116 (pn_CTEChar -> .)
    AND_LOG         reduce using rule 116 (pn_CTEChar -> .)
    OR_LOG          reduce using rule 116 (pn_CTEChar -> .)
    ASSIGN          reduce using rule 116 (pn_CTEChar -> .)
    RPAREN          reduce using rule 116 (pn_CTEChar -> .)
    SEMIC           reduce using rule 116 (pn_CTEChar -> .)
    COMMA           reduce using rule 116 (pn_CTEChar -> .)
    RBRACK          reduce using rule 116 (pn_CTEChar -> .)
    HASTA           reduce using rule 116 (pn_CTEChar -> .)
    HACER           reduce using rule 116 (pn_CTEChar -> .)

    pn_CTEChar                     shift and go to state 154

state 110

    (42) ctes -> STRING_CTE . pn_CTEString
    (117) pn_CTEString -> .

    MULT_OP         reduce using rule 117 (pn_CTEString -> .)
    DIV_OP          reduce using rule 117 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 117 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 117 (pn_CTEString -> .)
    LT_LOG          reduce using rule 117 (pn_CTEString -> .)
    GT_LOG          reduce using rule 117 (pn_CTEString -> .)
    LTE_LOG         reduce using rule 117 (pn_CTEString -> .)
    GTE_LOG         reduce using rule 117 (pn_CTEString -> .)
    NE_LOG          reduce using rule 117 (pn_CTEString -> .)
    EQUAL_LOG       reduce using rule 117 (pn_CTEString -> .)
    AND_LOG         reduce using rule 117 (pn_CTEString -> .)
    OR_LOG          reduce using rule 117 (pn_CTEString -> .)
    ASSIGN          reduce using rule 117 (pn_CTEString -> .)
    RPAREN          reduce using rule 117 (pn_CTEString -> .)
    SEMIC           reduce using rule 117 (pn_CTEString -> .)
    COMMA           reduce using rule 117 (pn_CTEString -> .)
    RBRACK          reduce using rule 117 (pn_CTEString -> .)
    HASTA           reduce using rule 117 (pn_CTEString -> .)
    HACER           reduce using rule 117 (pn_CTEString -> .)

    pn_CTEString                   shift and go to state 155

state 111

    (43) ctes -> MINUS_OP . pn_CTENeg num
    (113) pn_CTENeg -> .

    INT_CTE         reduce using rule 113 (pn_CTENeg -> .)
    FLOAT_CTE       reduce using rule 113 (pn_CTENeg -> .)

    pn_CTENeg                      shift and go to state 156

state 112

    (44) ctes -> num .

    MULT_OP         reduce using rule 44 (ctes -> num .)
    DIV_OP          reduce using rule 44 (ctes -> num .)
    PLUS_OP         reduce using rule 44 (ctes -> num .)
    MINUS_OP        reduce using rule 44 (ctes -> num .)
    LT_LOG          reduce using rule 44 (ctes -> num .)
    GT_LOG          reduce using rule 44 (ctes -> num .)
    LTE_LOG         reduce using rule 44 (ctes -> num .)
    GTE_LOG         reduce using rule 44 (ctes -> num .)
    NE_LOG          reduce using rule 44 (ctes -> num .)
    EQUAL_LOG       reduce using rule 44 (ctes -> num .)
    AND_LOG         reduce using rule 44 (ctes -> num .)
    OR_LOG          reduce using rule 44 (ctes -> num .)
    ASSIGN          reduce using rule 44 (ctes -> num .)
    RPAREN          reduce using rule 44 (ctes -> num .)
    SEMIC           reduce using rule 44 (ctes -> num .)
    COMMA           reduce using rule 44 (ctes -> num .)
    RBRACK          reduce using rule 44 (ctes -> num .)
    HASTA           reduce using rule 44 (ctes -> num .)
    HACER           reduce using rule 44 (ctes -> num .)


state 113

    (47) variable -> ID . pn_Expresion1 varDim
    (65) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (118) pn_Expresion1 -> .
    (110) pn_FuncionLlamada1 -> .

    LBRACK          reduce using rule 118 (pn_Expresion1 -> .)
    MULT_OP         reduce using rule 118 (pn_Expresion1 -> .)
    DIV_OP          reduce using rule 118 (pn_Expresion1 -> .)
    PLUS_OP         reduce using rule 118 (pn_Expresion1 -> .)
    MINUS_OP        reduce using rule 118 (pn_Expresion1 -> .)
    LT_LOG          reduce using rule 118 (pn_Expresion1 -> .)
    GT_LOG          reduce using rule 118 (pn_Expresion1 -> .)
    LTE_LOG         reduce using rule 118 (pn_Expresion1 -> .)
    GTE_LOG         reduce using rule 118 (pn_Expresion1 -> .)
    NE_LOG          reduce using rule 118 (pn_Expresion1 -> .)
    EQUAL_LOG       reduce using rule 118 (pn_Expresion1 -> .)
    AND_LOG         reduce using rule 118 (pn_Expresion1 -> .)
    OR_LOG          reduce using rule 118 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 118 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 118 (pn_Expresion1 -> .)
    SEMIC           reduce using rule 118 (pn_Expresion1 -> .)
    COMMA           reduce using rule 118 (pn_Expresion1 -> .)
    RBRACK          reduce using rule 118 (pn_Expresion1 -> .)
    HASTA           reduce using rule 118 (pn_Expresion1 -> .)
    HACER           reduce using rule 118 (pn_Expresion1 -> .)
    LPAREN          reduce using rule 110 (pn_FuncionLlamada1 -> .)

    pn_Expresion1                  shift and go to state 90
    pn_FuncionLlamada1             shift and go to state 89

state 114

    (45) num -> INT_CTE . pn_CTEInt
    (114) pn_CTEInt -> .

    MULT_OP         reduce using rule 114 (pn_CTEInt -> .)
    DIV_OP          reduce using rule 114 (pn_CTEInt -> .)
    PLUS_OP         reduce using rule 114 (pn_CTEInt -> .)
    MINUS_OP        reduce using rule 114 (pn_CTEInt -> .)
    LT_LOG          reduce using rule 114 (pn_CTEInt -> .)
    GT_LOG          reduce using rule 114 (pn_CTEInt -> .)
    LTE_LOG         reduce using rule 114 (pn_CTEInt -> .)
    GTE_LOG         reduce using rule 114 (pn_CTEInt -> .)
    NE_LOG          reduce using rule 114 (pn_CTEInt -> .)
    EQUAL_LOG       reduce using rule 114 (pn_CTEInt -> .)
    AND_LOG         reduce using rule 114 (pn_CTEInt -> .)
    OR_LOG          reduce using rule 114 (pn_CTEInt -> .)
    ASSIGN          reduce using rule 114 (pn_CTEInt -> .)
    RPAREN          reduce using rule 114 (pn_CTEInt -> .)
    SEMIC           reduce using rule 114 (pn_CTEInt -> .)
    COMMA           reduce using rule 114 (pn_CTEInt -> .)
    RBRACK          reduce using rule 114 (pn_CTEInt -> .)
    HASTA           reduce using rule 114 (pn_CTEInt -> .)
    HACER           reduce using rule 114 (pn_CTEInt -> .)

    pn_CTEInt                      shift and go to state 157

state 115

    (46) num -> FLOAT_CTE . pn_CTEFloat
    (115) pn_CTEFloat -> .

    MULT_OP         reduce using rule 115 (pn_CTEFloat -> .)
    DIV_OP          reduce using rule 115 (pn_CTEFloat -> .)
    PLUS_OP         reduce using rule 115 (pn_CTEFloat -> .)
    MINUS_OP        reduce using rule 115 (pn_CTEFloat -> .)
    LT_LOG          reduce using rule 115 (pn_CTEFloat -> .)
    GT_LOG          reduce using rule 115 (pn_CTEFloat -> .)
    LTE_LOG         reduce using rule 115 (pn_CTEFloat -> .)
    GTE_LOG         reduce using rule 115 (pn_CTEFloat -> .)
    NE_LOG          reduce using rule 115 (pn_CTEFloat -> .)
    EQUAL_LOG       reduce using rule 115 (pn_CTEFloat -> .)
    AND_LOG         reduce using rule 115 (pn_CTEFloat -> .)
    OR_LOG          reduce using rule 115 (pn_CTEFloat -> .)
    ASSIGN          reduce using rule 115 (pn_CTEFloat -> .)
    RPAREN          reduce using rule 115 (pn_CTEFloat -> .)
    SEMIC           reduce using rule 115 (pn_CTEFloat -> .)
    COMMA           reduce using rule 115 (pn_CTEFloat -> .)
    RBRACK          reduce using rule 115 (pn_CTEFloat -> .)
    HASTA           reduce using rule 115 (pn_CTEFloat -> .)
    HACER           reduce using rule 115 (pn_CTEFloat -> .)

    pn_CTEFloat                    shift and go to state 158

state 116

    (66) regresa -> REGRESA pn_Secuencial3 LPAREN . exp RPAREN pn_Regresa SEMIC
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    exp                            shift and go to state 159
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 117

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN . expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    expresion                      shift and go to state 160
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 118

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable . ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    ASSIGN          shift and go to state 161


state 119

    (47) variable -> ID . pn_Expresion1 varDim
    (118) pn_Expresion1 -> .

    LBRACK          reduce using rule 118 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 118 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 90

state 120

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN . pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (123) pn_Expresion6 -> .

    LPAREN          reduce using rule 123 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 123 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 123 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 123 (pn_Expresion6 -> .)
    ID              reduce using rule 123 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 123 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 123 (pn_Expresion6 -> .)
    RPAREN          reduce using rule 123 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 162

state 121

    (47) variable -> ID pn_Expresion1 varDim .

    ASSIGN          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    MULT_OP         reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    DIV_OP          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    PLUS_OP         reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    MINUS_OP        reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    LT_LOG          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    GT_LOG          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    LTE_LOG         reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    GTE_LOG         reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    NE_LOG          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    EQUAL_LOG       reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    AND_LOG         reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    OR_LOG          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    RPAREN          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    SEMIC           reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    COMMA           reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    RBRACK          reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    HASTA           reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)
    HACER           reduce using rule 47 (variable -> ID pn_Expresion1 varDim .)


state 122

    (48) varDim -> LBRACK . expresion varDim2 RBRACK
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    expresion                      shift and go to state 163
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 123

    (49) varDim -> empty .

    ASSIGN          reduce using rule 49 (varDim -> empty .)
    MULT_OP         reduce using rule 49 (varDim -> empty .)
    DIV_OP          reduce using rule 49 (varDim -> empty .)
    PLUS_OP         reduce using rule 49 (varDim -> empty .)
    MINUS_OP        reduce using rule 49 (varDim -> empty .)
    LT_LOG          reduce using rule 49 (varDim -> empty .)
    GT_LOG          reduce using rule 49 (varDim -> empty .)
    LTE_LOG         reduce using rule 49 (varDim -> empty .)
    GTE_LOG         reduce using rule 49 (varDim -> empty .)
    NE_LOG          reduce using rule 49 (varDim -> empty .)
    EQUAL_LOG       reduce using rule 49 (varDim -> empty .)
    AND_LOG         reduce using rule 49 (varDim -> empty .)
    OR_LOG          reduce using rule 49 (varDim -> empty .)
    RPAREN          reduce using rule 49 (varDim -> empty .)
    SEMIC           reduce using rule 49 (varDim -> empty .)
    COMMA           reduce using rule 49 (varDim -> empty .)
    RBRACK          reduce using rule 49 (varDim -> empty .)
    HASTA           reduce using rule 49 (varDim -> empty .)
    HACER           reduce using rule 49 (varDim -> empty .)


state 124

    (67) escritura -> ESCRIBE pn_Secuencial3 LPAREN . escritura2 RPAREN SEMIC pn_Secuencial5
    (68) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (69) escritura2 -> . expresion pn_Secuencial4 escritura3
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 165
    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    escritura2                     shift and go to state 164
    expresion                      shift and go to state 166
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 125

    (60) lectura -> LEE pn_Secuencial3 LPAREN . varLectura RPAREN SEMIC pn_Secuencial5
    (57) varLectura -> . ID pn_Expresion1 varDim varLectura2

    ID              shift and go to state 168

    varLectura                     shift and go to state 167

state 126

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables . bloque pn_Funcion3
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 169

state 127

    (25) lista_parametros -> tipo ID pn_Funcion1 lista_parametros2 .

    RPAREN          reduce using rule 25 (lista_parametros -> tipo ID pn_Funcion1 lista_parametros2 .)


state 128

    (26) lista_parametros2 -> COMMA . lista_parametros
    (25) lista_parametros -> . tipo ID pn_Funcion1 lista_parametros2
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    lista_parametros               shift and go to state 170
    tipo                           shift and go to state 57

state 129

    (27) lista_parametros2 -> empty .

    RPAREN          reduce using rule 27 (lista_parametros2 -> empty .)


state 130

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .

    COMMA           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .)
    SEMIC           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 DecVarDim3 RBRACK .)


state 131

    (13) DecVarDim3 -> COMMA INT_CTE .

    RBRACK          reduce using rule 13 (DecVarDim3 -> COMMA INT_CTE .)


state 132

    (40) asignacion -> variable ASSIGN pn_Secuencial1 expresion . SEMIC pn_Secuencial2

    SEMIC           shift and go to state 171


state 133

    (100) factor -> LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    exp                            shift and go to state 172
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 134

    (52) condicion -> SI LPAREN expresion RPAREN . pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (135) pn_Condicion1 -> .

    ENTONCES        reduce using rule 135 (pn_Condicion1 -> .)

    pn_Condicion1                  shift and go to state 173

state 135

    (72) expresion -> mega_exp expresion1 .

    RPAREN          reduce using rule 72 (expresion -> mega_exp expresion1 .)
    SEMIC           reduce using rule 72 (expresion -> mega_exp expresion1 .)
    COMMA           reduce using rule 72 (expresion -> mega_exp expresion1 .)
    RBRACK          reduce using rule 72 (expresion -> mega_exp expresion1 .)
    HASTA           reduce using rule 72 (expresion -> mega_exp expresion1 .)
    HACER           reduce using rule 72 (expresion -> mega_exp expresion1 .)


state 136

    (73) expresion1 -> ASSIGN . expresion
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    expresion                      shift and go to state 174
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 137

    (74) expresion1 -> empty .

    RPAREN          reduce using rule 74 (expresion1 -> empty .)
    SEMIC           reduce using rule 74 (expresion1 -> empty .)
    COMMA           reduce using rule 74 (expresion1 -> empty .)
    RBRACK          reduce using rule 74 (expresion1 -> empty .)
    HASTA           reduce using rule 74 (expresion1 -> empty .)
    HACER           reduce using rule 74 (expresion1 -> empty .)


state 138

    (75) mega_exp -> super_exp meg .

    ASSIGN          reduce using rule 75 (mega_exp -> super_exp meg .)
    RPAREN          reduce using rule 75 (mega_exp -> super_exp meg .)
    SEMIC           reduce using rule 75 (mega_exp -> super_exp meg .)
    COMMA           reduce using rule 75 (mega_exp -> super_exp meg .)
    RBRACK          reduce using rule 75 (mega_exp -> super_exp meg .)
    HASTA           reduce using rule 75 (mega_exp -> super_exp meg .)
    HACER           reduce using rule 75 (mega_exp -> super_exp meg .)


state 139

    (76) meg -> op_l . pn_Expresion10 mega_exp pn_Expresion11
    (127) pn_Expresion10 -> .

    LPAREN          reduce using rule 127 (pn_Expresion10 -> .)
    CHAR_CTE        reduce using rule 127 (pn_Expresion10 -> .)
    STRING_CTE      reduce using rule 127 (pn_Expresion10 -> .)
    MINUS_OP        reduce using rule 127 (pn_Expresion10 -> .)
    ID              reduce using rule 127 (pn_Expresion10 -> .)
    INT_CTE         reduce using rule 127 (pn_Expresion10 -> .)
    FLOAT_CTE       reduce using rule 127 (pn_Expresion10 -> .)

    pn_Expresion10                 shift and go to state 175

state 140

    (77) meg -> empty .

    ASSIGN          reduce using rule 77 (meg -> empty .)
    RPAREN          reduce using rule 77 (meg -> empty .)
    SEMIC           reduce using rule 77 (meg -> empty .)
    COMMA           reduce using rule 77 (meg -> empty .)
    RBRACK          reduce using rule 77 (meg -> empty .)
    HASTA           reduce using rule 77 (meg -> empty .)
    HACER           reduce using rule 77 (meg -> empty .)


state 141

    (78) op_l -> AND_LOG .

    LPAREN          reduce using rule 78 (op_l -> AND_LOG .)
    CHAR_CTE        reduce using rule 78 (op_l -> AND_LOG .)
    STRING_CTE      reduce using rule 78 (op_l -> AND_LOG .)
    MINUS_OP        reduce using rule 78 (op_l -> AND_LOG .)
    ID              reduce using rule 78 (op_l -> AND_LOG .)
    INT_CTE         reduce using rule 78 (op_l -> AND_LOG .)
    FLOAT_CTE       reduce using rule 78 (op_l -> AND_LOG .)


state 142

    (79) op_l -> OR_LOG .

    LPAREN          reduce using rule 79 (op_l -> OR_LOG .)
    CHAR_CTE        reduce using rule 79 (op_l -> OR_LOG .)
    STRING_CTE      reduce using rule 79 (op_l -> OR_LOG .)
    MINUS_OP        reduce using rule 79 (op_l -> OR_LOG .)
    ID              reduce using rule 79 (op_l -> OR_LOG .)
    INT_CTE         reduce using rule 79 (op_l -> OR_LOG .)
    FLOAT_CTE       reduce using rule 79 (op_l -> OR_LOG .)


state 143

    (80) super_exp -> exp sp .

    AND_LOG         reduce using rule 80 (super_exp -> exp sp .)
    OR_LOG          reduce using rule 80 (super_exp -> exp sp .)
    ASSIGN          reduce using rule 80 (super_exp -> exp sp .)
    RPAREN          reduce using rule 80 (super_exp -> exp sp .)
    SEMIC           reduce using rule 80 (super_exp -> exp sp .)
    COMMA           reduce using rule 80 (super_exp -> exp sp .)
    RBRACK          reduce using rule 80 (super_exp -> exp sp .)
    HASTA           reduce using rule 80 (super_exp -> exp sp .)
    HACER           reduce using rule 80 (super_exp -> exp sp .)


state 144

    (81) sp -> op_r . exp pn_Expresion9
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    exp                            shift and go to state 176
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 145

    (82) sp -> empty .

    AND_LOG         reduce using rule 82 (sp -> empty .)
    OR_LOG          reduce using rule 82 (sp -> empty .)
    ASSIGN          reduce using rule 82 (sp -> empty .)
    RPAREN          reduce using rule 82 (sp -> empty .)
    SEMIC           reduce using rule 82 (sp -> empty .)
    COMMA           reduce using rule 82 (sp -> empty .)
    RBRACK          reduce using rule 82 (sp -> empty .)
    HASTA           reduce using rule 82 (sp -> empty .)
    HACER           reduce using rule 82 (sp -> empty .)


state 146

    (83) op_r -> LT_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 177

state 147

    (84) op_r -> GT_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 178

state 148

    (85) op_r -> LTE_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 179

state 149

    (86) op_r -> GTE_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 180

state 150

    (87) op_r -> NE_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 181

state 151

    (88) op_r -> EQUAL_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 182

state 152

    (89) exp -> termino pn_Expresion4 . exp1
    (90) exp1 -> . op_a exp
    (91) exp1 -> . empty
    (92) op_a -> . PLUS_OP pn_Expresion2
    (93) op_a -> . MINUS_OP pn_Expresion2
    (103) empty -> .

    PLUS_OP         shift and go to state 186
    MINUS_OP        shift and go to state 187
    LT_LOG          reduce using rule 103 (empty -> .)
    GT_LOG          reduce using rule 103 (empty -> .)
    LTE_LOG         reduce using rule 103 (empty -> .)
    GTE_LOG         reduce using rule 103 (empty -> .)
    NE_LOG          reduce using rule 103 (empty -> .)
    EQUAL_LOG       reduce using rule 103 (empty -> .)
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    ASSIGN          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    exp1                           shift and go to state 183
    op_a                           shift and go to state 184
    empty                          shift and go to state 185

state 153

    (94) termino -> factor pn_Expresion5 . term
    (95) term -> . op_a1 termino
    (96) term -> . empty
    (97) op_a1 -> . MULT_OP pn_Expresion3
    (98) op_a1 -> . DIV_OP pn_Expresion3
    (103) empty -> .

    MULT_OP         shift and go to state 191
    DIV_OP          shift and go to state 192
    PLUS_OP         reduce using rule 103 (empty -> .)
    MINUS_OP        reduce using rule 103 (empty -> .)
    LT_LOG          reduce using rule 103 (empty -> .)
    GT_LOG          reduce using rule 103 (empty -> .)
    LTE_LOG         reduce using rule 103 (empty -> .)
    GTE_LOG         reduce using rule 103 (empty -> .)
    NE_LOG          reduce using rule 103 (empty -> .)
    EQUAL_LOG       reduce using rule 103 (empty -> .)
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    ASSIGN          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    term                           shift and go to state 188
    op_a1                          shift and go to state 189
    empty                          shift and go to state 190

state 154

    (41) ctes -> CHAR_CTE pn_CTEChar .

    MULT_OP         reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    DIV_OP          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    PLUS_OP         reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    MINUS_OP        reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    LT_LOG          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    GT_LOG          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    LTE_LOG         reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    GTE_LOG         reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    NE_LOG          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    EQUAL_LOG       reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    AND_LOG         reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    OR_LOG          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    ASSIGN          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    RPAREN          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    SEMIC           reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    COMMA           reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    RBRACK          reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    HASTA           reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)
    HACER           reduce using rule 41 (ctes -> CHAR_CTE pn_CTEChar .)


state 155

    (42) ctes -> STRING_CTE pn_CTEString .

    MULT_OP         reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    DIV_OP          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    PLUS_OP         reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    MINUS_OP        reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    LT_LOG          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    GT_LOG          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    LTE_LOG         reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    GTE_LOG         reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    NE_LOG          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    EQUAL_LOG       reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    AND_LOG         reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    OR_LOG          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    ASSIGN          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    RPAREN          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    SEMIC           reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    COMMA           reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    RBRACK          reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    HASTA           reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)
    HACER           reduce using rule 42 (ctes -> STRING_CTE pn_CTEString .)


state 156

    (43) ctes -> MINUS_OP pn_CTENeg . num
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    num                            shift and go to state 193

state 157

    (45) num -> INT_CTE pn_CTEInt .

    MULT_OP         reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    DIV_OP          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    PLUS_OP         reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    MINUS_OP        reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    LT_LOG          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    GT_LOG          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    LTE_LOG         reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    GTE_LOG         reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    NE_LOG          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    EQUAL_LOG       reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    AND_LOG         reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    OR_LOG          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    ASSIGN          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    RPAREN          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    SEMIC           reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    COMMA           reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    RBRACK          reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    HASTA           reduce using rule 45 (num -> INT_CTE pn_CTEInt .)
    HACER           reduce using rule 45 (num -> INT_CTE pn_CTEInt .)


state 158

    (46) num -> FLOAT_CTE pn_CTEFloat .

    MULT_OP         reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    DIV_OP          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    PLUS_OP         reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    MINUS_OP        reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    LT_LOG          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    GT_LOG          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    LTE_LOG         reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    GTE_LOG         reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    NE_LOG          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    EQUAL_LOG       reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    AND_LOG         reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    OR_LOG          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    ASSIGN          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    RPAREN          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    SEMIC           reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    COMMA           reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    RBRACK          reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    HASTA           reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)
    HACER           reduce using rule 46 (num -> FLOAT_CTE pn_CTEFloat .)


state 159

    (66) regresa -> REGRESA pn_Secuencial3 LPAREN exp . RPAREN pn_Regresa SEMIC

    RPAREN          shift and go to state 194


state 160

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion . RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    RPAREN          shift and go to state 195


state 161

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN . pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (129) pn_Secuencial1 -> .

    LPAREN          reduce using rule 129 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 129 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 129 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 129 (pn_Secuencial1 -> .)
    ID              reduce using rule 129 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 129 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 129 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 196

state 162

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 . llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (61) llamada_param -> . expresion pn_FuncionLlamada2 llamada_param2
    (62) llamada_param -> . empty
    (72) expresion -> . mega_exp expresion1
    (103) empty -> .
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    RPAREN          reduce using rule 103 (empty -> .)
    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    llamada_param                  shift and go to state 197
    expresion                      shift and go to state 198
    empty                          shift and go to state 199
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 163

    (48) varDim -> LBRACK expresion . varDim2 RBRACK
    (50) varDim2 -> . COMMA expresion
    (51) varDim2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 201
    RBRACK          reduce using rule 103 (empty -> .)

    varDim2                        shift and go to state 200
    empty                          shift and go to state 202

state 164

    (67) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 203


state 165

    (68) escritura2 -> STRING_CTE . pn_Secuencial4 escritura3
    (42) ctes -> STRING_CTE . pn_CTEString
    (132) pn_Secuencial4 -> .
    (117) pn_CTEString -> .

  ! reduce/reduce conflict for COMMA resolved using rule 117 (pn_CTEString -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 117 (pn_CTEString -> .)
    MULT_OP         reduce using rule 117 (pn_CTEString -> .)
    DIV_OP          reduce using rule 117 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 117 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 117 (pn_CTEString -> .)
    LT_LOG          reduce using rule 117 (pn_CTEString -> .)
    GT_LOG          reduce using rule 117 (pn_CTEString -> .)
    LTE_LOG         reduce using rule 117 (pn_CTEString -> .)
    GTE_LOG         reduce using rule 117 (pn_CTEString -> .)
    NE_LOG          reduce using rule 117 (pn_CTEString -> .)
    EQUAL_LOG       reduce using rule 117 (pn_CTEString -> .)
    AND_LOG         reduce using rule 117 (pn_CTEString -> .)
    OR_LOG          reduce using rule 117 (pn_CTEString -> .)
    ASSIGN          reduce using rule 117 (pn_CTEString -> .)
    COMMA           reduce using rule 117 (pn_CTEString -> .)
    RPAREN          reduce using rule 117 (pn_CTEString -> .)

  ! COMMA           [ reduce using rule 132 (pn_Secuencial4 -> .) ]
  ! RPAREN          [ reduce using rule 132 (pn_Secuencial4 -> .) ]

    pn_Secuencial4                 shift and go to state 204
    pn_CTEString                   shift and go to state 155

state 166

    (69) escritura2 -> expresion . pn_Secuencial4 escritura3
    (132) pn_Secuencial4 -> .

    COMMA           reduce using rule 132 (pn_Secuencial4 -> .)
    RPAREN          reduce using rule 132 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 205

state 167

    (60) lectura -> LEE pn_Secuencial3 LPAREN varLectura . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 206


state 168

    (57) varLectura -> ID . pn_Expresion1 varDim varLectura2
    (118) pn_Expresion1 -> .

    LBRACK          reduce using rule 118 (pn_Expresion1 -> .)
    COMMA           reduce using rule 118 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 118 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 207

state 169

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque . pn_Funcion3
    (109) pn_Funcion3 -> .

    VOID            reduce using rule 109 (pn_Funcion3 -> .)
    INT_TYPE        reduce using rule 109 (pn_Funcion3 -> .)
    CHAR_TYPE       reduce using rule 109 (pn_Funcion3 -> .)
    FLOAT_TYPE      reduce using rule 109 (pn_Funcion3 -> .)
    PRINCIPAL       reduce using rule 109 (pn_Funcion3 -> .)

    pn_Funcion3                    shift and go to state 208

state 170

    (26) lista_parametros2 -> COMMA lista_parametros .

    RPAREN          reduce using rule 26 (lista_parametros2 -> COMMA lista_parametros .)


state 171

    (40) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC . pn_Secuencial2
    (130) pn_Secuencial2 -> .

    SI              reduce using rule 130 (pn_Secuencial2 -> .)
    REGRESA         reduce using rule 130 (pn_Secuencial2 -> .)
    MIENTRAS        reduce using rule 130 (pn_Secuencial2 -> .)
    DESDE           reduce using rule 130 (pn_Secuencial2 -> .)
    ID              reduce using rule 130 (pn_Secuencial2 -> .)
    ESCRIBE         reduce using rule 130 (pn_Secuencial2 -> .)
    LEE             reduce using rule 130 (pn_Secuencial2 -> .)
    RCURLY          reduce using rule 130 (pn_Secuencial2 -> .)

    pn_Secuencial2                 shift and go to state 209

state 172

    (100) factor -> LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7

    RPAREN          shift and go to state 210


state 173

    (52) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 . ENTONCES bloque else pn_Condicion2

    ENTONCES        shift and go to state 211


state 174

    (73) expresion1 -> ASSIGN expresion .

    RPAREN          reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    SEMIC           reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    COMMA           reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    RBRACK          reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    HASTA           reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    HACER           reduce using rule 73 (expresion1 -> ASSIGN expresion .)


state 175

    (76) meg -> op_l pn_Expresion10 . mega_exp pn_Expresion11
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    mega_exp                       shift and go to state 212
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 176

    (81) sp -> op_r exp . pn_Expresion9
    (126) pn_Expresion9 -> .

    AND_LOG         reduce using rule 126 (pn_Expresion9 -> .)
    OR_LOG          reduce using rule 126 (pn_Expresion9 -> .)
    ASSIGN          reduce using rule 126 (pn_Expresion9 -> .)
    RPAREN          reduce using rule 126 (pn_Expresion9 -> .)
    SEMIC           reduce using rule 126 (pn_Expresion9 -> .)
    COMMA           reduce using rule 126 (pn_Expresion9 -> .)
    RBRACK          reduce using rule 126 (pn_Expresion9 -> .)
    HASTA           reduce using rule 126 (pn_Expresion9 -> .)
    HACER           reduce using rule 126 (pn_Expresion9 -> .)

    pn_Expresion9                  shift and go to state 213

state 177

    (83) op_r -> LT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    ID              reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)


state 178

    (84) op_r -> GT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    ID              reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)


state 179

    (85) op_r -> LTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    ID              reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)


state 180

    (86) op_r -> GTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    ID              reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)


state 181

    (87) op_r -> NE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    ID              reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)


state 182

    (88) op_r -> EQUAL_LOG pn_Expresion8 .

    LPAREN          reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    ID              reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)


state 183

    (89) exp -> termino pn_Expresion4 exp1 .

    LT_LOG          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    GT_LOG          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    LTE_LOG         reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    GTE_LOG         reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    NE_LOG          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    EQUAL_LOG       reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    AND_LOG         reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    OR_LOG          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    ASSIGN          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    RPAREN          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    SEMIC           reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    COMMA           reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    RBRACK          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    HASTA           reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    HACER           reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)


state 184

    (90) exp1 -> op_a . exp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    exp                            shift and go to state 214
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 185

    (91) exp1 -> empty .

    LT_LOG          reduce using rule 91 (exp1 -> empty .)
    GT_LOG          reduce using rule 91 (exp1 -> empty .)
    LTE_LOG         reduce using rule 91 (exp1 -> empty .)
    GTE_LOG         reduce using rule 91 (exp1 -> empty .)
    NE_LOG          reduce using rule 91 (exp1 -> empty .)
    EQUAL_LOG       reduce using rule 91 (exp1 -> empty .)
    AND_LOG         reduce using rule 91 (exp1 -> empty .)
    OR_LOG          reduce using rule 91 (exp1 -> empty .)
    ASSIGN          reduce using rule 91 (exp1 -> empty .)
    RPAREN          reduce using rule 91 (exp1 -> empty .)
    SEMIC           reduce using rule 91 (exp1 -> empty .)
    COMMA           reduce using rule 91 (exp1 -> empty .)
    RBRACK          reduce using rule 91 (exp1 -> empty .)
    HASTA           reduce using rule 91 (exp1 -> empty .)
    HACER           reduce using rule 91 (exp1 -> empty .)


state 186

    (92) op_a -> PLUS_OP . pn_Expresion2
    (119) pn_Expresion2 -> .

    LPAREN          reduce using rule 119 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 119 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 119 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 119 (pn_Expresion2 -> .)
    ID              reduce using rule 119 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 119 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 119 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 215

state 187

    (93) op_a -> MINUS_OP . pn_Expresion2
    (119) pn_Expresion2 -> .

    LPAREN          reduce using rule 119 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 119 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 119 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 119 (pn_Expresion2 -> .)
    ID              reduce using rule 119 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 119 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 119 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 216

state 188

    (94) termino -> factor pn_Expresion5 term .

    PLUS_OP         reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    MINUS_OP        reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    LT_LOG          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    GT_LOG          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    LTE_LOG         reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    GTE_LOG         reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    NE_LOG          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    EQUAL_LOG       reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    AND_LOG         reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    OR_LOG          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    ASSIGN          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    RPAREN          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    SEMIC           reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    COMMA           reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    RBRACK          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    HASTA           reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    HACER           reduce using rule 94 (termino -> factor pn_Expresion5 term .)


state 189

    (95) term -> op_a1 . termino
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    termino                        shift and go to state 217
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 190

    (96) term -> empty .

    PLUS_OP         reduce using rule 96 (term -> empty .)
    MINUS_OP        reduce using rule 96 (term -> empty .)
    LT_LOG          reduce using rule 96 (term -> empty .)
    GT_LOG          reduce using rule 96 (term -> empty .)
    LTE_LOG         reduce using rule 96 (term -> empty .)
    GTE_LOG         reduce using rule 96 (term -> empty .)
    NE_LOG          reduce using rule 96 (term -> empty .)
    EQUAL_LOG       reduce using rule 96 (term -> empty .)
    AND_LOG         reduce using rule 96 (term -> empty .)
    OR_LOG          reduce using rule 96 (term -> empty .)
    ASSIGN          reduce using rule 96 (term -> empty .)
    RPAREN          reduce using rule 96 (term -> empty .)
    SEMIC           reduce using rule 96 (term -> empty .)
    COMMA           reduce using rule 96 (term -> empty .)
    RBRACK          reduce using rule 96 (term -> empty .)
    HASTA           reduce using rule 96 (term -> empty .)
    HACER           reduce using rule 96 (term -> empty .)


state 191

    (97) op_a1 -> MULT_OP . pn_Expresion3
    (120) pn_Expresion3 -> .

    LPAREN          reduce using rule 120 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 120 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 120 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 120 (pn_Expresion3 -> .)
    ID              reduce using rule 120 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 120 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 120 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 218

state 192

    (98) op_a1 -> DIV_OP . pn_Expresion3
    (120) pn_Expresion3 -> .

    LPAREN          reduce using rule 120 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 120 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 120 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 120 (pn_Expresion3 -> .)
    ID              reduce using rule 120 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 120 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 120 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 219

state 193

    (43) ctes -> MINUS_OP pn_CTENeg num .

    MULT_OP         reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    DIV_OP          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    PLUS_OP         reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    MINUS_OP        reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    LT_LOG          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    GT_LOG          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    LTE_LOG         reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    GTE_LOG         reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    NE_LOG          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    EQUAL_LOG       reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    AND_LOG         reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    OR_LOG          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    ASSIGN          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    RPAREN          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    SEMIC           reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    COMMA           reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    RBRACK          reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    HASTA           reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)
    HACER           reduce using rule 43 (ctes -> MINUS_OP pn_CTENeg num .)


state 194

    (66) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN . pn_Regresa SEMIC
    (134) pn_Regresa -> .

    SEMIC           reduce using rule 134 (pn_Regresa -> .)

    pn_Regresa                     shift and go to state 220

state 195

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN . pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (139) pn_loop_condicional2 -> .

    HACER           reduce using rule 139 (pn_loop_condicional2 -> .)

    pn_loop_condicional2           shift and go to state 221

state 196

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 . expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    variable                       shift and go to state 107
    expresion                      shift and go to state 222
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 197

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param . RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC

    RPAREN          shift and go to state 223


state 198

    (61) llamada_param -> expresion . pn_FuncionLlamada2 llamada_param2
    (111) pn_FuncionLlamada2 -> .

    COMMA           reduce using rule 111 (pn_FuncionLlamada2 -> .)
    RPAREN          reduce using rule 111 (pn_FuncionLlamada2 -> .)

    pn_FuncionLlamada2             shift and go to state 224

state 199

    (62) llamada_param -> empty .

    RPAREN          reduce using rule 62 (llamada_param -> empty .)


state 200

    (48) varDim -> LBRACK expresion varDim2 . RBRACK

    RBRACK          shift and go to state 225


state 201

    (50) varDim2 -> COMMA . expresion
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    expresion                      shift and go to state 226
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 202

    (51) varDim2 -> empty .

    RBRACK          reduce using rule 51 (varDim2 -> empty .)


state 203

    (67) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 227


state 204

    (68) escritura2 -> STRING_CTE pn_Secuencial4 . escritura3
    (70) escritura3 -> . COMMA escritura2
    (71) escritura3 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 229
    RPAREN          reduce using rule 103 (empty -> .)

    escritura3                     shift and go to state 228
    empty                          shift and go to state 230

state 205

    (69) escritura2 -> expresion pn_Secuencial4 . escritura3
    (70) escritura3 -> . COMMA escritura2
    (71) escritura3 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 229
    RPAREN          reduce using rule 103 (empty -> .)

    escritura3                     shift and go to state 231
    empty                          shift and go to state 230

state 206

    (60) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 232


state 207

    (57) varLectura -> ID pn_Expresion1 . varDim varLectura2
    (48) varDim -> . LBRACK expresion varDim2 RBRACK
    (49) varDim -> . empty
    (103) empty -> .

    LBRACK          shift and go to state 122
    COMMA           reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)

    varDim                         shift and go to state 233
    empty                          shift and go to state 123

state 208

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .

    VOID            reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)
    INT_TYPE        reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)
    CHAR_TYPE       reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)
    FLOAT_TYPE      reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)
    PRINCIPAL       reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)


state 209

    (40) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .

    SI              reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    REGRESA         reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    MIENTRAS        reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    DESDE           reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ID              reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ESCRIBE         reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    LEE             reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    RCURLY          reduce using rule 40 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)


state 210

    (100) factor -> LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7
    (124) pn_Expresion7 -> .

    MULT_OP         reduce using rule 124 (pn_Expresion7 -> .)
    DIV_OP          reduce using rule 124 (pn_Expresion7 -> .)
    PLUS_OP         reduce using rule 124 (pn_Expresion7 -> .)
    MINUS_OP        reduce using rule 124 (pn_Expresion7 -> .)
    LT_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    GT_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    LTE_LOG         reduce using rule 124 (pn_Expresion7 -> .)
    GTE_LOG         reduce using rule 124 (pn_Expresion7 -> .)
    NE_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    EQUAL_LOG       reduce using rule 124 (pn_Expresion7 -> .)
    AND_LOG         reduce using rule 124 (pn_Expresion7 -> .)
    OR_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    ASSIGN          reduce using rule 124 (pn_Expresion7 -> .)
    RPAREN          reduce using rule 124 (pn_Expresion7 -> .)
    SEMIC           reduce using rule 124 (pn_Expresion7 -> .)
    COMMA           reduce using rule 124 (pn_Expresion7 -> .)
    RBRACK          reduce using rule 124 (pn_Expresion7 -> .)
    HASTA           reduce using rule 124 (pn_Expresion7 -> .)
    HACER           reduce using rule 124 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 234

state 211

    (52) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES . bloque else pn_Condicion2
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 235

state 212

    (76) meg -> op_l pn_Expresion10 mega_exp . pn_Expresion11
    (128) pn_Expresion11 -> .

    ASSIGN          reduce using rule 128 (pn_Expresion11 -> .)
    RPAREN          reduce using rule 128 (pn_Expresion11 -> .)
    SEMIC           reduce using rule 128 (pn_Expresion11 -> .)
    COMMA           reduce using rule 128 (pn_Expresion11 -> .)
    RBRACK          reduce using rule 128 (pn_Expresion11 -> .)
    HASTA           reduce using rule 128 (pn_Expresion11 -> .)
    HACER           reduce using rule 128 (pn_Expresion11 -> .)

    pn_Expresion11                 shift and go to state 236

state 213

    (81) sp -> op_r exp pn_Expresion9 .

    AND_LOG         reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    OR_LOG          reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    ASSIGN          reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    RPAREN          reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    SEMIC           reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    COMMA           reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    RBRACK          reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    HASTA           reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    HACER           reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)


state 214

    (90) exp1 -> op_a exp .

    LT_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    GT_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    LTE_LOG         reduce using rule 90 (exp1 -> op_a exp .)
    GTE_LOG         reduce using rule 90 (exp1 -> op_a exp .)
    NE_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    EQUAL_LOG       reduce using rule 90 (exp1 -> op_a exp .)
    AND_LOG         reduce using rule 90 (exp1 -> op_a exp .)
    OR_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    ASSIGN          reduce using rule 90 (exp1 -> op_a exp .)
    RPAREN          reduce using rule 90 (exp1 -> op_a exp .)
    SEMIC           reduce using rule 90 (exp1 -> op_a exp .)
    COMMA           reduce using rule 90 (exp1 -> op_a exp .)
    RBRACK          reduce using rule 90 (exp1 -> op_a exp .)
    HASTA           reduce using rule 90 (exp1 -> op_a exp .)
    HACER           reduce using rule 90 (exp1 -> op_a exp .)


state 215

    (92) op_a -> PLUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    ID              reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)


state 216

    (93) op_a -> MINUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    ID              reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)


state 217

    (95) term -> op_a1 termino .

    PLUS_OP         reduce using rule 95 (term -> op_a1 termino .)
    MINUS_OP        reduce using rule 95 (term -> op_a1 termino .)
    LT_LOG          reduce using rule 95 (term -> op_a1 termino .)
    GT_LOG          reduce using rule 95 (term -> op_a1 termino .)
    LTE_LOG         reduce using rule 95 (term -> op_a1 termino .)
    GTE_LOG         reduce using rule 95 (term -> op_a1 termino .)
    NE_LOG          reduce using rule 95 (term -> op_a1 termino .)
    EQUAL_LOG       reduce using rule 95 (term -> op_a1 termino .)
    AND_LOG         reduce using rule 95 (term -> op_a1 termino .)
    OR_LOG          reduce using rule 95 (term -> op_a1 termino .)
    ASSIGN          reduce using rule 95 (term -> op_a1 termino .)
    RPAREN          reduce using rule 95 (term -> op_a1 termino .)
    SEMIC           reduce using rule 95 (term -> op_a1 termino .)
    COMMA           reduce using rule 95 (term -> op_a1 termino .)
    RBRACK          reduce using rule 95 (term -> op_a1 termino .)
    HASTA           reduce using rule 95 (term -> op_a1 termino .)
    HACER           reduce using rule 95 (term -> op_a1 termino .)


state 218

    (97) op_a1 -> MULT_OP pn_Expresion3 .

    LPAREN          reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    ID              reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)


state 219

    (98) op_a1 -> DIV_OP pn_Expresion3 .

    LPAREN          reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    ID              reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)


state 220

    (66) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa . SEMIC

    SEMIC           shift and go to state 237


state 221

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 . HACER bloque pn_loop_condicional3

    HACER           shift and go to state 238


state 222

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion . pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (142) pn_loop_no_condicional2 -> .

    HASTA           reduce using rule 142 (pn_loop_no_condicional2 -> .)

    pn_loop_no_condicional2        shift and go to state 239

state 223

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN . pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (124) pn_Expresion7 -> .

    SEMIC           reduce using rule 124 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 240

state 224

    (61) llamada_param -> expresion pn_FuncionLlamada2 . llamada_param2
    (63) llamada_param2 -> . COMMA llamada_param
    (64) llamada_param2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 242
    RPAREN          reduce using rule 103 (empty -> .)

    llamada_param2                 shift and go to state 241
    empty                          shift and go to state 243

state 225

    (48) varDim -> LBRACK expresion varDim2 RBRACK .

    ASSIGN          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    MULT_OP         reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    DIV_OP          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    PLUS_OP         reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    MINUS_OP        reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    LT_LOG          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    GT_LOG          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    LTE_LOG         reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    GTE_LOG         reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    NE_LOG          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    EQUAL_LOG       reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    AND_LOG         reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    OR_LOG          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    RPAREN          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    SEMIC           reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    COMMA           reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    RBRACK          reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    HASTA           reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)
    HACER           reduce using rule 48 (varDim -> LBRACK expresion varDim2 RBRACK .)


state 226

    (50) varDim2 -> COMMA expresion .

    RBRACK          reduce using rule 50 (varDim2 -> COMMA expresion .)


state 227

    (67) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC . pn_Secuencial5
    (133) pn_Secuencial5 -> .

    SI              reduce using rule 133 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 133 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 133 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 133 (pn_Secuencial5 -> .)
    ID              reduce using rule 133 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 133 (pn_Secuencial5 -> .)
    LEE             reduce using rule 133 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 133 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 244

state 228

    (68) escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 68 (escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .)


state 229

    (70) escritura3 -> COMMA . escritura2
    (68) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (69) escritura2 -> . expresion pn_Secuencial4 escritura3
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 165
    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    escritura2                     shift and go to state 245
    expresion                      shift and go to state 166
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 230

    (71) escritura3 -> empty .

    RPAREN          reduce using rule 71 (escritura3 -> empty .)


state 231

    (69) escritura2 -> expresion pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 69 (escritura2 -> expresion pn_Secuencial4 escritura3 .)


state 232

    (60) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC . pn_Secuencial5
    (133) pn_Secuencial5 -> .

    SI              reduce using rule 133 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 133 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 133 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 133 (pn_Secuencial5 -> .)
    ID              reduce using rule 133 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 133 (pn_Secuencial5 -> .)
    LEE             reduce using rule 133 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 133 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 246

state 233

    (57) varLectura -> ID pn_Expresion1 varDim . varLectura2
    (58) varLectura2 -> . COMMA pn_Secuencial4 varLectura
    (59) varLectura2 -> . empty pn_Secuencial4
    (103) empty -> .

    COMMA           shift and go to state 248
    RPAREN          reduce using rule 103 (empty -> .)

    varLectura2                    shift and go to state 247
    empty                          shift and go to state 249

state 234

    (100) factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .

    MULT_OP         reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    DIV_OP          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    PLUS_OP         reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    MINUS_OP        reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LT_LOG          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GT_LOG          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LTE_LOG         reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GTE_LOG         reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    NE_LOG          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    EQUAL_LOG       reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    AND_LOG         reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    OR_LOG          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    ASSIGN          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RPAREN          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    SEMIC           reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    COMMA           reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RBRACK          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HASTA           reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HACER           reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)


state 235

    (52) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque . else pn_Condicion2
    (53) else -> . SINO pn_Condicion3 bloque
    (54) else -> . empty
    (103) empty -> .

    SINO            shift and go to state 251
    SI              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ESCRIBE         reduce using rule 103 (empty -> .)
    LEE             reduce using rule 103 (empty -> .)
    RCURLY          reduce using rule 103 (empty -> .)

    else                           shift and go to state 250
    empty                          shift and go to state 252

state 236

    (76) meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .

    ASSIGN          reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    RPAREN          reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    SEMIC           reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    COMMA           reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    RBRACK          reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    HASTA           reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    HACER           reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)


state 237

    (66) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .

    SI              reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    REGRESA         reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    MIENTRAS        reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    DESDE           reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ID              reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ESCRIBE         reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    LEE             reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    RCURLY          reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)


state 238

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER . bloque pn_loop_condicional3
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 253

state 239

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 . HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    HASTA           shift and go to state 254


state 240

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 . pn_FuncionLlamada3 SEMIC
    (112) pn_FuncionLlamada3 -> .

    SEMIC           reduce using rule 112 (pn_FuncionLlamada3 -> .)

    pn_FuncionLlamada3             shift and go to state 255

state 241

    (61) llamada_param -> expresion pn_FuncionLlamada2 llamada_param2 .

    RPAREN          reduce using rule 61 (llamada_param -> expresion pn_FuncionLlamada2 llamada_param2 .)


state 242

    (63) llamada_param2 -> COMMA . llamada_param
    (61) llamada_param -> . expresion pn_FuncionLlamada2 llamada_param2
    (62) llamada_param -> . empty
    (72) expresion -> . mega_exp expresion1
    (103) empty -> .
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    RPAREN          reduce using rule 103 (empty -> .)
    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    llamada_param                  shift and go to state 256
    expresion                      shift and go to state 198
    empty                          shift and go to state 199
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    variable                       shift and go to state 107
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 243

    (64) llamada_param2 -> empty .

    RPAREN          reduce using rule 64 (llamada_param2 -> empty .)


state 244

    (67) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)


state 245

    (70) escritura3 -> COMMA escritura2 .

    RPAREN          reduce using rule 70 (escritura3 -> COMMA escritura2 .)


state 246

    (60) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 60 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)


state 247

    (57) varLectura -> ID pn_Expresion1 varDim varLectura2 .

    RPAREN          reduce using rule 57 (varLectura -> ID pn_Expresion1 varDim varLectura2 .)


state 248

    (58) varLectura2 -> COMMA . pn_Secuencial4 varLectura
    (132) pn_Secuencial4 -> .

    ID              reduce using rule 132 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 257

state 249

    (59) varLectura2 -> empty . pn_Secuencial4
    (132) pn_Secuencial4 -> .

    RPAREN          reduce using rule 132 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 258

state 250

    (52) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else . pn_Condicion2
    (136) pn_Condicion2 -> .

    SI              reduce using rule 136 (pn_Condicion2 -> .)
    REGRESA         reduce using rule 136 (pn_Condicion2 -> .)
    MIENTRAS        reduce using rule 136 (pn_Condicion2 -> .)
    DESDE           reduce using rule 136 (pn_Condicion2 -> .)
    ID              reduce using rule 136 (pn_Condicion2 -> .)
    ESCRIBE         reduce using rule 136 (pn_Condicion2 -> .)
    LEE             reduce using rule 136 (pn_Condicion2 -> .)
    RCURLY          reduce using rule 136 (pn_Condicion2 -> .)

    pn_Condicion2                  shift and go to state 259

state 251

    (53) else -> SINO . pn_Condicion3 bloque
    (137) pn_Condicion3 -> .

    LCURLY          reduce using rule 137 (pn_Condicion3 -> .)

    pn_Condicion3                  shift and go to state 260

state 252

    (54) else -> empty .

    SI              reduce using rule 54 (else -> empty .)
    REGRESA         reduce using rule 54 (else -> empty .)
    MIENTRAS        reduce using rule 54 (else -> empty .)
    DESDE           reduce using rule 54 (else -> empty .)
    ID              reduce using rule 54 (else -> empty .)
    ESCRIBE         reduce using rule 54 (else -> empty .)
    LEE             reduce using rule 54 (else -> empty .)
    RCURLY          reduce using rule 54 (else -> empty .)


state 253

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque . pn_loop_condicional3
    (140) pn_loop_condicional3 -> .

    SI              reduce using rule 140 (pn_loop_condicional3 -> .)
    REGRESA         reduce using rule 140 (pn_loop_condicional3 -> .)
    MIENTRAS        reduce using rule 140 (pn_loop_condicional3 -> .)
    DESDE           reduce using rule 140 (pn_loop_condicional3 -> .)
    ID              reduce using rule 140 (pn_loop_condicional3 -> .)
    ESCRIBE         reduce using rule 140 (pn_loop_condicional3 -> .)
    LEE             reduce using rule 140 (pn_loop_condicional3 -> .)
    RCURLY          reduce using rule 140 (pn_loop_condicional3 -> .)

    pn_loop_condicional3           shift and go to state 261

state 254

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA . pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (143) pn_loop_no_condicional3 -> .

    LPAREN          reduce using rule 143 (pn_loop_no_condicional3 -> .)
    CHAR_CTE        reduce using rule 143 (pn_loop_no_condicional3 -> .)
    STRING_CTE      reduce using rule 143 (pn_loop_no_condicional3 -> .)
    MINUS_OP        reduce using rule 143 (pn_loop_no_condicional3 -> .)
    ID              reduce using rule 143 (pn_loop_no_condicional3 -> .)
    INT_CTE         reduce using rule 143 (pn_loop_no_condicional3 -> .)
    FLOAT_CTE       reduce using rule 143 (pn_loop_no_condicional3 -> .)

    pn_loop_no_condicional3        shift and go to state 262

state 255

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 . SEMIC

    SEMIC           shift and go to state 263


state 256

    (63) llamada_param2 -> COMMA llamada_param .

    RPAREN          reduce using rule 63 (llamada_param2 -> COMMA llamada_param .)


state 257

    (58) varLectura2 -> COMMA pn_Secuencial4 . varLectura
    (57) varLectura -> . ID pn_Expresion1 varDim varLectura2

    ID              shift and go to state 168

    varLectura                     shift and go to state 264

state 258

    (59) varLectura2 -> empty pn_Secuencial4 .

    RPAREN          reduce using rule 59 (varLectura2 -> empty pn_Secuencial4 .)


state 259

    (52) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .

    SI              reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    REGRESA         reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    MIENTRAS        reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    DESDE           reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ID              reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ESCRIBE         reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    LEE             reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    RCURLY          reduce using rule 52 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)


state 260

    (53) else -> SINO pn_Condicion3 . bloque
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 265

state 261

    (55) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .

    SI              reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    REGRESA         reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    MIENTRAS        reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    DESDE           reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ID              reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ESCRIBE         reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    LEE             reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    RCURLY          reduce using rule 55 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)


state 262

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 . expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (41) ctes -> . CHAR_CTE pn_CTEChar
    (42) ctes -> . STRING_CTE pn_CTEString
    (43) ctes -> . MINUS_OP pn_CTENeg num
    (44) ctes -> . num
    (47) variable -> . ID pn_Expresion1 varDim
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (45) num -> . INT_CTE pn_CTEInt
    (46) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 99
    CHAR_CTE        shift and go to state 109
    STRING_CTE      shift and go to state 110
    MINUS_OP        shift and go to state 111
    ID              shift and go to state 113
    INT_CTE         shift and go to state 114
    FLOAT_CTE       shift and go to state 115

    variable                       shift and go to state 107
    expresion                      shift and go to state 266
    mega_exp                       shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    ctes                           shift and go to state 106
    llamada_funcion                shift and go to state 108
    num                            shift and go to state 112

state 263

    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .

    SI              reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    REGRESA         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    MIENTRAS        reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    DESDE           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    ID              reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    ESCRIBE         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    LEE             reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    RCURLY          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    MULT_OP         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    DIV_OP          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    PLUS_OP         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    MINUS_OP        reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    LT_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    GT_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    LTE_LOG         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    GTE_LOG         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    NE_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    EQUAL_LOG       reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    AND_LOG         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    OR_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    ASSIGN          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    RPAREN          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    SEMIC           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    COMMA           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    RBRACK          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    HASTA           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    HACER           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)


state 264

    (58) varLectura2 -> COMMA pn_Secuencial4 varLectura .

    RPAREN          reduce using rule 58 (varLectura2 -> COMMA pn_Secuencial4 varLectura .)


state 265

    (53) else -> SINO pn_Condicion3 bloque .

    SI              reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    REGRESA         reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    MIENTRAS        reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    DESDE           reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    ID              reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    ESCRIBE         reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    LEE             reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)
    RCURLY          reduce using rule 53 (else -> SINO pn_Condicion3 bloque .)


state 266

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion . pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (144) pn_loop_no_condicional4 -> .

    HACER           reduce using rule 144 (pn_loop_no_condicional4 -> .)

    pn_loop_no_condicional4        shift and go to state 267

state 267

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 . HACER bloque pn_loop_no_condicional5

    HACER           shift and go to state 268


state 268

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER . bloque pn_loop_no_condicional5
    (29) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 53

    bloque                         shift and go to state 269

state 269

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque . pn_loop_no_condicional5
    (145) pn_loop_no_condicional5 -> .

    SI              reduce using rule 145 (pn_loop_no_condicional5 -> .)
    REGRESA         reduce using rule 145 (pn_loop_no_condicional5 -> .)
    MIENTRAS        reduce using rule 145 (pn_loop_no_condicional5 -> .)
    DESDE           reduce using rule 145 (pn_loop_no_condicional5 -> .)
    ID              reduce using rule 145 (pn_loop_no_condicional5 -> .)
    ESCRIBE         reduce using rule 145 (pn_loop_no_condicional5 -> .)
    LEE             reduce using rule 145 (pn_loop_no_condicional5 -> .)
    RCURLY          reduce using rule 145 (pn_loop_no_condicional5 -> .)

    pn_loop_no_condicional5        shift and go to state 270

state 270

    (56) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .

    SI              reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    REGRESA         reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    MIENTRAS        reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    DESDE           reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ID              reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ESCRIBE         reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    LEE             reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    RCURLY          reduce using rule 56 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 expresion pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 expresion pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT_TYPE in state 34 resolved as shift
WARNING: shift/reduce conflict for CHAR_TYPE in state 34 resolved as shift
WARNING: shift/reduce conflict for FLOAT_TYPE in state 34 resolved as shift
WARNING: reduce/reduce conflict in state 165 resolved using rule (pn_CTEString -> <empty>)
WARNING: rejected rule (pn_Secuencial4 -> <empty>) in state 165
