Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    NEW_LINE
    STRING_TYPE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal
Rule 2     dec_variables -> VARIABLES dec_variables2
Rule 3     dec_variables -> empty
Rule 4     dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3
Rule 5     dec_variables3 -> dec_variables2
Rule 6     dec_variables3 -> empty
Rule 7     lista_ids -> ID pn_AddVariable DecVarDim lista_ids2
Rule 8     lista_ids2 -> COMMA lista_ids
Rule 9     lista_ids2 -> empty
Rule 10    DecVarDim -> DecVarDim2 pn_VarDim
Rule 11    DecVarDim -> empty
Rule 12    DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK pn_Columnas
Rule 13    VarDimAcc -> LBRACK pn_DimAccess pn_Expresion6 exp pn_VarDim2 pn_AccederArreglo RBRACK pn_Expresion7
Rule 14    tipo -> INT_TYPE pn_SetCurrentType
Rule 15    tipo -> CHAR_TYPE pn_SetCurrentType
Rule 16    tipo -> FLOAT_TYPE pn_SetCurrentType
Rule 17    dec_funciones -> dec_funciones2 dec_funciones
Rule 18    dec_funciones -> empty
Rule 19    dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
Rule 20    tipo_func -> VOID pn_SetCurrentType
Rule 21    tipo_func -> tipo
Rule 22    dec_funcion_param -> lista_parametros
Rule 23    dec_funcion_param -> empty
Rule 24    lista_parametros -> tipo ID pn_Funcion1 lista_parametros2
Rule 25    lista_parametros2 -> COMMA lista_parametros
Rule 26    lista_parametros2 -> empty
Rule 27    principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque
Rule 28    bloque -> LCURLY estatutos RCURLY
Rule 29    estatutos -> estatuto estatutos
Rule 30    estatutos -> empty
Rule 31    estatuto -> asignacion
Rule 32    estatuto -> condicion
Rule 33    estatuto -> regresa
Rule 34    estatuto -> loop_condicional
Rule 35    estatuto -> loop_no_condicional
Rule 36    estatuto -> llamada_funcion
Rule 37    estatuto -> escritura
Rule 38    estatuto -> lectura
Rule 39    asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
Rule 40    ctes -> CHAR_CTE pn_CTEChar
Rule 41    ctes -> STRING_CTE pn_CTEString
Rule 42    ctes -> MINUS_OP pn_CTENeg num
Rule 43    ctes -> num
Rule 44    num -> INT_CTE pn_CTEInt
Rule 45    num -> FLOAT_CTE pn_CTEFloat
Rule 46    variable -> ID pn_Expresion1 varDim
Rule 47    varDim -> LBRACK expresion RBRACK
Rule 48    varDim -> empty
Rule 49    varDim2 -> COMMA expresion
Rule 50    varDim2 -> empty
Rule 51    condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
Rule 52    else -> SINO pn_Condicion3 bloque
Rule 53    else -> empty
Rule 54    loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
Rule 55    loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
Rule 56    varLectura -> ID pn_Expresion1 varDim varLectura2
Rule 57    varLectura2 -> COMMA pn_Secuencial4 varLectura
Rule 58    varLectura2 -> empty pn_Secuencial4
Rule 59    lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
Rule 60    llamada_param -> expresion pn_FuncionLlamada2 llamada_param2
Rule 61    llamada_param -> empty
Rule 62    llamada_param2 -> COMMA llamada_param
Rule 63    llamada_param2 -> empty
Rule 64    llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
Rule 65    llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
Rule 66    regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
Rule 67    escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
Rule 68    escritura2 -> STRING_CTE pn_Secuencial4 escritura3
Rule 69    escritura2 -> exp pn_Secuencial4 escritura3
Rule 70    escritura3 -> COMMA escritura2
Rule 71    escritura3 -> empty
Rule 72    expresion -> mega_exp expresion1
Rule 73    expresion1 -> ASSIGN expresion
Rule 74    expresion1 -> empty
Rule 75    mega_exp -> super_exp meg
Rule 76    meg -> op_l pn_Expresion10 mega_exp pn_Expresion11
Rule 77    meg -> empty
Rule 78    op_l -> AND_LOG
Rule 79    op_l -> OR_LOG
Rule 80    super_exp -> exp sp
Rule 81    sp -> op_r exp pn_Expresion9
Rule 82    sp -> empty
Rule 83    op_r -> LT_LOG pn_Expresion8
Rule 84    op_r -> GT_LOG pn_Expresion8
Rule 85    op_r -> LTE_LOG pn_Expresion8
Rule 86    op_r -> GTE_LOG pn_Expresion8
Rule 87    op_r -> NE_LOG pn_Expresion8
Rule 88    op_r -> EQUAL_LOG pn_Expresion8
Rule 89    exp -> termino pn_Expresion4 exp1
Rule 90    exp1 -> op_a exp
Rule 91    exp1 -> empty
Rule 92    op_a -> PLUS_OP pn_Expresion2
Rule 93    op_a -> MINUS_OP pn_Expresion2
Rule 94    termino -> factor pn_Expresion5 term
Rule 95    term -> op_a1 termino
Rule 96    term -> empty
Rule 97    op_a1 -> MULT_OP pn_Expresion3
Rule 98    op_a1 -> DIV_OP pn_Expresion3
Rule 99    factor -> ctes
Rule 100   factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
Rule 101   factor -> variable
Rule 102   factor -> llamada_funcion
Rule 103   empty -> <empty>
Rule 104   pn_GOTOprincipal -> <empty>
Rule 105   pn_Principal1 -> <empty>
Rule 106   pn_AddFunc -> <empty>
Rule 107   pn_Funcion1 -> <empty>
Rule 108   pn_Funcion2 -> <empty>
Rule 109   pn_Funcion3 -> <empty>
Rule 110   pn_FuncionLlamada1 -> <empty>
Rule 111   pn_FuncionLlamada2 -> <empty>
Rule 112   pn_FuncionLlamada3 -> <empty>
Rule 113   pn_CTENeg -> <empty>
Rule 114   pn_CTEInt -> <empty>
Rule 115   pn_CTEFloat -> <empty>
Rule 116   pn_CTEChar -> <empty>
Rule 117   pn_CTEString -> <empty>
Rule 118   pn_Expresion1 -> <empty>
Rule 119   pn_Expresion2 -> <empty>
Rule 120   pn_Expresion3 -> <empty>
Rule 121   pn_Expresion4 -> <empty>
Rule 122   pn_Expresion5 -> <empty>
Rule 123   pn_Expresion6 -> <empty>
Rule 124   pn_Expresion7 -> <empty>
Rule 125   pn_Expresion8 -> <empty>
Rule 126   pn_Expresion9 -> <empty>
Rule 127   pn_Expresion10 -> <empty>
Rule 128   pn_Expresion11 -> <empty>
Rule 129   pn_Secuencial1 -> <empty>
Rule 130   pn_Secuencial2 -> <empty>
Rule 131   pn_Secuencial3 -> <empty>
Rule 132   pn_Secuencial4 -> <empty>
Rule 133   pn_Secuencial5 -> <empty>
Rule 134   pn_Regresa -> <empty>
Rule 135   pn_Condicion1 -> <empty>
Rule 136   pn_Condicion2 -> <empty>
Rule 137   pn_Condicion3 -> <empty>
Rule 138   pn_loop_condicional1 -> <empty>
Rule 139   pn_loop_condicional2 -> <empty>
Rule 140   pn_loop_condicional3 -> <empty>
Rule 141   pn_loop_no_condicional1 -> <empty>
Rule 142   pn_loop_no_condicional2 -> <empty>
Rule 143   pn_loop_no_condicional3 -> <empty>
Rule 144   pn_loop_no_condicional4 -> <empty>
Rule 145   pn_loop_no_condicional5 -> <empty>
Rule 146   pn_SetCurrentType -> <empty>
Rule 147   pn_AddVariable -> <empty>
Rule 148   pn_Renglones -> <empty>
Rule 149   pn_Columnas -> <empty>
Rule 150   pn_VarDim2 -> <empty>
Rule 151   pn_VarDim3 -> <empty>
Rule 152   pn_VarDim4 -> <empty>
Rule 153   pn_VarDim -> <empty>
Rule 154   pn_DimAccess -> <empty>
Rule 155   pn_AccederArreglo -> <empty>
Rule 156   pn_AccederMatriz -> <empty>

Terminals, with rules where they appear

AND_LOG              : 78
ASSIGN               : 39 55 73
CHAR_CTE             : 40
CHAR_TYPE            : 15
COLON                : 4
COMMA                : 8 25 49 57 62 70
COMMENT              : 
DESDE                : 55
DIV_OP               : 98
ENTONCES             : 51
EQUAL_LOG            : 88
ESCRIBE              : 67
FLOAT_CTE            : 45
FLOAT_TYPE           : 16
FUNCION              : 19
GTE_LOG              : 86
GT_LOG               : 84
HACER                : 54 55
HASTA                : 55
ID                   : 1 7 19 24 46 56 64 65
INT_CTE              : 12 44
INT_TYPE             : 14
LBRACK               : 12 13 47
LCURLY               : 28
LEE                  : 59
LPAREN               : 19 27 51 54 59 64 65 66 67 100
LTE_LOG              : 85
LT_LOG               : 83
MIENTRAS             : 54
MINUS_OP             : 42 93
MULT_OP              : 97
NEW_LINE             : 
NE_LOG               : 87
OR_LOG               : 79
PLUS_OP              : 92
PRINCIPAL            : 27
PROGRAMA             : 1
RBRACK               : 12 13 47
RCURLY               : 28
REGRESA              : 66
RPAREN               : 19 27 51 54 59 64 65 66 67 100
SEMIC                : 1 4 39 59 64 66 67
SI                   : 51
SINO                 : 52
STRING_CTE           : 41 68
STRING_TYPE          : 
VARIABLES            : 2
VOID                 : 20
error                : 

Nonterminals, with rules where they appear

DecVarDim            : 7
DecVarDim2           : 10
VarDimAcc            : 
asignacion           : 31
bloque               : 19 27 51 52 54 55
condicion            : 32
ctes                 : 99
dec_funcion_param    : 19
dec_funciones        : 1 17
dec_funciones2       : 17
dec_variables        : 1 19
dec_variables2       : 2 5
dec_variables3       : 4
else                 : 51
empty                : 3 6 9 11 18 23 26 30 48 50 53 58 61 63 71 74 77 82 91 96
escritura            : 37
escritura2           : 67 70
escritura3           : 68 69
estatuto             : 29
estatutos            : 28 29
exp                  : 13 55 55 66 69 80 81 90 100
exp1                 : 89
expresion            : 39 47 49 51 54 60 73
expresion1           : 72
factor               : 94
lectura              : 38
lista_ids            : 4 8
lista_ids2           : 7
lista_parametros     : 22 25
lista_parametros2    : 24
llamada_funcion      : 36 102
llamada_param        : 62 64 65
llamada_param2       : 60
loop_condicional     : 34
loop_no_condicional  : 35
meg                  : 75
mega_exp             : 72 76
num                  : 42 43
op_a                 : 90
op_a1                : 95
op_l                 : 76
op_r                 : 81
pn_AccederArreglo    : 13
pn_AccederMatriz     : 
pn_AddFunc           : 19
pn_AddVariable       : 7
pn_CTEChar           : 40
pn_CTEFloat          : 45
pn_CTEInt            : 44
pn_CTENeg            : 42
pn_CTEString         : 41
pn_Columnas          : 12
pn_Condicion1        : 51
pn_Condicion2        : 51
pn_Condicion3        : 52
pn_DimAccess         : 13
pn_Expresion1        : 46 56
pn_Expresion10       : 76
pn_Expresion11       : 76
pn_Expresion2        : 92 93
pn_Expresion3        : 97 98
pn_Expresion4        : 89
pn_Expresion5        : 94
pn_Expresion6        : 13 64 65 100
pn_Expresion7        : 13 64 65 100
pn_Expresion8        : 83 84 85 86 87 88
pn_Expresion9        : 81
pn_Funcion1          : 24
pn_Funcion2          : 19
pn_Funcion3          : 19
pn_FuncionLlamada1   : 64 65
pn_FuncionLlamada2   : 60
pn_FuncionLlamada3   : 64 65
pn_GOTOprincipal     : 1
pn_Principal1        : 27
pn_Regresa           : 66
pn_Renglones         : 
pn_Secuencial1       : 39 55
pn_Secuencial2       : 39
pn_Secuencial3       : 59 66 67
pn_Secuencial4       : 57 58 68 69
pn_Secuencial5       : 59 67
pn_SetCurrentType    : 14 15 16 20
pn_VarDim            : 10
pn_VarDim2           : 12 13
pn_VarDim3           : 12
pn_VarDim4           : 
pn_loop_condicional1 : 54
pn_loop_condicional2 : 54
pn_loop_condicional3 : 54
pn_loop_no_condicional1 : 55
pn_loop_no_condicional2 : 55
pn_loop_no_condicional3 : 55
pn_loop_no_condicional4 : 55
pn_loop_no_condicional5 : 55
principal            : 1
programa             : 0
regresa              : 33
sp                   : 80
super_exp            : 75
term                 : 94
termino              : 89 95
tipo                 : 4 21 24
tipo_func            : 19
varDim               : 46 56
varDim2              : 
varLectura           : 57 59
varLectura2          : 56
variable             : 39 55 101

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMIC dec_variables pn_GOTOprincipal dec_funciones principal

    SEMIC           shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMIC . dec_variables pn_GOTOprincipal dec_funciones principal
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (103) empty -> .

    VARIABLES       shift and go to state 6
    FUNCION         reduce using rule 103 (empty -> .)
    PRINCIPAL       reduce using rule 103 (empty -> .)

    dec_variables                  shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMIC dec_variables . pn_GOTOprincipal dec_funciones principal
    (104) pn_GOTOprincipal -> .

    FUNCION         reduce using rule 104 (pn_GOTOprincipal -> .)
    PRINCIPAL       reduce using rule 104 (pn_GOTOprincipal -> .)

    pn_GOTOprincipal               shift and go to state 8

state 6

    (2) dec_variables -> VARIABLES . dec_variables2
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (14) tipo -> . INT_TYPE pn_SetCurrentType
    (15) tipo -> . CHAR_TYPE pn_SetCurrentType
    (16) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_variables2                 shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (3) dec_variables -> empty .

    FUNCION         reduce using rule 3 (dec_variables -> empty .)
    PRINCIPAL       reduce using rule 3 (dec_variables -> empty .)
    LCURLY          reduce using rule 3 (dec_variables -> empty .)


state 8

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal . dec_funciones principal
    (17) dec_funciones -> . dec_funciones2 dec_funciones
    (18) dec_funciones -> . empty
    (19) dec_funciones2 -> . FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (103) empty -> .

    FUNCION         shift and go to state 17
    PRINCIPAL       reduce using rule 103 (empty -> .)

    dec_funciones                  shift and go to state 14
    dec_funciones2                 shift and go to state 15
    empty                          shift and go to state 16

state 9

    (2) dec_variables -> VARIABLES dec_variables2 .

    FUNCION         reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    PRINCIPAL       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    LCURLY          reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)


state 10

    (4) dec_variables2 -> tipo . COLON lista_ids SEMIC dec_variables3

    COLON           shift and go to state 18


state 11

    (14) tipo -> INT_TYPE . pn_SetCurrentType
    (146) pn_SetCurrentType -> .

    COLON           reduce using rule 146 (pn_SetCurrentType -> .)
    ID              reduce using rule 146 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 19

state 12

    (15) tipo -> CHAR_TYPE . pn_SetCurrentType
    (146) pn_SetCurrentType -> .

    COLON           reduce using rule 146 (pn_SetCurrentType -> .)
    ID              reduce using rule 146 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 20

state 13

    (16) tipo -> FLOAT_TYPE . pn_SetCurrentType
    (146) pn_SetCurrentType -> .

    COLON           reduce using rule 146 (pn_SetCurrentType -> .)
    ID              reduce using rule 146 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 21

state 14

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones . principal
    (27) principal -> . PRINCIPAL pn_Principal1 LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 23

    principal                      shift and go to state 22

state 15

    (17) dec_funciones -> dec_funciones2 . dec_funciones
    (17) dec_funciones -> . dec_funciones2 dec_funciones
    (18) dec_funciones -> . empty
    (19) dec_funciones2 -> . FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (103) empty -> .

    FUNCION         shift and go to state 17
    PRINCIPAL       reduce using rule 103 (empty -> .)

    dec_funciones2                 shift and go to state 15
    dec_funciones                  shift and go to state 24
    empty                          shift and go to state 16

state 16

    (18) dec_funciones -> empty .

    PRINCIPAL       reduce using rule 18 (dec_funciones -> empty .)


state 17

    (19) dec_funciones2 -> FUNCION . tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (20) tipo_func -> . VOID pn_SetCurrentType
    (21) tipo_func -> . tipo
    (14) tipo -> . INT_TYPE pn_SetCurrentType
    (15) tipo -> . CHAR_TYPE pn_SetCurrentType
    (16) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 26
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    tipo_func                      shift and go to state 25
    tipo                           shift and go to state 27

state 18

    (4) dec_variables2 -> tipo COLON . lista_ids SEMIC dec_variables3
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 29

    lista_ids                      shift and go to state 28

state 19

    (14) tipo -> INT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 14 (tipo -> INT_TYPE pn_SetCurrentType .)
    ID              reduce using rule 14 (tipo -> INT_TYPE pn_SetCurrentType .)


state 20

    (15) tipo -> CHAR_TYPE pn_SetCurrentType .

    COLON           reduce using rule 15 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    ID              reduce using rule 15 (tipo -> CHAR_TYPE pn_SetCurrentType .)


state 21

    (16) tipo -> FLOAT_TYPE pn_SetCurrentType .

    COLON           reduce using rule 16 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    ID              reduce using rule 16 (tipo -> FLOAT_TYPE pn_SetCurrentType .)


state 22

    (1) programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMIC dec_variables pn_GOTOprincipal dec_funciones principal .)


state 23

    (27) principal -> PRINCIPAL . pn_Principal1 LPAREN RPAREN bloque
    (105) pn_Principal1 -> .

    LPAREN          reduce using rule 105 (pn_Principal1 -> .)

    pn_Principal1                  shift and go to state 30

state 24

    (17) dec_funciones -> dec_funciones2 dec_funciones .

    PRINCIPAL       reduce using rule 17 (dec_funciones -> dec_funciones2 dec_funciones .)


state 25

    (19) dec_funciones2 -> FUNCION tipo_func . ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    ID              shift and go to state 31


state 26

    (20) tipo_func -> VOID . pn_SetCurrentType
    (146) pn_SetCurrentType -> .

    ID              reduce using rule 146 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 32

state 27

    (21) tipo_func -> tipo .

    ID              reduce using rule 21 (tipo_func -> tipo .)


state 28

    (4) dec_variables2 -> tipo COLON lista_ids . SEMIC dec_variables3

    SEMIC           shift and go to state 33


state 29

    (7) lista_ids -> ID . pn_AddVariable DecVarDim lista_ids2
    (147) pn_AddVariable -> .

    LBRACK          reduce using rule 147 (pn_AddVariable -> .)
    COMMA           reduce using rule 147 (pn_AddVariable -> .)
    SEMIC           reduce using rule 147 (pn_AddVariable -> .)

    pn_AddVariable                 shift and go to state 34

state 30

    (27) principal -> PRINCIPAL pn_Principal1 . LPAREN RPAREN bloque

    LPAREN          shift and go to state 35


state 31

    (19) dec_funciones2 -> FUNCION tipo_func ID . pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (106) pn_AddFunc -> .

    LPAREN          reduce using rule 106 (pn_AddFunc -> .)

    pn_AddFunc                     shift and go to state 36

state 32

    (20) tipo_func -> VOID pn_SetCurrentType .

    ID              reduce using rule 20 (tipo_func -> VOID pn_SetCurrentType .)


state 33

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC . dec_variables3
    (5) dec_variables3 -> . dec_variables2
    (6) dec_variables3 -> . empty
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (103) empty -> .
    (14) tipo -> . INT_TYPE pn_SetCurrentType
    (15) tipo -> . CHAR_TYPE pn_SetCurrentType
    (16) tipo -> . FLOAT_TYPE pn_SetCurrentType

    FUNCION         reduce using rule 103 (empty -> .)
    PRINCIPAL       reduce using rule 103 (empty -> .)
    LCURLY          reduce using rule 103 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    tipo                           shift and go to state 10
    dec_variables3                 shift and go to state 37
    dec_variables2                 shift and go to state 38
    empty                          shift and go to state 39

state 34

    (7) lista_ids -> ID pn_AddVariable . DecVarDim lista_ids2
    (10) DecVarDim -> . DecVarDim2 pn_VarDim
    (11) DecVarDim -> . empty
    (12) DecVarDim2 -> . LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK pn_Columnas
    (103) empty -> .

    LBRACK          shift and go to state 43
    COMMA           reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)

    DecVarDim                      shift and go to state 40
    DecVarDim2                     shift and go to state 41
    empty                          shift and go to state 42

state 35

    (27) principal -> PRINCIPAL pn_Principal1 LPAREN . RPAREN bloque

    RPAREN          shift and go to state 44


state 36

    (19) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc . LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    LPAREN          shift and go to state 45


state 37

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .

    FUNCION         reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    PRINCIPAL       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    LCURLY          reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)


state 38

    (5) dec_variables3 -> dec_variables2 .

    FUNCION         reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    PRINCIPAL       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    LCURLY          reduce using rule 5 (dec_variables3 -> dec_variables2 .)


state 39

    (6) dec_variables3 -> empty .

    FUNCION         reduce using rule 6 (dec_variables3 -> empty .)
    PRINCIPAL       reduce using rule 6 (dec_variables3 -> empty .)
    LCURLY          reduce using rule 6 (dec_variables3 -> empty .)


state 40

    (7) lista_ids -> ID pn_AddVariable DecVarDim . lista_ids2
    (8) lista_ids2 -> . COMMA lista_ids
    (9) lista_ids2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 47
    SEMIC           reduce using rule 103 (empty -> .)

    lista_ids2                     shift and go to state 46
    empty                          shift and go to state 48

state 41

    (10) DecVarDim -> DecVarDim2 . pn_VarDim
    (153) pn_VarDim -> .

    COMMA           reduce using rule 153 (pn_VarDim -> .)
    SEMIC           reduce using rule 153 (pn_VarDim -> .)

    pn_VarDim                      shift and go to state 49

state 42

    (11) DecVarDim -> empty .

    COMMA           reduce using rule 11 (DecVarDim -> empty .)
    SEMIC           reduce using rule 11 (DecVarDim -> empty .)


state 43

    (12) DecVarDim2 -> LBRACK . pn_VarDim2 INT_CTE pn_VarDim3 RBRACK pn_Columnas
    (150) pn_VarDim2 -> .

    INT_CTE         reduce using rule 150 (pn_VarDim2 -> .)

    pn_VarDim2                     shift and go to state 50

state 44

    (27) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN . bloque
    (28) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 51

state 45

    (19) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN . dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3
    (22) dec_funcion_param -> . lista_parametros
    (23) dec_funcion_param -> . empty
    (24) lista_parametros -> . tipo ID pn_Funcion1 lista_parametros2
    (103) empty -> .
    (14) tipo -> . INT_TYPE pn_SetCurrentType
    (15) tipo -> . CHAR_TYPE pn_SetCurrentType
    (16) tipo -> . FLOAT_TYPE pn_SetCurrentType

    RPAREN          reduce using rule 103 (empty -> .)
    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    dec_funcion_param              shift and go to state 53
    lista_parametros               shift and go to state 54
    empty                          shift and go to state 55
    tipo                           shift and go to state 56

state 46

    (7) lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .

    SEMIC           reduce using rule 7 (lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .)


state 47

    (8) lista_ids2 -> COMMA . lista_ids
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 29

    lista_ids                      shift and go to state 57

state 48

    (9) lista_ids2 -> empty .

    SEMIC           reduce using rule 9 (lista_ids2 -> empty .)


state 49

    (10) DecVarDim -> DecVarDim2 pn_VarDim .

    COMMA           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)
    SEMIC           reduce using rule 10 (DecVarDim -> DecVarDim2 pn_VarDim .)


state 50

    (12) DecVarDim2 -> LBRACK pn_VarDim2 . INT_CTE pn_VarDim3 RBRACK pn_Columnas

    INT_CTE         shift and go to state 58


state 51

    (27) principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .

    $end            reduce using rule 27 (principal -> PRINCIPAL pn_Principal1 LPAREN RPAREN bloque .)


state 52

    (28) bloque -> LCURLY . estatutos RCURLY
    (29) estatutos -> . estatuto estatutos
    (30) estatutos -> . empty
    (31) estatuto -> . asignacion
    (32) estatuto -> . condicion
    (33) estatuto -> . regresa
    (34) estatuto -> . loop_condicional
    (35) estatuto -> . loop_no_condicional
    (36) estatuto -> . llamada_funcion
    (37) estatuto -> . escritura
    (38) estatuto -> . lectura
    (103) empty -> .
    (39) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (51) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (66) regresa -> . REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (54) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (55) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (67) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (59) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (46) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 103 (empty -> .)
    SI              shift and go to state 71
    REGRESA         shift and go to state 72
    MIENTRAS        shift and go to state 73
    DESDE           shift and go to state 74
    ID              shift and go to state 75
    ESCRIBE         shift and go to state 76
    LEE             shift and go to state 77

    estatutos                      shift and go to state 59
    estatuto                       shift and go to state 60
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    condicion                      shift and go to state 63
    regresa                        shift and go to state 64
    loop_condicional               shift and go to state 65
    loop_no_condicional            shift and go to state 66
    llamada_funcion                shift and go to state 67
    escritura                      shift and go to state 68
    lectura                        shift and go to state 69
    variable                       shift and go to state 70

state 53

    (19) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param . RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3

    RPAREN          shift and go to state 78


state 54

    (22) dec_funcion_param -> lista_parametros .

    RPAREN          reduce using rule 22 (dec_funcion_param -> lista_parametros .)


state 55

    (23) dec_funcion_param -> empty .

    RPAREN          reduce using rule 23 (dec_funcion_param -> empty .)


state 56

    (24) lista_parametros -> tipo . ID pn_Funcion1 lista_parametros2

    ID              shift and go to state 79


state 57

    (8) lista_ids2 -> COMMA lista_ids .

    SEMIC           reduce using rule 8 (lista_ids2 -> COMMA lista_ids .)


state 58

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE . pn_VarDim3 RBRACK pn_Columnas
    (151) pn_VarDim3 -> .

    RBRACK          reduce using rule 151 (pn_VarDim3 -> .)

    pn_VarDim3                     shift and go to state 80

state 59

    (28) bloque -> LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 81


state 60

    (29) estatutos -> estatuto . estatutos
    (29) estatutos -> . estatuto estatutos
    (30) estatutos -> . empty
    (31) estatuto -> . asignacion
    (32) estatuto -> . condicion
    (33) estatuto -> . regresa
    (34) estatuto -> . loop_condicional
    (35) estatuto -> . loop_no_condicional
    (36) estatuto -> . llamada_funcion
    (37) estatuto -> . escritura
    (38) estatuto -> . lectura
    (103) empty -> .
    (39) asignacion -> . variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (51) condicion -> . SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (66) regresa -> . REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (54) loop_condicional -> . MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (55) loop_no_condicional -> . DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (67) escritura -> . ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (59) lectura -> . LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (46) variable -> . ID pn_Expresion1 varDim

    RCURLY          reduce using rule 103 (empty -> .)
    SI              shift and go to state 71
    REGRESA         shift and go to state 72
    MIENTRAS        shift and go to state 73
    DESDE           shift and go to state 74
    ID              shift and go to state 75
    ESCRIBE         shift and go to state 76
    LEE             shift and go to state 77

    estatuto                       shift and go to state 60
    estatutos                      shift and go to state 82
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    condicion                      shift and go to state 63
    regresa                        shift and go to state 64
    loop_condicional               shift and go to state 65
    loop_no_condicional            shift and go to state 66
    llamada_funcion                shift and go to state 67
    escritura                      shift and go to state 68
    lectura                        shift and go to state 69
    variable                       shift and go to state 70

state 61

    (30) estatutos -> empty .

    RCURLY          reduce using rule 30 (estatutos -> empty .)


state 62

    (31) estatuto -> asignacion .

    SI              reduce using rule 31 (estatuto -> asignacion .)
    REGRESA         reduce using rule 31 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 31 (estatuto -> asignacion .)
    DESDE           reduce using rule 31 (estatuto -> asignacion .)
    ID              reduce using rule 31 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 31 (estatuto -> asignacion .)
    LEE             reduce using rule 31 (estatuto -> asignacion .)
    RCURLY          reduce using rule 31 (estatuto -> asignacion .)


state 63

    (32) estatuto -> condicion .

    SI              reduce using rule 32 (estatuto -> condicion .)
    REGRESA         reduce using rule 32 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 32 (estatuto -> condicion .)
    DESDE           reduce using rule 32 (estatuto -> condicion .)
    ID              reduce using rule 32 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 32 (estatuto -> condicion .)
    LEE             reduce using rule 32 (estatuto -> condicion .)
    RCURLY          reduce using rule 32 (estatuto -> condicion .)


state 64

    (33) estatuto -> regresa .

    SI              reduce using rule 33 (estatuto -> regresa .)
    REGRESA         reduce using rule 33 (estatuto -> regresa .)
    MIENTRAS        reduce using rule 33 (estatuto -> regresa .)
    DESDE           reduce using rule 33 (estatuto -> regresa .)
    ID              reduce using rule 33 (estatuto -> regresa .)
    ESCRIBE         reduce using rule 33 (estatuto -> regresa .)
    LEE             reduce using rule 33 (estatuto -> regresa .)
    RCURLY          reduce using rule 33 (estatuto -> regresa .)


state 65

    (34) estatuto -> loop_condicional .

    SI              reduce using rule 34 (estatuto -> loop_condicional .)
    REGRESA         reduce using rule 34 (estatuto -> loop_condicional .)
    MIENTRAS        reduce using rule 34 (estatuto -> loop_condicional .)
    DESDE           reduce using rule 34 (estatuto -> loop_condicional .)
    ID              reduce using rule 34 (estatuto -> loop_condicional .)
    ESCRIBE         reduce using rule 34 (estatuto -> loop_condicional .)
    LEE             reduce using rule 34 (estatuto -> loop_condicional .)
    RCURLY          reduce using rule 34 (estatuto -> loop_condicional .)


state 66

    (35) estatuto -> loop_no_condicional .

    SI              reduce using rule 35 (estatuto -> loop_no_condicional .)
    REGRESA         reduce using rule 35 (estatuto -> loop_no_condicional .)
    MIENTRAS        reduce using rule 35 (estatuto -> loop_no_condicional .)
    DESDE           reduce using rule 35 (estatuto -> loop_no_condicional .)
    ID              reduce using rule 35 (estatuto -> loop_no_condicional .)
    ESCRIBE         reduce using rule 35 (estatuto -> loop_no_condicional .)
    LEE             reduce using rule 35 (estatuto -> loop_no_condicional .)
    RCURLY          reduce using rule 35 (estatuto -> loop_no_condicional .)


state 67

    (36) estatuto -> llamada_funcion .

    SI              reduce using rule 36 (estatuto -> llamada_funcion .)
    REGRESA         reduce using rule 36 (estatuto -> llamada_funcion .)
    MIENTRAS        reduce using rule 36 (estatuto -> llamada_funcion .)
    DESDE           reduce using rule 36 (estatuto -> llamada_funcion .)
    ID              reduce using rule 36 (estatuto -> llamada_funcion .)
    ESCRIBE         reduce using rule 36 (estatuto -> llamada_funcion .)
    LEE             reduce using rule 36 (estatuto -> llamada_funcion .)
    RCURLY          reduce using rule 36 (estatuto -> llamada_funcion .)


state 68

    (37) estatuto -> escritura .

    SI              reduce using rule 37 (estatuto -> escritura .)
    REGRESA         reduce using rule 37 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 37 (estatuto -> escritura .)
    DESDE           reduce using rule 37 (estatuto -> escritura .)
    ID              reduce using rule 37 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 37 (estatuto -> escritura .)
    LEE             reduce using rule 37 (estatuto -> escritura .)
    RCURLY          reduce using rule 37 (estatuto -> escritura .)


state 69

    (38) estatuto -> lectura .

    SI              reduce using rule 38 (estatuto -> lectura .)
    REGRESA         reduce using rule 38 (estatuto -> lectura .)
    MIENTRAS        reduce using rule 38 (estatuto -> lectura .)
    DESDE           reduce using rule 38 (estatuto -> lectura .)
    ID              reduce using rule 38 (estatuto -> lectura .)
    ESCRIBE         reduce using rule 38 (estatuto -> lectura .)
    LEE             reduce using rule 38 (estatuto -> lectura .)
    RCURLY          reduce using rule 38 (estatuto -> lectura .)


state 70

    (39) asignacion -> variable . ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2

    ASSIGN          shift and go to state 83


state 71

    (51) condicion -> SI . LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    LPAREN          shift and go to state 84


state 72

    (66) regresa -> REGRESA . pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC
    (131) pn_Secuencial3 -> .

    LPAREN          reduce using rule 131 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 85

state 73

    (54) loop_condicional -> MIENTRAS . pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (138) pn_loop_condicional1 -> .

    LPAREN          reduce using rule 138 (pn_loop_condicional1 -> .)

    pn_loop_condicional1           shift and go to state 86

state 74

    (55) loop_no_condicional -> DESDE . pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (141) pn_loop_no_condicional1 -> .

    ID              reduce using rule 141 (pn_loop_no_condicional1 -> .)

    pn_loop_no_condicional1        shift and go to state 87

state 75

    (64) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (46) variable -> ID . pn_Expresion1 varDim
    (110) pn_FuncionLlamada1 -> .
    (118) pn_Expresion1 -> .

    LPAREN          reduce using rule 110 (pn_FuncionLlamada1 -> .)
    LBRACK          reduce using rule 118 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 118 (pn_Expresion1 -> .)

    pn_FuncionLlamada1             shift and go to state 88
    pn_Expresion1                  shift and go to state 89

state 76

    (67) escritura -> ESCRIBE . pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5
    (131) pn_Secuencial3 -> .

    LPAREN          reduce using rule 131 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 90

state 77

    (59) lectura -> LEE . pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5
    (131) pn_Secuencial3 -> .

    LPAREN          reduce using rule 131 (pn_Secuencial3 -> .)

    pn_Secuencial3                 shift and go to state 91

state 78

    (19) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN . pn_Funcion2 dec_variables bloque pn_Funcion3
    (108) pn_Funcion2 -> .

    VARIABLES       reduce using rule 108 (pn_Funcion2 -> .)
    LCURLY          reduce using rule 108 (pn_Funcion2 -> .)

    pn_Funcion2                    shift and go to state 92

state 79

    (24) lista_parametros -> tipo ID . pn_Funcion1 lista_parametros2
    (107) pn_Funcion1 -> .

    COMMA           reduce using rule 107 (pn_Funcion1 -> .)
    RPAREN          reduce using rule 107 (pn_Funcion1 -> .)

    pn_Funcion1                    shift and go to state 93

state 80

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 . RBRACK pn_Columnas

    RBRACK          shift and go to state 94


state 81

    (28) bloque -> LCURLY estatutos RCURLY .

    $end            reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)
    FUNCION         reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)
    PRINCIPAL       reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)
    SINO            reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)
    SI              reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)
    REGRESA         reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)
    MIENTRAS        reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)
    DESDE           reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)
    ID              reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)
    ESCRIBE         reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)
    LEE             reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 28 (bloque -> LCURLY estatutos RCURLY .)


state 82

    (29) estatutos -> estatuto estatutos .

    RCURLY          reduce using rule 29 (estatutos -> estatuto estatutos .)


state 83

    (39) asignacion -> variable ASSIGN . pn_Secuencial1 expresion SEMIC pn_Secuencial2
    (129) pn_Secuencial1 -> .

    LPAREN          reduce using rule 129 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 129 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 129 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 129 (pn_Secuencial1 -> .)
    ID              reduce using rule 129 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 129 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 129 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 95

state 84

    (51) condicion -> SI LPAREN . expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 97
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 85

    (66) regresa -> REGRESA pn_Secuencial3 . LPAREN exp RPAREN pn_Regresa SEMIC

    LPAREN          shift and go to state 113


state 86

    (54) loop_condicional -> MIENTRAS pn_loop_condicional1 . LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    LPAREN          shift and go to state 114


state 87

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 . variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (46) variable -> . ID pn_Expresion1 varDim

    ID              shift and go to state 116

    variable                       shift and go to state 115

state 88

    (64) llamada_funcion -> ID pn_FuncionLlamada1 . LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> ID pn_FuncionLlamada1 . LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3

    LPAREN          shift and go to state 117


state 89

    (46) variable -> ID pn_Expresion1 . varDim
    (47) varDim -> . LBRACK expresion RBRACK
    (48) varDim -> . empty
    (103) empty -> .

    LBRACK          shift and go to state 119
    ASSIGN          reduce using rule 103 (empty -> .)
    MULT_OP         reduce using rule 103 (empty -> .)
    DIV_OP          reduce using rule 103 (empty -> .)
    PLUS_OP         reduce using rule 103 (empty -> .)
    MINUS_OP        reduce using rule 103 (empty -> .)
    LT_LOG          reduce using rule 103 (empty -> .)
    GT_LOG          reduce using rule 103 (empty -> .)
    LTE_LOG         reduce using rule 103 (empty -> .)
    GTE_LOG         reduce using rule 103 (empty -> .)
    NE_LOG          reduce using rule 103 (empty -> .)
    EQUAL_LOG       reduce using rule 103 (empty -> .)
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    varDim                         shift and go to state 118
    empty                          shift and go to state 120

state 90

    (67) escritura -> ESCRIBE pn_Secuencial3 . LPAREN escritura2 RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 121


state 91

    (59) lectura -> LEE pn_Secuencial3 . LPAREN varLectura RPAREN SEMIC pn_Secuencial5

    LPAREN          shift and go to state 122


state 92

    (19) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 . dec_variables bloque pn_Funcion3
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (103) empty -> .

    VARIABLES       shift and go to state 6
    LCURLY          reduce using rule 103 (empty -> .)

    dec_variables                  shift and go to state 123
    empty                          shift and go to state 7

state 93

    (24) lista_parametros -> tipo ID pn_Funcion1 . lista_parametros2
    (25) lista_parametros2 -> . COMMA lista_parametros
    (26) lista_parametros2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 125
    RPAREN          reduce using rule 103 (empty -> .)

    lista_parametros2              shift and go to state 124
    empty                          shift and go to state 126

state 94

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK . pn_Columnas
    (149) pn_Columnas -> .

    COMMA           reduce using rule 149 (pn_Columnas -> .)
    SEMIC           reduce using rule 149 (pn_Columnas -> .)

    pn_Columnas                    shift and go to state 127

state 95

    (39) asignacion -> variable ASSIGN pn_Secuencial1 . expresion SEMIC pn_Secuencial2
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    variable                       shift and go to state 104
    expresion                      shift and go to state 128
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 96

    (100) factor -> LPAREN . pn_Expresion6 exp RPAREN pn_Expresion7
    (123) pn_Expresion6 -> .

    LPAREN          reduce using rule 123 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 123 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 123 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 123 (pn_Expresion6 -> .)
    ID              reduce using rule 123 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 123 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 123 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 129

state 97

    (51) condicion -> SI LPAREN expresion . RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2

    RPAREN          shift and go to state 130


state 98

    (72) expresion -> mega_exp . expresion1
    (73) expresion1 -> . ASSIGN expresion
    (74) expresion1 -> . empty
    (103) empty -> .

    ASSIGN          shift and go to state 132
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)

    expresion1                     shift and go to state 131
    empty                          shift and go to state 133

state 99

    (75) mega_exp -> super_exp . meg
    (76) meg -> . op_l pn_Expresion10 mega_exp pn_Expresion11
    (77) meg -> . empty
    (78) op_l -> . AND_LOG
    (79) op_l -> . OR_LOG
    (103) empty -> .

    AND_LOG         shift and go to state 137
    OR_LOG          shift and go to state 138
    ASSIGN          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)

    meg                            shift and go to state 134
    op_l                           shift and go to state 135
    empty                          shift and go to state 136

state 100

    (80) super_exp -> exp . sp
    (81) sp -> . op_r exp pn_Expresion9
    (82) sp -> . empty
    (83) op_r -> . LT_LOG pn_Expresion8
    (84) op_r -> . GT_LOG pn_Expresion8
    (85) op_r -> . LTE_LOG pn_Expresion8
    (86) op_r -> . GTE_LOG pn_Expresion8
    (87) op_r -> . NE_LOG pn_Expresion8
    (88) op_r -> . EQUAL_LOG pn_Expresion8
    (103) empty -> .

    LT_LOG          shift and go to state 142
    GT_LOG          shift and go to state 143
    LTE_LOG         shift and go to state 144
    GTE_LOG         shift and go to state 145
    NE_LOG          shift and go to state 146
    EQUAL_LOG       shift and go to state 147
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    ASSIGN          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)

    sp                             shift and go to state 139
    op_r                           shift and go to state 140
    empty                          shift and go to state 141

state 101

    (89) exp -> termino . pn_Expresion4 exp1
    (121) pn_Expresion4 -> .

    PLUS_OP         reduce using rule 121 (pn_Expresion4 -> .)
    MINUS_OP        reduce using rule 121 (pn_Expresion4 -> .)
    LT_LOG          reduce using rule 121 (pn_Expresion4 -> .)
    GT_LOG          reduce using rule 121 (pn_Expresion4 -> .)
    LTE_LOG         reduce using rule 121 (pn_Expresion4 -> .)
    GTE_LOG         reduce using rule 121 (pn_Expresion4 -> .)
    NE_LOG          reduce using rule 121 (pn_Expresion4 -> .)
    EQUAL_LOG       reduce using rule 121 (pn_Expresion4 -> .)
    AND_LOG         reduce using rule 121 (pn_Expresion4 -> .)
    OR_LOG          reduce using rule 121 (pn_Expresion4 -> .)
    ASSIGN          reduce using rule 121 (pn_Expresion4 -> .)
    RPAREN          reduce using rule 121 (pn_Expresion4 -> .)
    SEMIC           reduce using rule 121 (pn_Expresion4 -> .)
    RBRACK          reduce using rule 121 (pn_Expresion4 -> .)
    COMMA           reduce using rule 121 (pn_Expresion4 -> .)
    HASTA           reduce using rule 121 (pn_Expresion4 -> .)
    HACER           reduce using rule 121 (pn_Expresion4 -> .)

    pn_Expresion4                  shift and go to state 148

state 102

    (94) termino -> factor . pn_Expresion5 term
    (122) pn_Expresion5 -> .

    MULT_OP         reduce using rule 122 (pn_Expresion5 -> .)
    DIV_OP          reduce using rule 122 (pn_Expresion5 -> .)
    PLUS_OP         reduce using rule 122 (pn_Expresion5 -> .)
    MINUS_OP        reduce using rule 122 (pn_Expresion5 -> .)
    LT_LOG          reduce using rule 122 (pn_Expresion5 -> .)
    GT_LOG          reduce using rule 122 (pn_Expresion5 -> .)
    LTE_LOG         reduce using rule 122 (pn_Expresion5 -> .)
    GTE_LOG         reduce using rule 122 (pn_Expresion5 -> .)
    NE_LOG          reduce using rule 122 (pn_Expresion5 -> .)
    EQUAL_LOG       reduce using rule 122 (pn_Expresion5 -> .)
    AND_LOG         reduce using rule 122 (pn_Expresion5 -> .)
    OR_LOG          reduce using rule 122 (pn_Expresion5 -> .)
    ASSIGN          reduce using rule 122 (pn_Expresion5 -> .)
    RPAREN          reduce using rule 122 (pn_Expresion5 -> .)
    SEMIC           reduce using rule 122 (pn_Expresion5 -> .)
    RBRACK          reduce using rule 122 (pn_Expresion5 -> .)
    COMMA           reduce using rule 122 (pn_Expresion5 -> .)
    HASTA           reduce using rule 122 (pn_Expresion5 -> .)
    HACER           reduce using rule 122 (pn_Expresion5 -> .)

    pn_Expresion5                  shift and go to state 149

state 103

    (99) factor -> ctes .

    MULT_OP         reduce using rule 99 (factor -> ctes .)
    DIV_OP          reduce using rule 99 (factor -> ctes .)
    PLUS_OP         reduce using rule 99 (factor -> ctes .)
    MINUS_OP        reduce using rule 99 (factor -> ctes .)
    LT_LOG          reduce using rule 99 (factor -> ctes .)
    GT_LOG          reduce using rule 99 (factor -> ctes .)
    LTE_LOG         reduce using rule 99 (factor -> ctes .)
    GTE_LOG         reduce using rule 99 (factor -> ctes .)
    NE_LOG          reduce using rule 99 (factor -> ctes .)
    EQUAL_LOG       reduce using rule 99 (factor -> ctes .)
    AND_LOG         reduce using rule 99 (factor -> ctes .)
    OR_LOG          reduce using rule 99 (factor -> ctes .)
    ASSIGN          reduce using rule 99 (factor -> ctes .)
    RPAREN          reduce using rule 99 (factor -> ctes .)
    SEMIC           reduce using rule 99 (factor -> ctes .)
    RBRACK          reduce using rule 99 (factor -> ctes .)
    COMMA           reduce using rule 99 (factor -> ctes .)
    HASTA           reduce using rule 99 (factor -> ctes .)
    HACER           reduce using rule 99 (factor -> ctes .)


state 104

    (101) factor -> variable .

    MULT_OP         reduce using rule 101 (factor -> variable .)
    DIV_OP          reduce using rule 101 (factor -> variable .)
    PLUS_OP         reduce using rule 101 (factor -> variable .)
    MINUS_OP        reduce using rule 101 (factor -> variable .)
    LT_LOG          reduce using rule 101 (factor -> variable .)
    GT_LOG          reduce using rule 101 (factor -> variable .)
    LTE_LOG         reduce using rule 101 (factor -> variable .)
    GTE_LOG         reduce using rule 101 (factor -> variable .)
    NE_LOG          reduce using rule 101 (factor -> variable .)
    EQUAL_LOG       reduce using rule 101 (factor -> variable .)
    AND_LOG         reduce using rule 101 (factor -> variable .)
    OR_LOG          reduce using rule 101 (factor -> variable .)
    ASSIGN          reduce using rule 101 (factor -> variable .)
    RPAREN          reduce using rule 101 (factor -> variable .)
    SEMIC           reduce using rule 101 (factor -> variable .)
    RBRACK          reduce using rule 101 (factor -> variable .)
    COMMA           reduce using rule 101 (factor -> variable .)
    HASTA           reduce using rule 101 (factor -> variable .)
    HACER           reduce using rule 101 (factor -> variable .)


state 105

    (102) factor -> llamada_funcion .

    MULT_OP         reduce using rule 102 (factor -> llamada_funcion .)
    DIV_OP          reduce using rule 102 (factor -> llamada_funcion .)
    PLUS_OP         reduce using rule 102 (factor -> llamada_funcion .)
    MINUS_OP        reduce using rule 102 (factor -> llamada_funcion .)
    LT_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    GT_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    LTE_LOG         reduce using rule 102 (factor -> llamada_funcion .)
    GTE_LOG         reduce using rule 102 (factor -> llamada_funcion .)
    NE_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    EQUAL_LOG       reduce using rule 102 (factor -> llamada_funcion .)
    AND_LOG         reduce using rule 102 (factor -> llamada_funcion .)
    OR_LOG          reduce using rule 102 (factor -> llamada_funcion .)
    ASSIGN          reduce using rule 102 (factor -> llamada_funcion .)
    RPAREN          reduce using rule 102 (factor -> llamada_funcion .)
    SEMIC           reduce using rule 102 (factor -> llamada_funcion .)
    RBRACK          reduce using rule 102 (factor -> llamada_funcion .)
    COMMA           reduce using rule 102 (factor -> llamada_funcion .)
    HASTA           reduce using rule 102 (factor -> llamada_funcion .)
    HACER           reduce using rule 102 (factor -> llamada_funcion .)


state 106

    (40) ctes -> CHAR_CTE . pn_CTEChar
    (116) pn_CTEChar -> .

    MULT_OP         reduce using rule 116 (pn_CTEChar -> .)
    DIV_OP          reduce using rule 116 (pn_CTEChar -> .)
    PLUS_OP         reduce using rule 116 (pn_CTEChar -> .)
    MINUS_OP        reduce using rule 116 (pn_CTEChar -> .)
    LT_LOG          reduce using rule 116 (pn_CTEChar -> .)
    GT_LOG          reduce using rule 116 (pn_CTEChar -> .)
    LTE_LOG         reduce using rule 116 (pn_CTEChar -> .)
    GTE_LOG         reduce using rule 116 (pn_CTEChar -> .)
    NE_LOG          reduce using rule 116 (pn_CTEChar -> .)
    EQUAL_LOG       reduce using rule 116 (pn_CTEChar -> .)
    AND_LOG         reduce using rule 116 (pn_CTEChar -> .)
    OR_LOG          reduce using rule 116 (pn_CTEChar -> .)
    ASSIGN          reduce using rule 116 (pn_CTEChar -> .)
    RPAREN          reduce using rule 116 (pn_CTEChar -> .)
    SEMIC           reduce using rule 116 (pn_CTEChar -> .)
    RBRACK          reduce using rule 116 (pn_CTEChar -> .)
    COMMA           reduce using rule 116 (pn_CTEChar -> .)
    HASTA           reduce using rule 116 (pn_CTEChar -> .)
    HACER           reduce using rule 116 (pn_CTEChar -> .)

    pn_CTEChar                     shift and go to state 150

state 107

    (41) ctes -> STRING_CTE . pn_CTEString
    (117) pn_CTEString -> .

    MULT_OP         reduce using rule 117 (pn_CTEString -> .)
    DIV_OP          reduce using rule 117 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 117 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 117 (pn_CTEString -> .)
    LT_LOG          reduce using rule 117 (pn_CTEString -> .)
    GT_LOG          reduce using rule 117 (pn_CTEString -> .)
    LTE_LOG         reduce using rule 117 (pn_CTEString -> .)
    GTE_LOG         reduce using rule 117 (pn_CTEString -> .)
    NE_LOG          reduce using rule 117 (pn_CTEString -> .)
    EQUAL_LOG       reduce using rule 117 (pn_CTEString -> .)
    AND_LOG         reduce using rule 117 (pn_CTEString -> .)
    OR_LOG          reduce using rule 117 (pn_CTEString -> .)
    ASSIGN          reduce using rule 117 (pn_CTEString -> .)
    RPAREN          reduce using rule 117 (pn_CTEString -> .)
    SEMIC           reduce using rule 117 (pn_CTEString -> .)
    RBRACK          reduce using rule 117 (pn_CTEString -> .)
    COMMA           reduce using rule 117 (pn_CTEString -> .)
    HASTA           reduce using rule 117 (pn_CTEString -> .)
    HACER           reduce using rule 117 (pn_CTEString -> .)

    pn_CTEString                   shift and go to state 151

state 108

    (42) ctes -> MINUS_OP . pn_CTENeg num
    (113) pn_CTENeg -> .

    INT_CTE         reduce using rule 113 (pn_CTENeg -> .)
    FLOAT_CTE       reduce using rule 113 (pn_CTENeg -> .)

    pn_CTENeg                      shift and go to state 152

state 109

    (43) ctes -> num .

    MULT_OP         reduce using rule 43 (ctes -> num .)
    DIV_OP          reduce using rule 43 (ctes -> num .)
    PLUS_OP         reduce using rule 43 (ctes -> num .)
    MINUS_OP        reduce using rule 43 (ctes -> num .)
    LT_LOG          reduce using rule 43 (ctes -> num .)
    GT_LOG          reduce using rule 43 (ctes -> num .)
    LTE_LOG         reduce using rule 43 (ctes -> num .)
    GTE_LOG         reduce using rule 43 (ctes -> num .)
    NE_LOG          reduce using rule 43 (ctes -> num .)
    EQUAL_LOG       reduce using rule 43 (ctes -> num .)
    AND_LOG         reduce using rule 43 (ctes -> num .)
    OR_LOG          reduce using rule 43 (ctes -> num .)
    ASSIGN          reduce using rule 43 (ctes -> num .)
    RPAREN          reduce using rule 43 (ctes -> num .)
    SEMIC           reduce using rule 43 (ctes -> num .)
    RBRACK          reduce using rule 43 (ctes -> num .)
    COMMA           reduce using rule 43 (ctes -> num .)
    HASTA           reduce using rule 43 (ctes -> num .)
    HACER           reduce using rule 43 (ctes -> num .)


state 110

    (46) variable -> ID . pn_Expresion1 varDim
    (64) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> ID . pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (118) pn_Expresion1 -> .
    (110) pn_FuncionLlamada1 -> .

    LBRACK          reduce using rule 118 (pn_Expresion1 -> .)
    MULT_OP         reduce using rule 118 (pn_Expresion1 -> .)
    DIV_OP          reduce using rule 118 (pn_Expresion1 -> .)
    PLUS_OP         reduce using rule 118 (pn_Expresion1 -> .)
    MINUS_OP        reduce using rule 118 (pn_Expresion1 -> .)
    LT_LOG          reduce using rule 118 (pn_Expresion1 -> .)
    GT_LOG          reduce using rule 118 (pn_Expresion1 -> .)
    LTE_LOG         reduce using rule 118 (pn_Expresion1 -> .)
    GTE_LOG         reduce using rule 118 (pn_Expresion1 -> .)
    NE_LOG          reduce using rule 118 (pn_Expresion1 -> .)
    EQUAL_LOG       reduce using rule 118 (pn_Expresion1 -> .)
    AND_LOG         reduce using rule 118 (pn_Expresion1 -> .)
    OR_LOG          reduce using rule 118 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 118 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 118 (pn_Expresion1 -> .)
    SEMIC           reduce using rule 118 (pn_Expresion1 -> .)
    RBRACK          reduce using rule 118 (pn_Expresion1 -> .)
    COMMA           reduce using rule 118 (pn_Expresion1 -> .)
    HASTA           reduce using rule 118 (pn_Expresion1 -> .)
    HACER           reduce using rule 118 (pn_Expresion1 -> .)
    LPAREN          reduce using rule 110 (pn_FuncionLlamada1 -> .)

    pn_Expresion1                  shift and go to state 89
    pn_FuncionLlamada1             shift and go to state 88

state 111

    (44) num -> INT_CTE . pn_CTEInt
    (114) pn_CTEInt -> .

    MULT_OP         reduce using rule 114 (pn_CTEInt -> .)
    DIV_OP          reduce using rule 114 (pn_CTEInt -> .)
    PLUS_OP         reduce using rule 114 (pn_CTEInt -> .)
    MINUS_OP        reduce using rule 114 (pn_CTEInt -> .)
    LT_LOG          reduce using rule 114 (pn_CTEInt -> .)
    GT_LOG          reduce using rule 114 (pn_CTEInt -> .)
    LTE_LOG         reduce using rule 114 (pn_CTEInt -> .)
    GTE_LOG         reduce using rule 114 (pn_CTEInt -> .)
    NE_LOG          reduce using rule 114 (pn_CTEInt -> .)
    EQUAL_LOG       reduce using rule 114 (pn_CTEInt -> .)
    AND_LOG         reduce using rule 114 (pn_CTEInt -> .)
    OR_LOG          reduce using rule 114 (pn_CTEInt -> .)
    ASSIGN          reduce using rule 114 (pn_CTEInt -> .)
    RPAREN          reduce using rule 114 (pn_CTEInt -> .)
    SEMIC           reduce using rule 114 (pn_CTEInt -> .)
    RBRACK          reduce using rule 114 (pn_CTEInt -> .)
    COMMA           reduce using rule 114 (pn_CTEInt -> .)
    HASTA           reduce using rule 114 (pn_CTEInt -> .)
    HACER           reduce using rule 114 (pn_CTEInt -> .)

    pn_CTEInt                      shift and go to state 153

state 112

    (45) num -> FLOAT_CTE . pn_CTEFloat
    (115) pn_CTEFloat -> .

    MULT_OP         reduce using rule 115 (pn_CTEFloat -> .)
    DIV_OP          reduce using rule 115 (pn_CTEFloat -> .)
    PLUS_OP         reduce using rule 115 (pn_CTEFloat -> .)
    MINUS_OP        reduce using rule 115 (pn_CTEFloat -> .)
    LT_LOG          reduce using rule 115 (pn_CTEFloat -> .)
    GT_LOG          reduce using rule 115 (pn_CTEFloat -> .)
    LTE_LOG         reduce using rule 115 (pn_CTEFloat -> .)
    GTE_LOG         reduce using rule 115 (pn_CTEFloat -> .)
    NE_LOG          reduce using rule 115 (pn_CTEFloat -> .)
    EQUAL_LOG       reduce using rule 115 (pn_CTEFloat -> .)
    AND_LOG         reduce using rule 115 (pn_CTEFloat -> .)
    OR_LOG          reduce using rule 115 (pn_CTEFloat -> .)
    ASSIGN          reduce using rule 115 (pn_CTEFloat -> .)
    RPAREN          reduce using rule 115 (pn_CTEFloat -> .)
    SEMIC           reduce using rule 115 (pn_CTEFloat -> .)
    RBRACK          reduce using rule 115 (pn_CTEFloat -> .)
    COMMA           reduce using rule 115 (pn_CTEFloat -> .)
    HASTA           reduce using rule 115 (pn_CTEFloat -> .)
    HACER           reduce using rule 115 (pn_CTEFloat -> .)

    pn_CTEFloat                    shift and go to state 154

state 113

    (66) regresa -> REGRESA pn_Secuencial3 LPAREN . exp RPAREN pn_Regresa SEMIC
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    exp                            shift and go to state 155
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 114

    (54) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN . expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 156
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 115

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable . ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    ASSIGN          shift and go to state 157


state 116

    (46) variable -> ID . pn_Expresion1 varDim
    (118) pn_Expresion1 -> .

    LBRACK          reduce using rule 118 (pn_Expresion1 -> .)
    ASSIGN          reduce using rule 118 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 89

state 117

    (64) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN . pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN . pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (123) pn_Expresion6 -> .

    LPAREN          reduce using rule 123 (pn_Expresion6 -> .)
    CHAR_CTE        reduce using rule 123 (pn_Expresion6 -> .)
    STRING_CTE      reduce using rule 123 (pn_Expresion6 -> .)
    MINUS_OP        reduce using rule 123 (pn_Expresion6 -> .)
    ID              reduce using rule 123 (pn_Expresion6 -> .)
    INT_CTE         reduce using rule 123 (pn_Expresion6 -> .)
    FLOAT_CTE       reduce using rule 123 (pn_Expresion6 -> .)
    RPAREN          reduce using rule 123 (pn_Expresion6 -> .)

    pn_Expresion6                  shift and go to state 158

state 118

    (46) variable -> ID pn_Expresion1 varDim .

    ASSIGN          reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    MULT_OP         reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    DIV_OP          reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    PLUS_OP         reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    MINUS_OP        reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    LT_LOG          reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    GT_LOG          reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    LTE_LOG         reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    GTE_LOG         reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    NE_LOG          reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    EQUAL_LOG       reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    AND_LOG         reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    OR_LOG          reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    RPAREN          reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    SEMIC           reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    RBRACK          reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    COMMA           reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    HASTA           reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)
    HACER           reduce using rule 46 (variable -> ID pn_Expresion1 varDim .)


state 119

    (47) varDim -> LBRACK . expresion RBRACK
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 159
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 120

    (48) varDim -> empty .

    ASSIGN          reduce using rule 48 (varDim -> empty .)
    MULT_OP         reduce using rule 48 (varDim -> empty .)
    DIV_OP          reduce using rule 48 (varDim -> empty .)
    PLUS_OP         reduce using rule 48 (varDim -> empty .)
    MINUS_OP        reduce using rule 48 (varDim -> empty .)
    LT_LOG          reduce using rule 48 (varDim -> empty .)
    GT_LOG          reduce using rule 48 (varDim -> empty .)
    LTE_LOG         reduce using rule 48 (varDim -> empty .)
    GTE_LOG         reduce using rule 48 (varDim -> empty .)
    NE_LOG          reduce using rule 48 (varDim -> empty .)
    EQUAL_LOG       reduce using rule 48 (varDim -> empty .)
    AND_LOG         reduce using rule 48 (varDim -> empty .)
    OR_LOG          reduce using rule 48 (varDim -> empty .)
    RPAREN          reduce using rule 48 (varDim -> empty .)
    SEMIC           reduce using rule 48 (varDim -> empty .)
    RBRACK          reduce using rule 48 (varDim -> empty .)
    COMMA           reduce using rule 48 (varDim -> empty .)
    HASTA           reduce using rule 48 (varDim -> empty .)
    HACER           reduce using rule 48 (varDim -> empty .)


state 121

    (67) escritura -> ESCRIBE pn_Secuencial3 LPAREN . escritura2 RPAREN SEMIC pn_Secuencial5
    (68) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (69) escritura2 -> . exp pn_Secuencial4 escritura3
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 161
    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    escritura2                     shift and go to state 160
    exp                            shift and go to state 162
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 122

    (59) lectura -> LEE pn_Secuencial3 LPAREN . varLectura RPAREN SEMIC pn_Secuencial5
    (56) varLectura -> . ID pn_Expresion1 varDim varLectura2

    ID              shift and go to state 164

    varLectura                     shift and go to state 163

state 123

    (19) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables . bloque pn_Funcion3
    (28) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 165

state 124

    (24) lista_parametros -> tipo ID pn_Funcion1 lista_parametros2 .

    RPAREN          reduce using rule 24 (lista_parametros -> tipo ID pn_Funcion1 lista_parametros2 .)


state 125

    (25) lista_parametros2 -> COMMA . lista_parametros
    (24) lista_parametros -> . tipo ID pn_Funcion1 lista_parametros2
    (14) tipo -> . INT_TYPE pn_SetCurrentType
    (15) tipo -> . CHAR_TYPE pn_SetCurrentType
    (16) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 11
    CHAR_TYPE       shift and go to state 12
    FLOAT_TYPE      shift and go to state 13

    lista_parametros               shift and go to state 166
    tipo                           shift and go to state 56

state 126

    (26) lista_parametros2 -> empty .

    RPAREN          reduce using rule 26 (lista_parametros2 -> empty .)


state 127

    (12) DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK pn_Columnas .

    COMMA           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK pn_Columnas .)
    SEMIC           reduce using rule 12 (DecVarDim2 -> LBRACK pn_VarDim2 INT_CTE pn_VarDim3 RBRACK pn_Columnas .)


state 128

    (39) asignacion -> variable ASSIGN pn_Secuencial1 expresion . SEMIC pn_Secuencial2

    SEMIC           shift and go to state 167


state 129

    (100) factor -> LPAREN pn_Expresion6 . exp RPAREN pn_Expresion7
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    exp                            shift and go to state 168
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 130

    (51) condicion -> SI LPAREN expresion RPAREN . pn_Condicion1 ENTONCES bloque else pn_Condicion2
    (135) pn_Condicion1 -> .

    ENTONCES        reduce using rule 135 (pn_Condicion1 -> .)

    pn_Condicion1                  shift and go to state 169

state 131

    (72) expresion -> mega_exp expresion1 .

    RPAREN          reduce using rule 72 (expresion -> mega_exp expresion1 .)
    SEMIC           reduce using rule 72 (expresion -> mega_exp expresion1 .)
    RBRACK          reduce using rule 72 (expresion -> mega_exp expresion1 .)
    COMMA           reduce using rule 72 (expresion -> mega_exp expresion1 .)


state 132

    (73) expresion1 -> ASSIGN . expresion
    (72) expresion -> . mega_exp expresion1
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    expresion                      shift and go to state 170
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 133

    (74) expresion1 -> empty .

    RPAREN          reduce using rule 74 (expresion1 -> empty .)
    SEMIC           reduce using rule 74 (expresion1 -> empty .)
    RBRACK          reduce using rule 74 (expresion1 -> empty .)
    COMMA           reduce using rule 74 (expresion1 -> empty .)


state 134

    (75) mega_exp -> super_exp meg .

    ASSIGN          reduce using rule 75 (mega_exp -> super_exp meg .)
    RPAREN          reduce using rule 75 (mega_exp -> super_exp meg .)
    SEMIC           reduce using rule 75 (mega_exp -> super_exp meg .)
    RBRACK          reduce using rule 75 (mega_exp -> super_exp meg .)
    COMMA           reduce using rule 75 (mega_exp -> super_exp meg .)


state 135

    (76) meg -> op_l . pn_Expresion10 mega_exp pn_Expresion11
    (127) pn_Expresion10 -> .

    LPAREN          reduce using rule 127 (pn_Expresion10 -> .)
    CHAR_CTE        reduce using rule 127 (pn_Expresion10 -> .)
    STRING_CTE      reduce using rule 127 (pn_Expresion10 -> .)
    MINUS_OP        reduce using rule 127 (pn_Expresion10 -> .)
    ID              reduce using rule 127 (pn_Expresion10 -> .)
    INT_CTE         reduce using rule 127 (pn_Expresion10 -> .)
    FLOAT_CTE       reduce using rule 127 (pn_Expresion10 -> .)

    pn_Expresion10                 shift and go to state 171

state 136

    (77) meg -> empty .

    ASSIGN          reduce using rule 77 (meg -> empty .)
    RPAREN          reduce using rule 77 (meg -> empty .)
    SEMIC           reduce using rule 77 (meg -> empty .)
    RBRACK          reduce using rule 77 (meg -> empty .)
    COMMA           reduce using rule 77 (meg -> empty .)


state 137

    (78) op_l -> AND_LOG .

    LPAREN          reduce using rule 78 (op_l -> AND_LOG .)
    CHAR_CTE        reduce using rule 78 (op_l -> AND_LOG .)
    STRING_CTE      reduce using rule 78 (op_l -> AND_LOG .)
    MINUS_OP        reduce using rule 78 (op_l -> AND_LOG .)
    ID              reduce using rule 78 (op_l -> AND_LOG .)
    INT_CTE         reduce using rule 78 (op_l -> AND_LOG .)
    FLOAT_CTE       reduce using rule 78 (op_l -> AND_LOG .)


state 138

    (79) op_l -> OR_LOG .

    LPAREN          reduce using rule 79 (op_l -> OR_LOG .)
    CHAR_CTE        reduce using rule 79 (op_l -> OR_LOG .)
    STRING_CTE      reduce using rule 79 (op_l -> OR_LOG .)
    MINUS_OP        reduce using rule 79 (op_l -> OR_LOG .)
    ID              reduce using rule 79 (op_l -> OR_LOG .)
    INT_CTE         reduce using rule 79 (op_l -> OR_LOG .)
    FLOAT_CTE       reduce using rule 79 (op_l -> OR_LOG .)


state 139

    (80) super_exp -> exp sp .

    AND_LOG         reduce using rule 80 (super_exp -> exp sp .)
    OR_LOG          reduce using rule 80 (super_exp -> exp sp .)
    ASSIGN          reduce using rule 80 (super_exp -> exp sp .)
    RPAREN          reduce using rule 80 (super_exp -> exp sp .)
    SEMIC           reduce using rule 80 (super_exp -> exp sp .)
    RBRACK          reduce using rule 80 (super_exp -> exp sp .)
    COMMA           reduce using rule 80 (super_exp -> exp sp .)


state 140

    (81) sp -> op_r . exp pn_Expresion9
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    exp                            shift and go to state 172
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 141

    (82) sp -> empty .

    AND_LOG         reduce using rule 82 (sp -> empty .)
    OR_LOG          reduce using rule 82 (sp -> empty .)
    ASSIGN          reduce using rule 82 (sp -> empty .)
    RPAREN          reduce using rule 82 (sp -> empty .)
    SEMIC           reduce using rule 82 (sp -> empty .)
    RBRACK          reduce using rule 82 (sp -> empty .)
    COMMA           reduce using rule 82 (sp -> empty .)


state 142

    (83) op_r -> LT_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 173

state 143

    (84) op_r -> GT_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 174

state 144

    (85) op_r -> LTE_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 175

state 145

    (86) op_r -> GTE_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 176

state 146

    (87) op_r -> NE_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 177

state 147

    (88) op_r -> EQUAL_LOG . pn_Expresion8
    (125) pn_Expresion8 -> .

    LPAREN          reduce using rule 125 (pn_Expresion8 -> .)
    CHAR_CTE        reduce using rule 125 (pn_Expresion8 -> .)
    STRING_CTE      reduce using rule 125 (pn_Expresion8 -> .)
    MINUS_OP        reduce using rule 125 (pn_Expresion8 -> .)
    ID              reduce using rule 125 (pn_Expresion8 -> .)
    INT_CTE         reduce using rule 125 (pn_Expresion8 -> .)
    FLOAT_CTE       reduce using rule 125 (pn_Expresion8 -> .)

    pn_Expresion8                  shift and go to state 178

state 148

    (89) exp -> termino pn_Expresion4 . exp1
    (90) exp1 -> . op_a exp
    (91) exp1 -> . empty
    (92) op_a -> . PLUS_OP pn_Expresion2
    (93) op_a -> . MINUS_OP pn_Expresion2
    (103) empty -> .

    PLUS_OP         shift and go to state 182
    MINUS_OP        shift and go to state 183
    LT_LOG          reduce using rule 103 (empty -> .)
    GT_LOG          reduce using rule 103 (empty -> .)
    LTE_LOG         reduce using rule 103 (empty -> .)
    GTE_LOG         reduce using rule 103 (empty -> .)
    NE_LOG          reduce using rule 103 (empty -> .)
    EQUAL_LOG       reduce using rule 103 (empty -> .)
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    ASSIGN          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    exp1                           shift and go to state 179
    op_a                           shift and go to state 180
    empty                          shift and go to state 181

state 149

    (94) termino -> factor pn_Expresion5 . term
    (95) term -> . op_a1 termino
    (96) term -> . empty
    (97) op_a1 -> . MULT_OP pn_Expresion3
    (98) op_a1 -> . DIV_OP pn_Expresion3
    (103) empty -> .

    MULT_OP         shift and go to state 187
    DIV_OP          shift and go to state 188
    PLUS_OP         reduce using rule 103 (empty -> .)
    MINUS_OP        reduce using rule 103 (empty -> .)
    LT_LOG          reduce using rule 103 (empty -> .)
    GT_LOG          reduce using rule 103 (empty -> .)
    LTE_LOG         reduce using rule 103 (empty -> .)
    GTE_LOG         reduce using rule 103 (empty -> .)
    NE_LOG          reduce using rule 103 (empty -> .)
    EQUAL_LOG       reduce using rule 103 (empty -> .)
    AND_LOG         reduce using rule 103 (empty -> .)
    OR_LOG          reduce using rule 103 (empty -> .)
    ASSIGN          reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)
    SEMIC           reduce using rule 103 (empty -> .)
    RBRACK          reduce using rule 103 (empty -> .)
    COMMA           reduce using rule 103 (empty -> .)
    HASTA           reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    term                           shift and go to state 184
    op_a1                          shift and go to state 185
    empty                          shift and go to state 186

state 150

    (40) ctes -> CHAR_CTE pn_CTEChar .

    MULT_OP         reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    DIV_OP          reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    PLUS_OP         reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    MINUS_OP        reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    LT_LOG          reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    GT_LOG          reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    LTE_LOG         reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    GTE_LOG         reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    NE_LOG          reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    EQUAL_LOG       reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    AND_LOG         reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    OR_LOG          reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    ASSIGN          reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    RPAREN          reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    SEMIC           reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    RBRACK          reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    COMMA           reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    HASTA           reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)
    HACER           reduce using rule 40 (ctes -> CHAR_CTE pn_CTEChar .)


state 151

    (41) ctes -> STRING_CTE pn_CTEString .

    MULT_OP         reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    DIV_OP          reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    PLUS_OP         reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    MINUS_OP        reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    LT_LOG          reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    GT_LOG          reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    LTE_LOG         reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    GTE_LOG         reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    NE_LOG          reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    EQUAL_LOG       reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    AND_LOG         reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    OR_LOG          reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    ASSIGN          reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    RPAREN          reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    SEMIC           reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    RBRACK          reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    COMMA           reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    HASTA           reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)
    HACER           reduce using rule 41 (ctes -> STRING_CTE pn_CTEString .)


state 152

    (42) ctes -> MINUS_OP pn_CTENeg . num
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    num                            shift and go to state 189

state 153

    (44) num -> INT_CTE pn_CTEInt .

    MULT_OP         reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    DIV_OP          reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    PLUS_OP         reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    MINUS_OP        reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    LT_LOG          reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    GT_LOG          reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    LTE_LOG         reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    GTE_LOG         reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    NE_LOG          reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    EQUAL_LOG       reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    AND_LOG         reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    OR_LOG          reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    ASSIGN          reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    RPAREN          reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    SEMIC           reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    RBRACK          reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    COMMA           reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    HASTA           reduce using rule 44 (num -> INT_CTE pn_CTEInt .)
    HACER           reduce using rule 44 (num -> INT_CTE pn_CTEInt .)


state 154

    (45) num -> FLOAT_CTE pn_CTEFloat .

    MULT_OP         reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    DIV_OP          reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    PLUS_OP         reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    MINUS_OP        reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    LT_LOG          reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    GT_LOG          reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    LTE_LOG         reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    GTE_LOG         reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    NE_LOG          reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    EQUAL_LOG       reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    AND_LOG         reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    OR_LOG          reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    ASSIGN          reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    RPAREN          reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    SEMIC           reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    RBRACK          reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    COMMA           reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    HASTA           reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)
    HACER           reduce using rule 45 (num -> FLOAT_CTE pn_CTEFloat .)


state 155

    (66) regresa -> REGRESA pn_Secuencial3 LPAREN exp . RPAREN pn_Regresa SEMIC

    RPAREN          shift and go to state 190


state 156

    (54) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion . RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3

    RPAREN          shift and go to state 191


state 157

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN . pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (129) pn_Secuencial1 -> .

    LPAREN          reduce using rule 129 (pn_Secuencial1 -> .)
    CHAR_CTE        reduce using rule 129 (pn_Secuencial1 -> .)
    STRING_CTE      reduce using rule 129 (pn_Secuencial1 -> .)
    MINUS_OP        reduce using rule 129 (pn_Secuencial1 -> .)
    ID              reduce using rule 129 (pn_Secuencial1 -> .)
    INT_CTE         reduce using rule 129 (pn_Secuencial1 -> .)
    FLOAT_CTE       reduce using rule 129 (pn_Secuencial1 -> .)

    pn_Secuencial1                 shift and go to state 192

state 158

    (64) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 . llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 . llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (60) llamada_param -> . expresion pn_FuncionLlamada2 llamada_param2
    (61) llamada_param -> . empty
    (72) expresion -> . mega_exp expresion1
    (103) empty -> .
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    RPAREN          reduce using rule 103 (empty -> .)
    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    llamada_param                  shift and go to state 193
    expresion                      shift and go to state 194
    empty                          shift and go to state 195
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 159

    (47) varDim -> LBRACK expresion . RBRACK

    RBRACK          shift and go to state 196


state 160

    (67) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 197


state 161

    (68) escritura2 -> STRING_CTE . pn_Secuencial4 escritura3
    (41) ctes -> STRING_CTE . pn_CTEString
    (132) pn_Secuencial4 -> .
    (117) pn_CTEString -> .

  ! reduce/reduce conflict for COMMA resolved using rule 117 (pn_CTEString -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 117 (pn_CTEString -> .)
    MULT_OP         reduce using rule 117 (pn_CTEString -> .)
    DIV_OP          reduce using rule 117 (pn_CTEString -> .)
    PLUS_OP         reduce using rule 117 (pn_CTEString -> .)
    MINUS_OP        reduce using rule 117 (pn_CTEString -> .)
    COMMA           reduce using rule 117 (pn_CTEString -> .)
    RPAREN          reduce using rule 117 (pn_CTEString -> .)

  ! COMMA           [ reduce using rule 132 (pn_Secuencial4 -> .) ]
  ! RPAREN          [ reduce using rule 132 (pn_Secuencial4 -> .) ]

    pn_Secuencial4                 shift and go to state 198
    pn_CTEString                   shift and go to state 151

state 162

    (69) escritura2 -> exp . pn_Secuencial4 escritura3
    (132) pn_Secuencial4 -> .

    COMMA           reduce using rule 132 (pn_Secuencial4 -> .)
    RPAREN          reduce using rule 132 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 199

state 163

    (59) lectura -> LEE pn_Secuencial3 LPAREN varLectura . RPAREN SEMIC pn_Secuencial5

    RPAREN          shift and go to state 200


state 164

    (56) varLectura -> ID . pn_Expresion1 varDim varLectura2
    (118) pn_Expresion1 -> .

    LBRACK          reduce using rule 118 (pn_Expresion1 -> .)
    COMMA           reduce using rule 118 (pn_Expresion1 -> .)
    RPAREN          reduce using rule 118 (pn_Expresion1 -> .)

    pn_Expresion1                  shift and go to state 201

state 165

    (19) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque . pn_Funcion3
    (109) pn_Funcion3 -> .

    FUNCION         reduce using rule 109 (pn_Funcion3 -> .)
    PRINCIPAL       reduce using rule 109 (pn_Funcion3 -> .)

    pn_Funcion3                    shift and go to state 202

state 166

    (25) lista_parametros2 -> COMMA lista_parametros .

    RPAREN          reduce using rule 25 (lista_parametros2 -> COMMA lista_parametros .)


state 167

    (39) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC . pn_Secuencial2
    (130) pn_Secuencial2 -> .

    SI              reduce using rule 130 (pn_Secuencial2 -> .)
    REGRESA         reduce using rule 130 (pn_Secuencial2 -> .)
    MIENTRAS        reduce using rule 130 (pn_Secuencial2 -> .)
    DESDE           reduce using rule 130 (pn_Secuencial2 -> .)
    ID              reduce using rule 130 (pn_Secuencial2 -> .)
    ESCRIBE         reduce using rule 130 (pn_Secuencial2 -> .)
    LEE             reduce using rule 130 (pn_Secuencial2 -> .)
    RCURLY          reduce using rule 130 (pn_Secuencial2 -> .)

    pn_Secuencial2                 shift and go to state 203

state 168

    (100) factor -> LPAREN pn_Expresion6 exp . RPAREN pn_Expresion7

    RPAREN          shift and go to state 204


state 169

    (51) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 . ENTONCES bloque else pn_Condicion2

    ENTONCES        shift and go to state 205


state 170

    (73) expresion1 -> ASSIGN expresion .

    RPAREN          reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    SEMIC           reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    RBRACK          reduce using rule 73 (expresion1 -> ASSIGN expresion .)
    COMMA           reduce using rule 73 (expresion1 -> ASSIGN expresion .)


state 171

    (76) meg -> op_l pn_Expresion10 . mega_exp pn_Expresion11
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    mega_exp                       shift and go to state 206
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 172

    (81) sp -> op_r exp . pn_Expresion9
    (126) pn_Expresion9 -> .

    AND_LOG         reduce using rule 126 (pn_Expresion9 -> .)
    OR_LOG          reduce using rule 126 (pn_Expresion9 -> .)
    ASSIGN          reduce using rule 126 (pn_Expresion9 -> .)
    RPAREN          reduce using rule 126 (pn_Expresion9 -> .)
    SEMIC           reduce using rule 126 (pn_Expresion9 -> .)
    RBRACK          reduce using rule 126 (pn_Expresion9 -> .)
    COMMA           reduce using rule 126 (pn_Expresion9 -> .)

    pn_Expresion9                  shift and go to state 207

state 173

    (83) op_r -> LT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    ID              reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 83 (op_r -> LT_LOG pn_Expresion8 .)


state 174

    (84) op_r -> GT_LOG pn_Expresion8 .

    LPAREN          reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    ID              reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 84 (op_r -> GT_LOG pn_Expresion8 .)


state 175

    (85) op_r -> LTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    ID              reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 85 (op_r -> LTE_LOG pn_Expresion8 .)


state 176

    (86) op_r -> GTE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    ID              reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 86 (op_r -> GTE_LOG pn_Expresion8 .)


state 177

    (87) op_r -> NE_LOG pn_Expresion8 .

    LPAREN          reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    ID              reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 87 (op_r -> NE_LOG pn_Expresion8 .)


state 178

    (88) op_r -> EQUAL_LOG pn_Expresion8 .

    LPAREN          reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    CHAR_CTE        reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    STRING_CTE      reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    MINUS_OP        reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    ID              reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    INT_CTE         reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)
    FLOAT_CTE       reduce using rule 88 (op_r -> EQUAL_LOG pn_Expresion8 .)


state 179

    (89) exp -> termino pn_Expresion4 exp1 .

    LT_LOG          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    GT_LOG          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    LTE_LOG         reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    GTE_LOG         reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    NE_LOG          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    EQUAL_LOG       reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    AND_LOG         reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    OR_LOG          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    ASSIGN          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    RPAREN          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    SEMIC           reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    RBRACK          reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    COMMA           reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    HASTA           reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)
    HACER           reduce using rule 89 (exp -> termino pn_Expresion4 exp1 .)


state 180

    (90) exp1 -> op_a . exp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    exp                            shift and go to state 208
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 181

    (91) exp1 -> empty .

    LT_LOG          reduce using rule 91 (exp1 -> empty .)
    GT_LOG          reduce using rule 91 (exp1 -> empty .)
    LTE_LOG         reduce using rule 91 (exp1 -> empty .)
    GTE_LOG         reduce using rule 91 (exp1 -> empty .)
    NE_LOG          reduce using rule 91 (exp1 -> empty .)
    EQUAL_LOG       reduce using rule 91 (exp1 -> empty .)
    AND_LOG         reduce using rule 91 (exp1 -> empty .)
    OR_LOG          reduce using rule 91 (exp1 -> empty .)
    ASSIGN          reduce using rule 91 (exp1 -> empty .)
    RPAREN          reduce using rule 91 (exp1 -> empty .)
    SEMIC           reduce using rule 91 (exp1 -> empty .)
    RBRACK          reduce using rule 91 (exp1 -> empty .)
    COMMA           reduce using rule 91 (exp1 -> empty .)
    HASTA           reduce using rule 91 (exp1 -> empty .)
    HACER           reduce using rule 91 (exp1 -> empty .)


state 182

    (92) op_a -> PLUS_OP . pn_Expresion2
    (119) pn_Expresion2 -> .

    LPAREN          reduce using rule 119 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 119 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 119 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 119 (pn_Expresion2 -> .)
    ID              reduce using rule 119 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 119 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 119 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 209

state 183

    (93) op_a -> MINUS_OP . pn_Expresion2
    (119) pn_Expresion2 -> .

    LPAREN          reduce using rule 119 (pn_Expresion2 -> .)
    CHAR_CTE        reduce using rule 119 (pn_Expresion2 -> .)
    STRING_CTE      reduce using rule 119 (pn_Expresion2 -> .)
    MINUS_OP        reduce using rule 119 (pn_Expresion2 -> .)
    ID              reduce using rule 119 (pn_Expresion2 -> .)
    INT_CTE         reduce using rule 119 (pn_Expresion2 -> .)
    FLOAT_CTE       reduce using rule 119 (pn_Expresion2 -> .)

    pn_Expresion2                  shift and go to state 210

state 184

    (94) termino -> factor pn_Expresion5 term .

    PLUS_OP         reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    MINUS_OP        reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    LT_LOG          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    GT_LOG          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    LTE_LOG         reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    GTE_LOG         reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    NE_LOG          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    EQUAL_LOG       reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    AND_LOG         reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    OR_LOG          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    ASSIGN          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    RPAREN          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    SEMIC           reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    RBRACK          reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    COMMA           reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    HASTA           reduce using rule 94 (termino -> factor pn_Expresion5 term .)
    HACER           reduce using rule 94 (termino -> factor pn_Expresion5 term .)


state 185

    (95) term -> op_a1 . termino
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    termino                        shift and go to state 211
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 186

    (96) term -> empty .

    PLUS_OP         reduce using rule 96 (term -> empty .)
    MINUS_OP        reduce using rule 96 (term -> empty .)
    LT_LOG          reduce using rule 96 (term -> empty .)
    GT_LOG          reduce using rule 96 (term -> empty .)
    LTE_LOG         reduce using rule 96 (term -> empty .)
    GTE_LOG         reduce using rule 96 (term -> empty .)
    NE_LOG          reduce using rule 96 (term -> empty .)
    EQUAL_LOG       reduce using rule 96 (term -> empty .)
    AND_LOG         reduce using rule 96 (term -> empty .)
    OR_LOG          reduce using rule 96 (term -> empty .)
    ASSIGN          reduce using rule 96 (term -> empty .)
    RPAREN          reduce using rule 96 (term -> empty .)
    SEMIC           reduce using rule 96 (term -> empty .)
    RBRACK          reduce using rule 96 (term -> empty .)
    COMMA           reduce using rule 96 (term -> empty .)
    HASTA           reduce using rule 96 (term -> empty .)
    HACER           reduce using rule 96 (term -> empty .)


state 187

    (97) op_a1 -> MULT_OP . pn_Expresion3
    (120) pn_Expresion3 -> .

    LPAREN          reduce using rule 120 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 120 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 120 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 120 (pn_Expresion3 -> .)
    ID              reduce using rule 120 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 120 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 120 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 212

state 188

    (98) op_a1 -> DIV_OP . pn_Expresion3
    (120) pn_Expresion3 -> .

    LPAREN          reduce using rule 120 (pn_Expresion3 -> .)
    CHAR_CTE        reduce using rule 120 (pn_Expresion3 -> .)
    STRING_CTE      reduce using rule 120 (pn_Expresion3 -> .)
    MINUS_OP        reduce using rule 120 (pn_Expresion3 -> .)
    ID              reduce using rule 120 (pn_Expresion3 -> .)
    INT_CTE         reduce using rule 120 (pn_Expresion3 -> .)
    FLOAT_CTE       reduce using rule 120 (pn_Expresion3 -> .)

    pn_Expresion3                  shift and go to state 213

state 189

    (42) ctes -> MINUS_OP pn_CTENeg num .

    MULT_OP         reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    DIV_OP          reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    PLUS_OP         reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    MINUS_OP        reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    LT_LOG          reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    GT_LOG          reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    LTE_LOG         reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    GTE_LOG         reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    NE_LOG          reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    EQUAL_LOG       reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    AND_LOG         reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    OR_LOG          reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    ASSIGN          reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    RPAREN          reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    SEMIC           reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    RBRACK          reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    COMMA           reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    HASTA           reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)
    HACER           reduce using rule 42 (ctes -> MINUS_OP pn_CTENeg num .)


state 190

    (66) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN . pn_Regresa SEMIC
    (134) pn_Regresa -> .

    SEMIC           reduce using rule 134 (pn_Regresa -> .)

    pn_Regresa                     shift and go to state 214

state 191

    (54) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN . pn_loop_condicional2 HACER bloque pn_loop_condicional3
    (139) pn_loop_condicional2 -> .

    HACER           reduce using rule 139 (pn_loop_condicional2 -> .)

    pn_loop_condicional2           shift and go to state 215

state 192

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 . exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    variable                       shift and go to state 104
    exp                            shift and go to state 216
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 193

    (64) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param . RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param . RPAREN pn_Expresion7 pn_FuncionLlamada3

    RPAREN          shift and go to state 217


state 194

    (60) llamada_param -> expresion . pn_FuncionLlamada2 llamada_param2
    (111) pn_FuncionLlamada2 -> .

    COMMA           reduce using rule 111 (pn_FuncionLlamada2 -> .)
    RPAREN          reduce using rule 111 (pn_FuncionLlamada2 -> .)

    pn_FuncionLlamada2             shift and go to state 218

state 195

    (61) llamada_param -> empty .

    RPAREN          reduce using rule 61 (llamada_param -> empty .)


state 196

    (47) varDim -> LBRACK expresion RBRACK .

    ASSIGN          reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    MULT_OP         reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    DIV_OP          reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    PLUS_OP         reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    MINUS_OP        reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    LT_LOG          reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    GT_LOG          reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    LTE_LOG         reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    GTE_LOG         reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    NE_LOG          reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    EQUAL_LOG       reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    AND_LOG         reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    OR_LOG          reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    RPAREN          reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    SEMIC           reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    RBRACK          reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    COMMA           reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    HASTA           reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)
    HACER           reduce using rule 47 (varDim -> LBRACK expresion RBRACK .)


state 197

    (67) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 219


state 198

    (68) escritura2 -> STRING_CTE pn_Secuencial4 . escritura3
    (70) escritura3 -> . COMMA escritura2
    (71) escritura3 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 221
    RPAREN          reduce using rule 103 (empty -> .)

    escritura3                     shift and go to state 220
    empty                          shift and go to state 222

state 199

    (69) escritura2 -> exp pn_Secuencial4 . escritura3
    (70) escritura3 -> . COMMA escritura2
    (71) escritura3 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 221
    RPAREN          reduce using rule 103 (empty -> .)

    escritura3                     shift and go to state 223
    empty                          shift and go to state 222

state 200

    (59) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN . SEMIC pn_Secuencial5

    SEMIC           shift and go to state 224


state 201

    (56) varLectura -> ID pn_Expresion1 . varDim varLectura2
    (47) varDim -> . LBRACK expresion RBRACK
    (48) varDim -> . empty
    (103) empty -> .

    LBRACK          shift and go to state 119
    COMMA           reduce using rule 103 (empty -> .)
    RPAREN          reduce using rule 103 (empty -> .)

    varDim                         shift and go to state 225
    empty                          shift and go to state 120

state 202

    (19) dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .

    FUNCION         reduce using rule 19 (dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)
    PRINCIPAL       reduce using rule 19 (dec_funciones2 -> FUNCION tipo_func ID pn_AddFunc LPAREN dec_funcion_param RPAREN pn_Funcion2 dec_variables bloque pn_Funcion3 .)


state 203

    (39) asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .

    SI              reduce using rule 39 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    REGRESA         reduce using rule 39 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    MIENTRAS        reduce using rule 39 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    DESDE           reduce using rule 39 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ID              reduce using rule 39 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    ESCRIBE         reduce using rule 39 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    LEE             reduce using rule 39 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)
    RCURLY          reduce using rule 39 (asignacion -> variable ASSIGN pn_Secuencial1 expresion SEMIC pn_Secuencial2 .)


state 204

    (100) factor -> LPAREN pn_Expresion6 exp RPAREN . pn_Expresion7
    (124) pn_Expresion7 -> .

    MULT_OP         reduce using rule 124 (pn_Expresion7 -> .)
    DIV_OP          reduce using rule 124 (pn_Expresion7 -> .)
    PLUS_OP         reduce using rule 124 (pn_Expresion7 -> .)
    MINUS_OP        reduce using rule 124 (pn_Expresion7 -> .)
    LT_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    GT_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    LTE_LOG         reduce using rule 124 (pn_Expresion7 -> .)
    GTE_LOG         reduce using rule 124 (pn_Expresion7 -> .)
    NE_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    EQUAL_LOG       reduce using rule 124 (pn_Expresion7 -> .)
    AND_LOG         reduce using rule 124 (pn_Expresion7 -> .)
    OR_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    ASSIGN          reduce using rule 124 (pn_Expresion7 -> .)
    RPAREN          reduce using rule 124 (pn_Expresion7 -> .)
    SEMIC           reduce using rule 124 (pn_Expresion7 -> .)
    RBRACK          reduce using rule 124 (pn_Expresion7 -> .)
    COMMA           reduce using rule 124 (pn_Expresion7 -> .)
    HASTA           reduce using rule 124 (pn_Expresion7 -> .)
    HACER           reduce using rule 124 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 226

state 205

    (51) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES . bloque else pn_Condicion2
    (28) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 227

state 206

    (76) meg -> op_l pn_Expresion10 mega_exp . pn_Expresion11
    (128) pn_Expresion11 -> .

    ASSIGN          reduce using rule 128 (pn_Expresion11 -> .)
    RPAREN          reduce using rule 128 (pn_Expresion11 -> .)
    SEMIC           reduce using rule 128 (pn_Expresion11 -> .)
    RBRACK          reduce using rule 128 (pn_Expresion11 -> .)
    COMMA           reduce using rule 128 (pn_Expresion11 -> .)

    pn_Expresion11                 shift and go to state 228

state 207

    (81) sp -> op_r exp pn_Expresion9 .

    AND_LOG         reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    OR_LOG          reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    ASSIGN          reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    RPAREN          reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    SEMIC           reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    RBRACK          reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)
    COMMA           reduce using rule 81 (sp -> op_r exp pn_Expresion9 .)


state 208

    (90) exp1 -> op_a exp .

    LT_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    GT_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    LTE_LOG         reduce using rule 90 (exp1 -> op_a exp .)
    GTE_LOG         reduce using rule 90 (exp1 -> op_a exp .)
    NE_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    EQUAL_LOG       reduce using rule 90 (exp1 -> op_a exp .)
    AND_LOG         reduce using rule 90 (exp1 -> op_a exp .)
    OR_LOG          reduce using rule 90 (exp1 -> op_a exp .)
    ASSIGN          reduce using rule 90 (exp1 -> op_a exp .)
    RPAREN          reduce using rule 90 (exp1 -> op_a exp .)
    SEMIC           reduce using rule 90 (exp1 -> op_a exp .)
    RBRACK          reduce using rule 90 (exp1 -> op_a exp .)
    COMMA           reduce using rule 90 (exp1 -> op_a exp .)
    HASTA           reduce using rule 90 (exp1 -> op_a exp .)
    HACER           reduce using rule 90 (exp1 -> op_a exp .)


state 209

    (92) op_a -> PLUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    ID              reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 92 (op_a -> PLUS_OP pn_Expresion2 .)


state 210

    (93) op_a -> MINUS_OP pn_Expresion2 .

    LPAREN          reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    CHAR_CTE        reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    STRING_CTE      reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    MINUS_OP        reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    ID              reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    INT_CTE         reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)
    FLOAT_CTE       reduce using rule 93 (op_a -> MINUS_OP pn_Expresion2 .)


state 211

    (95) term -> op_a1 termino .

    PLUS_OP         reduce using rule 95 (term -> op_a1 termino .)
    MINUS_OP        reduce using rule 95 (term -> op_a1 termino .)
    LT_LOG          reduce using rule 95 (term -> op_a1 termino .)
    GT_LOG          reduce using rule 95 (term -> op_a1 termino .)
    LTE_LOG         reduce using rule 95 (term -> op_a1 termino .)
    GTE_LOG         reduce using rule 95 (term -> op_a1 termino .)
    NE_LOG          reduce using rule 95 (term -> op_a1 termino .)
    EQUAL_LOG       reduce using rule 95 (term -> op_a1 termino .)
    AND_LOG         reduce using rule 95 (term -> op_a1 termino .)
    OR_LOG          reduce using rule 95 (term -> op_a1 termino .)
    ASSIGN          reduce using rule 95 (term -> op_a1 termino .)
    RPAREN          reduce using rule 95 (term -> op_a1 termino .)
    SEMIC           reduce using rule 95 (term -> op_a1 termino .)
    RBRACK          reduce using rule 95 (term -> op_a1 termino .)
    COMMA           reduce using rule 95 (term -> op_a1 termino .)
    HASTA           reduce using rule 95 (term -> op_a1 termino .)
    HACER           reduce using rule 95 (term -> op_a1 termino .)


state 212

    (97) op_a1 -> MULT_OP pn_Expresion3 .

    LPAREN          reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    ID              reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 97 (op_a1 -> MULT_OP pn_Expresion3 .)


state 213

    (98) op_a1 -> DIV_OP pn_Expresion3 .

    LPAREN          reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    CHAR_CTE        reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    STRING_CTE      reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    MINUS_OP        reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    ID              reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    INT_CTE         reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)
    FLOAT_CTE       reduce using rule 98 (op_a1 -> DIV_OP pn_Expresion3 .)


state 214

    (66) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa . SEMIC

    SEMIC           shift and go to state 229


state 215

    (54) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 . HACER bloque pn_loop_condicional3

    HACER           shift and go to state 230


state 216

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp . pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (142) pn_loop_no_condicional2 -> .

    HASTA           reduce using rule 142 (pn_loop_no_condicional2 -> .)

    pn_loop_no_condicional2        shift and go to state 231

state 217

    (64) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN . pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN . pn_Expresion7 pn_FuncionLlamada3
    (124) pn_Expresion7 -> .

    SEMIC           reduce using rule 124 (pn_Expresion7 -> .)
    SI              reduce using rule 124 (pn_Expresion7 -> .)
    REGRESA         reduce using rule 124 (pn_Expresion7 -> .)
    MIENTRAS        reduce using rule 124 (pn_Expresion7 -> .)
    DESDE           reduce using rule 124 (pn_Expresion7 -> .)
    ID              reduce using rule 124 (pn_Expresion7 -> .)
    ESCRIBE         reduce using rule 124 (pn_Expresion7 -> .)
    LEE             reduce using rule 124 (pn_Expresion7 -> .)
    RCURLY          reduce using rule 124 (pn_Expresion7 -> .)
    MULT_OP         reduce using rule 124 (pn_Expresion7 -> .)
    DIV_OP          reduce using rule 124 (pn_Expresion7 -> .)
    PLUS_OP         reduce using rule 124 (pn_Expresion7 -> .)
    MINUS_OP        reduce using rule 124 (pn_Expresion7 -> .)
    LT_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    GT_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    LTE_LOG         reduce using rule 124 (pn_Expresion7 -> .)
    GTE_LOG         reduce using rule 124 (pn_Expresion7 -> .)
    NE_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    EQUAL_LOG       reduce using rule 124 (pn_Expresion7 -> .)
    AND_LOG         reduce using rule 124 (pn_Expresion7 -> .)
    OR_LOG          reduce using rule 124 (pn_Expresion7 -> .)
    ASSIGN          reduce using rule 124 (pn_Expresion7 -> .)
    RPAREN          reduce using rule 124 (pn_Expresion7 -> .)
    RBRACK          reduce using rule 124 (pn_Expresion7 -> .)
    COMMA           reduce using rule 124 (pn_Expresion7 -> .)
    HASTA           reduce using rule 124 (pn_Expresion7 -> .)
    HACER           reduce using rule 124 (pn_Expresion7 -> .)

    pn_Expresion7                  shift and go to state 232

state 218

    (60) llamada_param -> expresion pn_FuncionLlamada2 . llamada_param2
    (62) llamada_param2 -> . COMMA llamada_param
    (63) llamada_param2 -> . empty
    (103) empty -> .

    COMMA           shift and go to state 234
    RPAREN          reduce using rule 103 (empty -> .)

    llamada_param2                 shift and go to state 233
    empty                          shift and go to state 235

state 219

    (67) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC . pn_Secuencial5
    (133) pn_Secuencial5 -> .

    SI              reduce using rule 133 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 133 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 133 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 133 (pn_Secuencial5 -> .)
    ID              reduce using rule 133 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 133 (pn_Secuencial5 -> .)
    LEE             reduce using rule 133 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 133 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 236

state 220

    (68) escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 68 (escritura2 -> STRING_CTE pn_Secuencial4 escritura3 .)


state 221

    (70) escritura3 -> COMMA . escritura2
    (68) escritura2 -> . STRING_CTE pn_Secuencial4 escritura3
    (69) escritura2 -> . exp pn_Secuencial4 escritura3
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    STRING_CTE      shift and go to state 161
    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    escritura2                     shift and go to state 237
    exp                            shift and go to state 162
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 222

    (71) escritura3 -> empty .

    RPAREN          reduce using rule 71 (escritura3 -> empty .)


state 223

    (69) escritura2 -> exp pn_Secuencial4 escritura3 .

    RPAREN          reduce using rule 69 (escritura2 -> exp pn_Secuencial4 escritura3 .)


state 224

    (59) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC . pn_Secuencial5
    (133) pn_Secuencial5 -> .

    SI              reduce using rule 133 (pn_Secuencial5 -> .)
    REGRESA         reduce using rule 133 (pn_Secuencial5 -> .)
    MIENTRAS        reduce using rule 133 (pn_Secuencial5 -> .)
    DESDE           reduce using rule 133 (pn_Secuencial5 -> .)
    ID              reduce using rule 133 (pn_Secuencial5 -> .)
    ESCRIBE         reduce using rule 133 (pn_Secuencial5 -> .)
    LEE             reduce using rule 133 (pn_Secuencial5 -> .)
    RCURLY          reduce using rule 133 (pn_Secuencial5 -> .)

    pn_Secuencial5                 shift and go to state 238

state 225

    (56) varLectura -> ID pn_Expresion1 varDim . varLectura2
    (57) varLectura2 -> . COMMA pn_Secuencial4 varLectura
    (58) varLectura2 -> . empty pn_Secuencial4
    (103) empty -> .

    COMMA           shift and go to state 240
    RPAREN          reduce using rule 103 (empty -> .)

    varLectura2                    shift and go to state 239
    empty                          shift and go to state 241

state 226

    (100) factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .

    MULT_OP         reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    DIV_OP          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    PLUS_OP         reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    MINUS_OP        reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LT_LOG          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GT_LOG          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    LTE_LOG         reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    GTE_LOG         reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    NE_LOG          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    EQUAL_LOG       reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    AND_LOG         reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    OR_LOG          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    ASSIGN          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RPAREN          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    SEMIC           reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    RBRACK          reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    COMMA           reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HASTA           reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)
    HACER           reduce using rule 100 (factor -> LPAREN pn_Expresion6 exp RPAREN pn_Expresion7 .)


state 227

    (51) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque . else pn_Condicion2
    (52) else -> . SINO pn_Condicion3 bloque
    (53) else -> . empty
    (103) empty -> .

    SINO            shift and go to state 243
    SI              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ESCRIBE         reduce using rule 103 (empty -> .)
    LEE             reduce using rule 103 (empty -> .)
    RCURLY          reduce using rule 103 (empty -> .)

    else                           shift and go to state 242
    empty                          shift and go to state 244

state 228

    (76) meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .

    ASSIGN          reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    RPAREN          reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    SEMIC           reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    RBRACK          reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)
    COMMA           reduce using rule 76 (meg -> op_l pn_Expresion10 mega_exp pn_Expresion11 .)


state 229

    (66) regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .

    SI              reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    REGRESA         reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    MIENTRAS        reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    DESDE           reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ID              reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    ESCRIBE         reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    LEE             reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)
    RCURLY          reduce using rule 66 (regresa -> REGRESA pn_Secuencial3 LPAREN exp RPAREN pn_Regresa SEMIC .)


state 230

    (54) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER . bloque pn_loop_condicional3
    (28) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 245

state 231

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 . HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5

    HASTA           shift and go to state 246


state 232

    (64) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 . pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 . pn_FuncionLlamada3
    (112) pn_FuncionLlamada3 -> .

    SEMIC           reduce using rule 112 (pn_FuncionLlamada3 -> .)
    SI              reduce using rule 112 (pn_FuncionLlamada3 -> .)
    REGRESA         reduce using rule 112 (pn_FuncionLlamada3 -> .)
    MIENTRAS        reduce using rule 112 (pn_FuncionLlamada3 -> .)
    DESDE           reduce using rule 112 (pn_FuncionLlamada3 -> .)
    ID              reduce using rule 112 (pn_FuncionLlamada3 -> .)
    ESCRIBE         reduce using rule 112 (pn_FuncionLlamada3 -> .)
    LEE             reduce using rule 112 (pn_FuncionLlamada3 -> .)
    RCURLY          reduce using rule 112 (pn_FuncionLlamada3 -> .)
    MULT_OP         reduce using rule 112 (pn_FuncionLlamada3 -> .)
    DIV_OP          reduce using rule 112 (pn_FuncionLlamada3 -> .)
    PLUS_OP         reduce using rule 112 (pn_FuncionLlamada3 -> .)
    MINUS_OP        reduce using rule 112 (pn_FuncionLlamada3 -> .)
    LT_LOG          reduce using rule 112 (pn_FuncionLlamada3 -> .)
    GT_LOG          reduce using rule 112 (pn_FuncionLlamada3 -> .)
    LTE_LOG         reduce using rule 112 (pn_FuncionLlamada3 -> .)
    GTE_LOG         reduce using rule 112 (pn_FuncionLlamada3 -> .)
    NE_LOG          reduce using rule 112 (pn_FuncionLlamada3 -> .)
    EQUAL_LOG       reduce using rule 112 (pn_FuncionLlamada3 -> .)
    AND_LOG         reduce using rule 112 (pn_FuncionLlamada3 -> .)
    OR_LOG          reduce using rule 112 (pn_FuncionLlamada3 -> .)
    ASSIGN          reduce using rule 112 (pn_FuncionLlamada3 -> .)
    RPAREN          reduce using rule 112 (pn_FuncionLlamada3 -> .)
    RBRACK          reduce using rule 112 (pn_FuncionLlamada3 -> .)
    COMMA           reduce using rule 112 (pn_FuncionLlamada3 -> .)
    HASTA           reduce using rule 112 (pn_FuncionLlamada3 -> .)
    HACER           reduce using rule 112 (pn_FuncionLlamada3 -> .)

    pn_FuncionLlamada3             shift and go to state 247

state 233

    (60) llamada_param -> expresion pn_FuncionLlamada2 llamada_param2 .

    RPAREN          reduce using rule 60 (llamada_param -> expresion pn_FuncionLlamada2 llamada_param2 .)


state 234

    (62) llamada_param2 -> COMMA . llamada_param
    (60) llamada_param -> . expresion pn_FuncionLlamada2 llamada_param2
    (61) llamada_param -> . empty
    (72) expresion -> . mega_exp expresion1
    (103) empty -> .
    (75) mega_exp -> . super_exp meg
    (80) super_exp -> . exp sp
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    RPAREN          reduce using rule 103 (empty -> .)
    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    llamada_param                  shift and go to state 248
    expresion                      shift and go to state 194
    empty                          shift and go to state 195
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 104
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 235

    (63) llamada_param2 -> empty .

    RPAREN          reduce using rule 63 (llamada_param2 -> empty .)


state 236

    (67) escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 67 (escritura -> ESCRIBE pn_Secuencial3 LPAREN escritura2 RPAREN SEMIC pn_Secuencial5 .)


state 237

    (70) escritura3 -> COMMA escritura2 .

    RPAREN          reduce using rule 70 (escritura3 -> COMMA escritura2 .)


state 238

    (59) lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .

    SI              reduce using rule 59 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    REGRESA         reduce using rule 59 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    MIENTRAS        reduce using rule 59 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    DESDE           reduce using rule 59 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ID              reduce using rule 59 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    ESCRIBE         reduce using rule 59 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    LEE             reduce using rule 59 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)
    RCURLY          reduce using rule 59 (lectura -> LEE pn_Secuencial3 LPAREN varLectura RPAREN SEMIC pn_Secuencial5 .)


state 239

    (56) varLectura -> ID pn_Expresion1 varDim varLectura2 .

    RPAREN          reduce using rule 56 (varLectura -> ID pn_Expresion1 varDim varLectura2 .)


state 240

    (57) varLectura2 -> COMMA . pn_Secuencial4 varLectura
    (132) pn_Secuencial4 -> .

    ID              reduce using rule 132 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 249

state 241

    (58) varLectura2 -> empty . pn_Secuencial4
    (132) pn_Secuencial4 -> .

    RPAREN          reduce using rule 132 (pn_Secuencial4 -> .)

    pn_Secuencial4                 shift and go to state 250

state 242

    (51) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else . pn_Condicion2
    (136) pn_Condicion2 -> .

    SI              reduce using rule 136 (pn_Condicion2 -> .)
    REGRESA         reduce using rule 136 (pn_Condicion2 -> .)
    MIENTRAS        reduce using rule 136 (pn_Condicion2 -> .)
    DESDE           reduce using rule 136 (pn_Condicion2 -> .)
    ID              reduce using rule 136 (pn_Condicion2 -> .)
    ESCRIBE         reduce using rule 136 (pn_Condicion2 -> .)
    LEE             reduce using rule 136 (pn_Condicion2 -> .)
    RCURLY          reduce using rule 136 (pn_Condicion2 -> .)

    pn_Condicion2                  shift and go to state 251

state 243

    (52) else -> SINO . pn_Condicion3 bloque
    (137) pn_Condicion3 -> .

    LCURLY          reduce using rule 137 (pn_Condicion3 -> .)

    pn_Condicion3                  shift and go to state 252

state 244

    (53) else -> empty .

    SI              reduce using rule 53 (else -> empty .)
    REGRESA         reduce using rule 53 (else -> empty .)
    MIENTRAS        reduce using rule 53 (else -> empty .)
    DESDE           reduce using rule 53 (else -> empty .)
    ID              reduce using rule 53 (else -> empty .)
    ESCRIBE         reduce using rule 53 (else -> empty .)
    LEE             reduce using rule 53 (else -> empty .)
    RCURLY          reduce using rule 53 (else -> empty .)


state 245

    (54) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque . pn_loop_condicional3
    (140) pn_loop_condicional3 -> .

    SI              reduce using rule 140 (pn_loop_condicional3 -> .)
    REGRESA         reduce using rule 140 (pn_loop_condicional3 -> .)
    MIENTRAS        reduce using rule 140 (pn_loop_condicional3 -> .)
    DESDE           reduce using rule 140 (pn_loop_condicional3 -> .)
    ID              reduce using rule 140 (pn_loop_condicional3 -> .)
    ESCRIBE         reduce using rule 140 (pn_loop_condicional3 -> .)
    LEE             reduce using rule 140 (pn_loop_condicional3 -> .)
    RCURLY          reduce using rule 140 (pn_loop_condicional3 -> .)

    pn_loop_condicional3           shift and go to state 253

state 246

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA . pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (143) pn_loop_no_condicional3 -> .

    LPAREN          reduce using rule 143 (pn_loop_no_condicional3 -> .)
    CHAR_CTE        reduce using rule 143 (pn_loop_no_condicional3 -> .)
    STRING_CTE      reduce using rule 143 (pn_loop_no_condicional3 -> .)
    MINUS_OP        reduce using rule 143 (pn_loop_no_condicional3 -> .)
    ID              reduce using rule 143 (pn_loop_no_condicional3 -> .)
    INT_CTE         reduce using rule 143 (pn_loop_no_condicional3 -> .)
    FLOAT_CTE       reduce using rule 143 (pn_loop_no_condicional3 -> .)

    pn_loop_no_condicional3        shift and go to state 254

state 247

    (64) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 . SEMIC
    (65) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .

  ! shift/reduce conflict for SEMIC resolved as shift
    SEMIC           shift and go to state 255
    SI              reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    REGRESA         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MIENTRAS        reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    DESDE           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ID              reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ESCRIBE         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LEE             reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RCURLY          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MULT_OP         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    DIV_OP          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    PLUS_OP         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    MINUS_OP        reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LT_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    GT_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    LTE_LOG         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    GTE_LOG         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    NE_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    EQUAL_LOG       reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    AND_LOG         reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    OR_LOG          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    ASSIGN          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RPAREN          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    RBRACK          reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    COMMA           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    HASTA           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)
    HACER           reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .)

  ! SEMIC           [ reduce using rule 65 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 .) ]


state 248

    (62) llamada_param2 -> COMMA llamada_param .

    RPAREN          reduce using rule 62 (llamada_param2 -> COMMA llamada_param .)


state 249

    (57) varLectura2 -> COMMA pn_Secuencial4 . varLectura
    (56) varLectura -> . ID pn_Expresion1 varDim varLectura2

    ID              shift and go to state 164

    varLectura                     shift and go to state 256

state 250

    (58) varLectura2 -> empty pn_Secuencial4 .

    RPAREN          reduce using rule 58 (varLectura2 -> empty pn_Secuencial4 .)


state 251

    (51) condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .

    SI              reduce using rule 51 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    REGRESA         reduce using rule 51 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    MIENTRAS        reduce using rule 51 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    DESDE           reduce using rule 51 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ID              reduce using rule 51 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    ESCRIBE         reduce using rule 51 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    LEE             reduce using rule 51 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)
    RCURLY          reduce using rule 51 (condicion -> SI LPAREN expresion RPAREN pn_Condicion1 ENTONCES bloque else pn_Condicion2 .)


state 252

    (52) else -> SINO pn_Condicion3 . bloque
    (28) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 257

state 253

    (54) loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .

    SI              reduce using rule 54 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    REGRESA         reduce using rule 54 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    MIENTRAS        reduce using rule 54 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    DESDE           reduce using rule 54 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ID              reduce using rule 54 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    ESCRIBE         reduce using rule 54 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    LEE             reduce using rule 54 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)
    RCURLY          reduce using rule 54 (loop_condicional -> MIENTRAS pn_loop_condicional1 LPAREN expresion RPAREN pn_loop_condicional2 HACER bloque pn_loop_condicional3 .)


state 254

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 . exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (89) exp -> . termino pn_Expresion4 exp1
    (94) termino -> . factor pn_Expresion5 term
    (99) factor -> . ctes
    (100) factor -> . LPAREN pn_Expresion6 exp RPAREN pn_Expresion7
    (101) factor -> . variable
    (102) factor -> . llamada_funcion
    (40) ctes -> . CHAR_CTE pn_CTEChar
    (41) ctes -> . STRING_CTE pn_CTEString
    (42) ctes -> . MINUS_OP pn_CTENeg num
    (43) ctes -> . num
    (46) variable -> . ID pn_Expresion1 varDim
    (64) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC
    (65) llamada_funcion -> . ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3
    (44) num -> . INT_CTE pn_CTEInt
    (45) num -> . FLOAT_CTE pn_CTEFloat

    LPAREN          shift and go to state 96
    CHAR_CTE        shift and go to state 106
    STRING_CTE      shift and go to state 107
    MINUS_OP        shift and go to state 108
    ID              shift and go to state 110
    INT_CTE         shift and go to state 111
    FLOAT_CTE       shift and go to state 112

    variable                       shift and go to state 104
    exp                            shift and go to state 258
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    llamada_funcion                shift and go to state 105
    num                            shift and go to state 109

state 255

    (64) llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .

    SI              reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    REGRESA         reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    MIENTRAS        reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    DESDE           reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    ID              reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    ESCRIBE         reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    LEE             reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    RCURLY          reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    MULT_OP         reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    DIV_OP          reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    PLUS_OP         reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    MINUS_OP        reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    LT_LOG          reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    GT_LOG          reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    LTE_LOG         reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    GTE_LOG         reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    NE_LOG          reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    EQUAL_LOG       reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    AND_LOG         reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    OR_LOG          reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    ASSIGN          reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    RPAREN          reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    SEMIC           reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    RBRACK          reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    COMMA           reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    HASTA           reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)
    HACER           reduce using rule 64 (llamada_funcion -> ID pn_FuncionLlamada1 LPAREN pn_Expresion6 llamada_param RPAREN pn_Expresion7 pn_FuncionLlamada3 SEMIC .)


state 256

    (57) varLectura2 -> COMMA pn_Secuencial4 varLectura .

    RPAREN          reduce using rule 57 (varLectura2 -> COMMA pn_Secuencial4 varLectura .)


state 257

    (52) else -> SINO pn_Condicion3 bloque .

    SI              reduce using rule 52 (else -> SINO pn_Condicion3 bloque .)
    REGRESA         reduce using rule 52 (else -> SINO pn_Condicion3 bloque .)
    MIENTRAS        reduce using rule 52 (else -> SINO pn_Condicion3 bloque .)
    DESDE           reduce using rule 52 (else -> SINO pn_Condicion3 bloque .)
    ID              reduce using rule 52 (else -> SINO pn_Condicion3 bloque .)
    ESCRIBE         reduce using rule 52 (else -> SINO pn_Condicion3 bloque .)
    LEE             reduce using rule 52 (else -> SINO pn_Condicion3 bloque .)
    RCURLY          reduce using rule 52 (else -> SINO pn_Condicion3 bloque .)


state 258

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp . pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5
    (144) pn_loop_no_condicional4 -> .

    HACER           reduce using rule 144 (pn_loop_no_condicional4 -> .)

    pn_loop_no_condicional4        shift and go to state 259

state 259

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 . HACER bloque pn_loop_no_condicional5

    HACER           shift and go to state 260


state 260

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER . bloque pn_loop_no_condicional5
    (28) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 52

    bloque                         shift and go to state 261

state 261

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque . pn_loop_no_condicional5
    (145) pn_loop_no_condicional5 -> .

    SI              reduce using rule 145 (pn_loop_no_condicional5 -> .)
    REGRESA         reduce using rule 145 (pn_loop_no_condicional5 -> .)
    MIENTRAS        reduce using rule 145 (pn_loop_no_condicional5 -> .)
    DESDE           reduce using rule 145 (pn_loop_no_condicional5 -> .)
    ID              reduce using rule 145 (pn_loop_no_condicional5 -> .)
    ESCRIBE         reduce using rule 145 (pn_loop_no_condicional5 -> .)
    LEE             reduce using rule 145 (pn_loop_no_condicional5 -> .)
    RCURLY          reduce using rule 145 (pn_loop_no_condicional5 -> .)

    pn_loop_no_condicional5        shift and go to state 262

state 262

    (55) loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .

    SI              reduce using rule 55 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    REGRESA         reduce using rule 55 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    MIENTRAS        reduce using rule 55 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    DESDE           reduce using rule 55 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ID              reduce using rule 55 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    ESCRIBE         reduce using rule 55 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    LEE             reduce using rule 55 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)
    RCURLY          reduce using rule 55 (loop_no_condicional -> DESDE pn_loop_no_condicional1 variable ASSIGN pn_Secuencial1 exp pn_loop_no_condicional2 HASTA pn_loop_no_condicional3 exp pn_loop_no_condicional4 HACER bloque pn_loop_no_condicional5 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMIC in state 247 resolved as shift
WARNING: reduce/reduce conflict in state 161 resolved using rule (pn_CTEString -> <empty>)
WARNING: rejected rule (pn_Secuencial4 -> <empty>) in state 161
