Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    NEW_LINE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMIC dec_variables dec_funciones principal
Rule 2     dec_variables -> VARIABLES dec_variables2
Rule 3     dec_variables -> empty
Rule 4     dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3
Rule 5     dec_variables3 -> dec_variables2
Rule 6     dec_variables3 -> empty
Rule 7     lista_ids -> ID pn_AddVariable DecVarDim lista_ids2
Rule 8     lista_ids2 -> COMMA lista_ids
Rule 9     lista_ids2 -> empty
Rule 10    DecVarDim -> DecVarDim2
Rule 11    DecVarDim -> empty
Rule 12    DecVarDim2 -> LBRACK INT_CTE DecVarDim3 RBRACK
Rule 13    DecVarDim3 -> COMMA INT_CTE
Rule 14    DecVarDim3 -> empty
Rule 15    tipo -> INT_TYPE pn_SetCurrentType
Rule 16    tipo -> CHAR_TYPE pn_SetCurrentType
Rule 17    tipo -> FLOAT_TYPE pn_SetCurrentType
Rule 18    dec_funciones -> dec_funciones2 dec_funciones
Rule 19    dec_funciones -> empty
Rule 20    dec_funciones2 -> tipo dec_funciones3
Rule 21    dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3
Rule 22    dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque
Rule 23    dec_funcion_param -> lista_parametros
Rule 24    dec_funcion_param -> empty
Rule 25    lista_parametros -> ID parDim COLON tipo lista_parametros2
Rule 26    lista_parametros2 -> COMMA lista_parametros
Rule 27    lista_parametros2 -> empty
Rule 28    parDim -> LBRACK expresion parDim2 RBRACK
Rule 29    parDim -> empty
Rule 30    parDim2 -> COMMA expresion
Rule 31    parDim2 -> empty
Rule 32    llamada_param -> expresion llamada_param2
Rule 33    llamada_param2 -> COMMA expresion
Rule 34    llamada_param2 -> empty
Rule 35    principal -> PRINCIPAL LPAREN RPAREN bloque
Rule 36    bloque -> LCURLY estatutos RCURLY
Rule 37    estatutos -> estatuto estatutos
Rule 38    estatutos -> empty
Rule 39    estatuto -> asignacion
Rule 40    estatuto -> condicion
Rule 41    estatuto -> regresa
Rule 42    estatuto -> loop_condicional
Rule 43    estatuto -> loop_no_condicional
Rule 44    estatuto -> llamada_funcion
Rule 45    estatuto -> escritura
Rule 46    estatuto -> lectura
Rule 47    asignacion -> variable ASSIGN expresion SEMIC
Rule 48    ctes -> INT_CTE
Rule 49    ctes -> FLOAT_CTE
Rule 50    ctes -> CHAR_CTE
Rule 51    variable -> ID varDim
Rule 52    varDim -> LBRACK expresion varDim2 RBRACK
Rule 53    varDim -> empty
Rule 54    varDim2 -> COMMA expresion
Rule 55    varDim2 -> empty
Rule 56    condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else
Rule 57    else -> SINO bloque
Rule 58    else -> empty
Rule 59    loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque
Rule 60    loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque
Rule 61    lectura -> LEE LPAREN llamada_param RPAREN SEMIC
Rule 62    llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC
Rule 63    escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMIC
Rule 64    escritura2 -> STRING_CTE escritura3
Rule 65    escritura2 -> expresion escritura3
Rule 66    escritura3 -> COMMA escritura2
Rule 67    escritura3 -> empty
Rule 68    regresa -> REGRESA LPAREN variable RPAREN SEMIC
Rule 69    expresion -> mega_exp expresion1
Rule 70    expresion1 -> ASSIGN expresion
Rule 71    expresion1 -> empty
Rule 72    mega_exp -> super_exp meg
Rule 73    meg -> op_l mega_exp
Rule 74    meg -> empty
Rule 75    op_l -> AND_LOG
Rule 76    op_l -> OR_LOG
Rule 77    super_exp -> exp sp
Rule 78    sp -> op_r exp
Rule 79    sp -> empty
Rule 80    op_r -> LT_LOG
Rule 81    op_r -> GT_LOG
Rule 82    op_r -> LTE_LOG
Rule 83    op_r -> GTE_LOG
Rule 84    op_r -> NE_LOG
Rule 85    op_r -> EQUAL_LOG
Rule 86    exp -> termino exp1
Rule 87    exp1 -> op_a exp
Rule 88    exp1 -> empty
Rule 89    op_a -> PLUS_OP
Rule 90    op_a -> MINUS_OP
Rule 91    termino -> factor term
Rule 92    term -> op_a1 termino
Rule 93    term -> empty
Rule 94    op_a1 -> MULT_OP
Rule 95    op_a1 -> DIV_OP
Rule 96    factor -> ctes
Rule 97    factor -> LPAREN exp RPAREN
Rule 98    factor -> variable
Rule 99    factor -> llamada_funcion
Rule 100   empty -> <empty>
Rule 101   pn_SetCurrentType -> <empty>
Rule 102   pn_AddVariable -> <empty>
Rule 103   pn_AddFunc -> <empty>

Terminals, with rules where they appear

AND_LOG              : 75
ASSIGN               : 47 60 70
CHAR_CTE             : 50
CHAR_TYPE            : 16
COLON                : 4 25
COMMA                : 8 13 26 30 33 54 66
COMMENT              : 
DESDE                : 60
DIV_OP               : 95
ENTONCES             : 56
EQUAL_LOG            : 85
ESCRIBE              : 63
FLOAT_CTE            : 49
FLOAT_TYPE           : 17
FUNCION              : 22
GTE_LOG              : 83
GT_LOG               : 81
HACER                : 59 60
HASTA                : 60
ID                   : 1 7 22 25 51 62
INT_CTE              : 12 13 48
INT_TYPE             : 15
LBRACK               : 12 28 52
LCURLY               : 36
LEE                  : 61
LPAREN               : 22 35 56 59 61 62 63 68 97
LTE_LOG              : 82
LT_LOG               : 80
MIENTRAS             : 59
MINUS_OP             : 90
MULT_OP              : 94
NEW_LINE             : 
NE_LOG               : 84
OR_LOG               : 76
PLUS_OP              : 89
PRINCIPAL            : 35
PROGRAMA             : 1
RBRACK               : 12 28 52
RCURLY               : 36
REGRESA              : 68
RPAREN               : 22 35 56 59 61 62 63 68 97
SEMIC                : 1 4 47 61 62 63 68
SI                   : 56
SINO                 : 57
STRING_CTE           : 64
VARIABLES            : 2
VOID                 : 21
error                : 

Nonterminals, with rules where they appear

DecVarDim            : 7
DecVarDim2           : 10
DecVarDim3           : 12
asignacion           : 39
bloque               : 22 35 56 57 59 60
condicion            : 40
ctes                 : 96
dec_funcion_param    : 22
dec_funciones        : 1 18
dec_funciones2       : 18
dec_funciones3       : 20 21
dec_variables        : 1 22
dec_variables2       : 2 5
dec_variables3       : 4
else                 : 56
empty                : 3 6 9 11 14 19 24 27 29 31 34 38 53 55 58 67 71 74 79 88 93
escritura            : 45
escritura2           : 63 66
escritura3           : 64 65
estatuto             : 37
estatutos            : 36 37
exp                  : 77 78 87 97
exp1                 : 86
expresion            : 28 30 32 33 47 52 54 56 59 60 60 65 70
expresion1           : 69
factor               : 91
lectura              : 46
lista_ids            : 4 8
lista_ids2           : 7
lista_parametros     : 23 26
lista_parametros2    : 25
llamada_funcion      : 44 99
llamada_param        : 61 62
llamada_param2       : 32
loop_condicional     : 42
loop_no_condicional  : 43
meg                  : 72
mega_exp             : 69 73
op_a                 : 87
op_a1                : 92
op_l                 : 73
op_r                 : 78
parDim               : 25
parDim2              : 28
pn_AddFunc           : 22
pn_AddVariable       : 7
pn_SetCurrentType    : 15 16 17 21
principal            : 1
programa             : 0
regresa              : 41
sp                   : 77
super_exp            : 72
term                 : 91
termino              : 86 92
tipo                 : 4 20 25
varDim               : 51
varDim2              : 52
variable             : 47 60 68 98

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMIC dec_variables dec_funciones principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMIC dec_variables dec_funciones principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMIC dec_variables dec_funciones principal

    SEMIC           shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMIC . dec_variables dec_funciones principal
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (100) empty -> .

    VARIABLES       shift and go to state 6
    VOID            reduce using rule 100 (empty -> .)
    INT_TYPE        reduce using rule 100 (empty -> .)
    CHAR_TYPE       reduce using rule 100 (empty -> .)
    FLOAT_TYPE      reduce using rule 100 (empty -> .)
    PRINCIPAL       reduce using rule 100 (empty -> .)

    dec_variables                  shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMIC dec_variables . dec_funciones principal
    (18) dec_funciones -> . dec_funciones2 dec_funciones
    (19) dec_funciones -> . empty
    (20) dec_funciones2 -> . tipo dec_funciones3
    (21) dec_funciones2 -> . VOID pn_SetCurrentType dec_funciones3
    (100) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 12
    PRINCIPAL       reduce using rule 100 (empty -> .)
    INT_TYPE        shift and go to state 13
    CHAR_TYPE       shift and go to state 14
    FLOAT_TYPE      shift and go to state 15

    dec_funciones                  shift and go to state 8
    dec_funciones2                 shift and go to state 9
    empty                          shift and go to state 10
    tipo                           shift and go to state 11

state 6

    (2) dec_variables -> VARIABLES . dec_variables2
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 13
    CHAR_TYPE       shift and go to state 14
    FLOAT_TYPE      shift and go to state 15

    dec_variables2                 shift and go to state 16
    tipo                           shift and go to state 17

state 7

    (3) dec_variables -> empty .

    VOID            reduce using rule 3 (dec_variables -> empty .)
    INT_TYPE        reduce using rule 3 (dec_variables -> empty .)
    CHAR_TYPE       reduce using rule 3 (dec_variables -> empty .)
    FLOAT_TYPE      reduce using rule 3 (dec_variables -> empty .)
    PRINCIPAL       reduce using rule 3 (dec_variables -> empty .)
    LCURLY          reduce using rule 3 (dec_variables -> empty .)


state 8

    (1) programa -> PROGRAMA ID SEMIC dec_variables dec_funciones . principal
    (35) principal -> . PRINCIPAL LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 19

    principal                      shift and go to state 18

state 9

    (18) dec_funciones -> dec_funciones2 . dec_funciones
    (18) dec_funciones -> . dec_funciones2 dec_funciones
    (19) dec_funciones -> . empty
    (20) dec_funciones2 -> . tipo dec_funciones3
    (21) dec_funciones2 -> . VOID pn_SetCurrentType dec_funciones3
    (100) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    VOID            shift and go to state 12
    PRINCIPAL       reduce using rule 100 (empty -> .)
    INT_TYPE        shift and go to state 13
    CHAR_TYPE       shift and go to state 14
    FLOAT_TYPE      shift and go to state 15

    dec_funciones2                 shift and go to state 9
    dec_funciones                  shift and go to state 20
    empty                          shift and go to state 10
    tipo                           shift and go to state 11

state 10

    (19) dec_funciones -> empty .

    PRINCIPAL       reduce using rule 19 (dec_funciones -> empty .)


state 11

    (20) dec_funciones2 -> tipo . dec_funciones3
    (22) dec_funciones3 -> . FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque

    FUNCION         shift and go to state 22

    dec_funciones3                 shift and go to state 21

state 12

    (21) dec_funciones2 -> VOID . pn_SetCurrentType dec_funciones3
    (101) pn_SetCurrentType -> .

    FUNCION         reduce using rule 101 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 23

state 13

    (15) tipo -> INT_TYPE . pn_SetCurrentType
    (101) pn_SetCurrentType -> .

    FUNCION         reduce using rule 101 (pn_SetCurrentType -> .)
    COLON           reduce using rule 101 (pn_SetCurrentType -> .)
    COMMA           reduce using rule 101 (pn_SetCurrentType -> .)
    RPAREN          reduce using rule 101 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 24

state 14

    (16) tipo -> CHAR_TYPE . pn_SetCurrentType
    (101) pn_SetCurrentType -> .

    FUNCION         reduce using rule 101 (pn_SetCurrentType -> .)
    COLON           reduce using rule 101 (pn_SetCurrentType -> .)
    COMMA           reduce using rule 101 (pn_SetCurrentType -> .)
    RPAREN          reduce using rule 101 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 25

state 15

    (17) tipo -> FLOAT_TYPE . pn_SetCurrentType
    (101) pn_SetCurrentType -> .

    FUNCION         reduce using rule 101 (pn_SetCurrentType -> .)
    COLON           reduce using rule 101 (pn_SetCurrentType -> .)
    COMMA           reduce using rule 101 (pn_SetCurrentType -> .)
    RPAREN          reduce using rule 101 (pn_SetCurrentType -> .)

    pn_SetCurrentType              shift and go to state 26

state 16

    (2) dec_variables -> VARIABLES dec_variables2 .

    VOID            reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    INT_TYPE        reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    CHAR_TYPE       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    FLOAT_TYPE      reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    PRINCIPAL       reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)
    LCURLY          reduce using rule 2 (dec_variables -> VARIABLES dec_variables2 .)


state 17

    (4) dec_variables2 -> tipo . COLON lista_ids SEMIC dec_variables3

    COLON           shift and go to state 27


state 18

    (1) programa -> PROGRAMA ID SEMIC dec_variables dec_funciones principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMIC dec_variables dec_funciones principal .)


state 19

    (35) principal -> PRINCIPAL . LPAREN RPAREN bloque

    LPAREN          shift and go to state 28


state 20

    (18) dec_funciones -> dec_funciones2 dec_funciones .

    PRINCIPAL       reduce using rule 18 (dec_funciones -> dec_funciones2 dec_funciones .)


state 21

    (20) dec_funciones2 -> tipo dec_funciones3 .

    VOID            reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    INT_TYPE        reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    CHAR_TYPE       reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    FLOAT_TYPE      reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)
    PRINCIPAL       reduce using rule 20 (dec_funciones2 -> tipo dec_funciones3 .)


state 22

    (22) dec_funciones3 -> FUNCION . ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque

    ID              shift and go to state 29


state 23

    (21) dec_funciones2 -> VOID pn_SetCurrentType . dec_funciones3
    (22) dec_funciones3 -> . FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque

    FUNCION         shift and go to state 22

    dec_funciones3                 shift and go to state 30

state 24

    (15) tipo -> INT_TYPE pn_SetCurrentType .

    FUNCION         reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    COLON           reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    COMMA           reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)
    RPAREN          reduce using rule 15 (tipo -> INT_TYPE pn_SetCurrentType .)


state 25

    (16) tipo -> CHAR_TYPE pn_SetCurrentType .

    FUNCION         reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    COLON           reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    COMMA           reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)
    RPAREN          reduce using rule 16 (tipo -> CHAR_TYPE pn_SetCurrentType .)


state 26

    (17) tipo -> FLOAT_TYPE pn_SetCurrentType .

    FUNCION         reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    COLON           reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    COMMA           reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)
    RPAREN          reduce using rule 17 (tipo -> FLOAT_TYPE pn_SetCurrentType .)


state 27

    (4) dec_variables2 -> tipo COLON . lista_ids SEMIC dec_variables3
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 32

    lista_ids                      shift and go to state 31

state 28

    (35) principal -> PRINCIPAL LPAREN . RPAREN bloque

    RPAREN          shift and go to state 33


state 29

    (22) dec_funciones3 -> FUNCION ID . pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque
    (103) pn_AddFunc -> .

    LPAREN          reduce using rule 103 (pn_AddFunc -> .)

    pn_AddFunc                     shift and go to state 34

state 30

    (21) dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .

    VOID            reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    INT_TYPE        reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    CHAR_TYPE       reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    FLOAT_TYPE      reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)
    PRINCIPAL       reduce using rule 21 (dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3 .)


state 31

    (4) dec_variables2 -> tipo COLON lista_ids . SEMIC dec_variables3

    SEMIC           shift and go to state 35


state 32

    (7) lista_ids -> ID . pn_AddVariable DecVarDim lista_ids2
    (102) pn_AddVariable -> .

    LBRACK          reduce using rule 102 (pn_AddVariable -> .)
    COMMA           reduce using rule 102 (pn_AddVariable -> .)
    SEMIC           reduce using rule 102 (pn_AddVariable -> .)

    pn_AddVariable                 shift and go to state 36

state 33

    (35) principal -> PRINCIPAL LPAREN RPAREN . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 38

    bloque                         shift and go to state 37

state 34

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc . LPAREN dec_funcion_param RPAREN dec_variables bloque

    LPAREN          shift and go to state 39


state 35

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC . dec_variables3
    (5) dec_variables3 -> . dec_variables2
    (6) dec_variables3 -> . empty
    (4) dec_variables2 -> . tipo COLON lista_ids SEMIC dec_variables3
    (100) empty -> .
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for CHAR_TYPE resolved as shift
  ! shift/reduce conflict for FLOAT_TYPE resolved as shift
    VOID            reduce using rule 100 (empty -> .)
    PRINCIPAL       reduce using rule 100 (empty -> .)
    LCURLY          reduce using rule 100 (empty -> .)
    INT_TYPE        shift and go to state 13
    CHAR_TYPE       shift and go to state 14
    FLOAT_TYPE      shift and go to state 15

  ! INT_TYPE        [ reduce using rule 100 (empty -> .) ]
  ! CHAR_TYPE       [ reduce using rule 100 (empty -> .) ]
  ! FLOAT_TYPE      [ reduce using rule 100 (empty -> .) ]

    tipo                           shift and go to state 17
    dec_variables3                 shift and go to state 40
    dec_variables2                 shift and go to state 41
    empty                          shift and go to state 42

state 36

    (7) lista_ids -> ID pn_AddVariable . DecVarDim lista_ids2
    (10) DecVarDim -> . DecVarDim2
    (11) DecVarDim -> . empty
    (12) DecVarDim2 -> . LBRACK INT_CTE DecVarDim3 RBRACK
    (100) empty -> .

    LBRACK          shift and go to state 46
    COMMA           reduce using rule 100 (empty -> .)
    SEMIC           reduce using rule 100 (empty -> .)

    DecVarDim                      shift and go to state 43
    DecVarDim2                     shift and go to state 44
    empty                          shift and go to state 45

state 37

    (35) principal -> PRINCIPAL LPAREN RPAREN bloque .

    $end            reduce using rule 35 (principal -> PRINCIPAL LPAREN RPAREN bloque .)


state 38

    (36) bloque -> LCURLY . estatutos RCURLY
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . empty
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicion
    (41) estatuto -> . regresa
    (42) estatuto -> . loop_condicional
    (43) estatuto -> . loop_no_condicional
    (44) estatuto -> . llamada_funcion
    (45) estatuto -> . escritura
    (46) estatuto -> . lectura
    (100) empty -> .
    (47) asignacion -> . variable ASSIGN expresion SEMIC
    (56) condicion -> . SI LPAREN expresion RPAREN ENTONCES bloque else
    (68) regresa -> . REGRESA LPAREN variable RPAREN SEMIC
    (59) loop_condicional -> . MIENTRAS LPAREN expresion RPAREN HACER bloque
    (60) loop_no_condicional -> . DESDE variable ASSIGN expresion HASTA expresion HACER bloque
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (63) escritura -> . ESCRIBE LPAREN escritura2 RPAREN SEMIC
    (61) lectura -> . LEE LPAREN llamada_param RPAREN SEMIC
    (51) variable -> . ID varDim

    RCURLY          reduce using rule 100 (empty -> .)
    SI              shift and go to state 59
    REGRESA         shift and go to state 60
    MIENTRAS        shift and go to state 61
    DESDE           shift and go to state 62
    ID              shift and go to state 63
    ESCRIBE         shift and go to state 64
    LEE             shift and go to state 65

    estatutos                      shift and go to state 47
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    regresa                        shift and go to state 52
    loop_condicional               shift and go to state 53
    loop_no_condicional            shift and go to state 54
    llamada_funcion                shift and go to state 55
    escritura                      shift and go to state 56
    lectura                        shift and go to state 57
    variable                       shift and go to state 58

state 39

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN . dec_funcion_param RPAREN dec_variables bloque
    (23) dec_funcion_param -> . lista_parametros
    (24) dec_funcion_param -> . empty
    (25) lista_parametros -> . ID parDim COLON tipo lista_parametros2
    (100) empty -> .

    ID              shift and go to state 66
    RPAREN          reduce using rule 100 (empty -> .)

    dec_funcion_param              shift and go to state 67
    lista_parametros               shift and go to state 68
    empty                          shift and go to state 69

state 40

    (4) dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .

    VOID            reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    INT_TYPE        reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    CHAR_TYPE       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    FLOAT_TYPE      reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    PRINCIPAL       reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)
    LCURLY          reduce using rule 4 (dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3 .)


state 41

    (5) dec_variables3 -> dec_variables2 .

    VOID            reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    INT_TYPE        reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    CHAR_TYPE       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    FLOAT_TYPE      reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    PRINCIPAL       reduce using rule 5 (dec_variables3 -> dec_variables2 .)
    LCURLY          reduce using rule 5 (dec_variables3 -> dec_variables2 .)


state 42

    (6) dec_variables3 -> empty .

    VOID            reduce using rule 6 (dec_variables3 -> empty .)
    INT_TYPE        reduce using rule 6 (dec_variables3 -> empty .)
    CHAR_TYPE       reduce using rule 6 (dec_variables3 -> empty .)
    FLOAT_TYPE      reduce using rule 6 (dec_variables3 -> empty .)
    PRINCIPAL       reduce using rule 6 (dec_variables3 -> empty .)
    LCURLY          reduce using rule 6 (dec_variables3 -> empty .)


state 43

    (7) lista_ids -> ID pn_AddVariable DecVarDim . lista_ids2
    (8) lista_ids2 -> . COMMA lista_ids
    (9) lista_ids2 -> . empty
    (100) empty -> .

    COMMA           shift and go to state 71
    SEMIC           reduce using rule 100 (empty -> .)

    lista_ids2                     shift and go to state 70
    empty                          shift and go to state 72

state 44

    (10) DecVarDim -> DecVarDim2 .

    COMMA           reduce using rule 10 (DecVarDim -> DecVarDim2 .)
    SEMIC           reduce using rule 10 (DecVarDim -> DecVarDim2 .)


state 45

    (11) DecVarDim -> empty .

    COMMA           reduce using rule 11 (DecVarDim -> empty .)
    SEMIC           reduce using rule 11 (DecVarDim -> empty .)


state 46

    (12) DecVarDim2 -> LBRACK . INT_CTE DecVarDim3 RBRACK

    INT_CTE         shift and go to state 73


state 47

    (36) bloque -> LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 74


state 48

    (37) estatutos -> estatuto . estatutos
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . empty
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicion
    (41) estatuto -> . regresa
    (42) estatuto -> . loop_condicional
    (43) estatuto -> . loop_no_condicional
    (44) estatuto -> . llamada_funcion
    (45) estatuto -> . escritura
    (46) estatuto -> . lectura
    (100) empty -> .
    (47) asignacion -> . variable ASSIGN expresion SEMIC
    (56) condicion -> . SI LPAREN expresion RPAREN ENTONCES bloque else
    (68) regresa -> . REGRESA LPAREN variable RPAREN SEMIC
    (59) loop_condicional -> . MIENTRAS LPAREN expresion RPAREN HACER bloque
    (60) loop_no_condicional -> . DESDE variable ASSIGN expresion HASTA expresion HACER bloque
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC
    (63) escritura -> . ESCRIBE LPAREN escritura2 RPAREN SEMIC
    (61) lectura -> . LEE LPAREN llamada_param RPAREN SEMIC
    (51) variable -> . ID varDim

    RCURLY          reduce using rule 100 (empty -> .)
    SI              shift and go to state 59
    REGRESA         shift and go to state 60
    MIENTRAS        shift and go to state 61
    DESDE           shift and go to state 62
    ID              shift and go to state 63
    ESCRIBE         shift and go to state 64
    LEE             shift and go to state 65

    estatuto                       shift and go to state 48
    estatutos                      shift and go to state 75
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    regresa                        shift and go to state 52
    loop_condicional               shift and go to state 53
    loop_no_condicional            shift and go to state 54
    llamada_funcion                shift and go to state 55
    escritura                      shift and go to state 56
    lectura                        shift and go to state 57
    variable                       shift and go to state 58

state 49

    (38) estatutos -> empty .

    RCURLY          reduce using rule 38 (estatutos -> empty .)


state 50

    (39) estatuto -> asignacion .

    SI              reduce using rule 39 (estatuto -> asignacion .)
    REGRESA         reduce using rule 39 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 39 (estatuto -> asignacion .)
    DESDE           reduce using rule 39 (estatuto -> asignacion .)
    ID              reduce using rule 39 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 39 (estatuto -> asignacion .)
    LEE             reduce using rule 39 (estatuto -> asignacion .)
    RCURLY          reduce using rule 39 (estatuto -> asignacion .)


state 51

    (40) estatuto -> condicion .

    SI              reduce using rule 40 (estatuto -> condicion .)
    REGRESA         reduce using rule 40 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 40 (estatuto -> condicion .)
    DESDE           reduce using rule 40 (estatuto -> condicion .)
    ID              reduce using rule 40 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 40 (estatuto -> condicion .)
    LEE             reduce using rule 40 (estatuto -> condicion .)
    RCURLY          reduce using rule 40 (estatuto -> condicion .)


state 52

    (41) estatuto -> regresa .

    SI              reduce using rule 41 (estatuto -> regresa .)
    REGRESA         reduce using rule 41 (estatuto -> regresa .)
    MIENTRAS        reduce using rule 41 (estatuto -> regresa .)
    DESDE           reduce using rule 41 (estatuto -> regresa .)
    ID              reduce using rule 41 (estatuto -> regresa .)
    ESCRIBE         reduce using rule 41 (estatuto -> regresa .)
    LEE             reduce using rule 41 (estatuto -> regresa .)
    RCURLY          reduce using rule 41 (estatuto -> regresa .)


state 53

    (42) estatuto -> loop_condicional .

    SI              reduce using rule 42 (estatuto -> loop_condicional .)
    REGRESA         reduce using rule 42 (estatuto -> loop_condicional .)
    MIENTRAS        reduce using rule 42 (estatuto -> loop_condicional .)
    DESDE           reduce using rule 42 (estatuto -> loop_condicional .)
    ID              reduce using rule 42 (estatuto -> loop_condicional .)
    ESCRIBE         reduce using rule 42 (estatuto -> loop_condicional .)
    LEE             reduce using rule 42 (estatuto -> loop_condicional .)
    RCURLY          reduce using rule 42 (estatuto -> loop_condicional .)


state 54

    (43) estatuto -> loop_no_condicional .

    SI              reduce using rule 43 (estatuto -> loop_no_condicional .)
    REGRESA         reduce using rule 43 (estatuto -> loop_no_condicional .)
    MIENTRAS        reduce using rule 43 (estatuto -> loop_no_condicional .)
    DESDE           reduce using rule 43 (estatuto -> loop_no_condicional .)
    ID              reduce using rule 43 (estatuto -> loop_no_condicional .)
    ESCRIBE         reduce using rule 43 (estatuto -> loop_no_condicional .)
    LEE             reduce using rule 43 (estatuto -> loop_no_condicional .)
    RCURLY          reduce using rule 43 (estatuto -> loop_no_condicional .)


state 55

    (44) estatuto -> llamada_funcion .

    SI              reduce using rule 44 (estatuto -> llamada_funcion .)
    REGRESA         reduce using rule 44 (estatuto -> llamada_funcion .)
    MIENTRAS        reduce using rule 44 (estatuto -> llamada_funcion .)
    DESDE           reduce using rule 44 (estatuto -> llamada_funcion .)
    ID              reduce using rule 44 (estatuto -> llamada_funcion .)
    ESCRIBE         reduce using rule 44 (estatuto -> llamada_funcion .)
    LEE             reduce using rule 44 (estatuto -> llamada_funcion .)
    RCURLY          reduce using rule 44 (estatuto -> llamada_funcion .)


state 56

    (45) estatuto -> escritura .

    SI              reduce using rule 45 (estatuto -> escritura .)
    REGRESA         reduce using rule 45 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 45 (estatuto -> escritura .)
    DESDE           reduce using rule 45 (estatuto -> escritura .)
    ID              reduce using rule 45 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 45 (estatuto -> escritura .)
    LEE             reduce using rule 45 (estatuto -> escritura .)
    RCURLY          reduce using rule 45 (estatuto -> escritura .)


state 57

    (46) estatuto -> lectura .

    SI              reduce using rule 46 (estatuto -> lectura .)
    REGRESA         reduce using rule 46 (estatuto -> lectura .)
    MIENTRAS        reduce using rule 46 (estatuto -> lectura .)
    DESDE           reduce using rule 46 (estatuto -> lectura .)
    ID              reduce using rule 46 (estatuto -> lectura .)
    ESCRIBE         reduce using rule 46 (estatuto -> lectura .)
    LEE             reduce using rule 46 (estatuto -> lectura .)
    RCURLY          reduce using rule 46 (estatuto -> lectura .)


state 58

    (47) asignacion -> variable . ASSIGN expresion SEMIC

    ASSIGN          shift and go to state 76


state 59

    (56) condicion -> SI . LPAREN expresion RPAREN ENTONCES bloque else

    LPAREN          shift and go to state 77


state 60

    (68) regresa -> REGRESA . LPAREN variable RPAREN SEMIC

    LPAREN          shift and go to state 78


state 61

    (59) loop_condicional -> MIENTRAS . LPAREN expresion RPAREN HACER bloque

    LPAREN          shift and go to state 79


state 62

    (60) loop_no_condicional -> DESDE . variable ASSIGN expresion HASTA expresion HACER bloque
    (51) variable -> . ID varDim

    ID              shift and go to state 81

    variable                       shift and go to state 80

state 63

    (62) llamada_funcion -> ID . LPAREN llamada_param RPAREN SEMIC
    (51) variable -> ID . varDim
    (52) varDim -> . LBRACK expresion varDim2 RBRACK
    (53) varDim -> . empty
    (100) empty -> .

    LPAREN          shift and go to state 82
    LBRACK          shift and go to state 84
    ASSIGN          reduce using rule 100 (empty -> .)

    varDim                         shift and go to state 83
    empty                          shift and go to state 85

state 64

    (63) escritura -> ESCRIBE . LPAREN escritura2 RPAREN SEMIC

    LPAREN          shift and go to state 86


state 65

    (61) lectura -> LEE . LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 87


state 66

    (25) lista_parametros -> ID . parDim COLON tipo lista_parametros2
    (28) parDim -> . LBRACK expresion parDim2 RBRACK
    (29) parDim -> . empty
    (100) empty -> .

    LBRACK          shift and go to state 89
    COLON           reduce using rule 100 (empty -> .)

    parDim                         shift and go to state 88
    empty                          shift and go to state 90

state 67

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param . RPAREN dec_variables bloque

    RPAREN          shift and go to state 91


state 68

    (23) dec_funcion_param -> lista_parametros .

    RPAREN          reduce using rule 23 (dec_funcion_param -> lista_parametros .)


state 69

    (24) dec_funcion_param -> empty .

    RPAREN          reduce using rule 24 (dec_funcion_param -> empty .)


state 70

    (7) lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .

    SEMIC           reduce using rule 7 (lista_ids -> ID pn_AddVariable DecVarDim lista_ids2 .)


state 71

    (8) lista_ids2 -> COMMA . lista_ids
    (7) lista_ids -> . ID pn_AddVariable DecVarDim lista_ids2

    ID              shift and go to state 32

    lista_ids                      shift and go to state 92

state 72

    (9) lista_ids2 -> empty .

    SEMIC           reduce using rule 9 (lista_ids2 -> empty .)


state 73

    (12) DecVarDim2 -> LBRACK INT_CTE . DecVarDim3 RBRACK
    (13) DecVarDim3 -> . COMMA INT_CTE
    (14) DecVarDim3 -> . empty
    (100) empty -> .

    COMMA           shift and go to state 94
    RBRACK          reduce using rule 100 (empty -> .)

    DecVarDim3                     shift and go to state 93
    empty                          shift and go to state 95

state 74

    (36) bloque -> LCURLY estatutos RCURLY .

    $end            reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    VOID            reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    INT_TYPE        reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    CHAR_TYPE       reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    FLOAT_TYPE      reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    PRINCIPAL       reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    SINO            reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    SI              reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    REGRESA         reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    MIENTRAS        reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    DESDE           reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    ID              reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    ESCRIBE         reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    LEE             reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 36 (bloque -> LCURLY estatutos RCURLY .)


state 75

    (37) estatutos -> estatuto estatutos .

    RCURLY          reduce using rule 37 (estatutos -> estatuto estatutos .)


state 76

    (47) asignacion -> variable ASSIGN . expresion SEMIC
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    variable                       shift and go to state 96
    expresion                      shift and go to state 97
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    llamada_funcion                shift and go to state 105

state 77

    (56) condicion -> SI LPAREN . expresion RPAREN ENTONCES bloque else
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    expresion                      shift and go to state 110
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 78

    (68) regresa -> REGRESA LPAREN . variable RPAREN SEMIC
    (51) variable -> . ID varDim

    ID              shift and go to state 81

    variable                       shift and go to state 111

state 79

    (59) loop_condicional -> MIENTRAS LPAREN . expresion RPAREN HACER bloque
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    expresion                      shift and go to state 112
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 80

    (60) loop_no_condicional -> DESDE variable . ASSIGN expresion HASTA expresion HACER bloque

    ASSIGN          shift and go to state 113


state 81

    (51) variable -> ID . varDim
    (52) varDim -> . LBRACK expresion varDim2 RBRACK
    (53) varDim -> . empty
    (100) empty -> .

    LBRACK          shift and go to state 84
    ASSIGN          reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)

    varDim                         shift and go to state 83
    empty                          shift and go to state 85

state 82

    (62) llamada_funcion -> ID LPAREN . llamada_param RPAREN SEMIC
    (32) llamada_param -> . expresion llamada_param2
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    llamada_param                  shift and go to state 114
    expresion                      shift and go to state 115
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 83

    (51) variable -> ID varDim .

    ASSIGN          reduce using rule 51 (variable -> ID varDim .)
    MULT_OP         reduce using rule 51 (variable -> ID varDim .)
    DIV_OP          reduce using rule 51 (variable -> ID varDim .)
    PLUS_OP         reduce using rule 51 (variable -> ID varDim .)
    MINUS_OP        reduce using rule 51 (variable -> ID varDim .)
    LT_LOG          reduce using rule 51 (variable -> ID varDim .)
    GT_LOG          reduce using rule 51 (variable -> ID varDim .)
    LTE_LOG         reduce using rule 51 (variable -> ID varDim .)
    GTE_LOG         reduce using rule 51 (variable -> ID varDim .)
    NE_LOG          reduce using rule 51 (variable -> ID varDim .)
    EQUAL_LOG       reduce using rule 51 (variable -> ID varDim .)
    AND_LOG         reduce using rule 51 (variable -> ID varDim .)
    OR_LOG          reduce using rule 51 (variable -> ID varDim .)
    SEMIC           reduce using rule 51 (variable -> ID varDim .)
    RPAREN          reduce using rule 51 (variable -> ID varDim .)
    COMMA           reduce using rule 51 (variable -> ID varDim .)
    RBRACK          reduce using rule 51 (variable -> ID varDim .)
    HASTA           reduce using rule 51 (variable -> ID varDim .)
    HACER           reduce using rule 51 (variable -> ID varDim .)


state 84

    (52) varDim -> LBRACK . expresion varDim2 RBRACK
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    expresion                      shift and go to state 116
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 85

    (53) varDim -> empty .

    ASSIGN          reduce using rule 53 (varDim -> empty .)
    RPAREN          reduce using rule 53 (varDim -> empty .)
    MULT_OP         reduce using rule 53 (varDim -> empty .)
    DIV_OP          reduce using rule 53 (varDim -> empty .)
    PLUS_OP         reduce using rule 53 (varDim -> empty .)
    MINUS_OP        reduce using rule 53 (varDim -> empty .)
    LT_LOG          reduce using rule 53 (varDim -> empty .)
    GT_LOG          reduce using rule 53 (varDim -> empty .)
    LTE_LOG         reduce using rule 53 (varDim -> empty .)
    GTE_LOG         reduce using rule 53 (varDim -> empty .)
    NE_LOG          reduce using rule 53 (varDim -> empty .)
    EQUAL_LOG       reduce using rule 53 (varDim -> empty .)
    AND_LOG         reduce using rule 53 (varDim -> empty .)
    OR_LOG          reduce using rule 53 (varDim -> empty .)
    SEMIC           reduce using rule 53 (varDim -> empty .)
    COMMA           reduce using rule 53 (varDim -> empty .)
    RBRACK          reduce using rule 53 (varDim -> empty .)
    HASTA           reduce using rule 53 (varDim -> empty .)
    HACER           reduce using rule 53 (varDim -> empty .)


state 86

    (63) escritura -> ESCRIBE LPAREN . escritura2 RPAREN SEMIC
    (64) escritura2 -> . STRING_CTE escritura3
    (65) escritura2 -> . expresion escritura3
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    STRING_CTE      shift and go to state 118
    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    escritura2                     shift and go to state 117
    expresion                      shift and go to state 119
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 87

    (61) lectura -> LEE LPAREN . llamada_param RPAREN SEMIC
    (32) llamada_param -> . expresion llamada_param2
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    llamada_param                  shift and go to state 120
    expresion                      shift and go to state 115
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 88

    (25) lista_parametros -> ID parDim . COLON tipo lista_parametros2

    COLON           shift and go to state 121


state 89

    (28) parDim -> LBRACK . expresion parDim2 RBRACK
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    expresion                      shift and go to state 122
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 90

    (29) parDim -> empty .

    COLON           reduce using rule 29 (parDim -> empty .)


state 91

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN . dec_variables bloque
    (2) dec_variables -> . VARIABLES dec_variables2
    (3) dec_variables -> . empty
    (100) empty -> .

    VARIABLES       shift and go to state 6
    LCURLY          reduce using rule 100 (empty -> .)

    dec_variables                  shift and go to state 123
    empty                          shift and go to state 7

state 92

    (8) lista_ids2 -> COMMA lista_ids .

    SEMIC           reduce using rule 8 (lista_ids2 -> COMMA lista_ids .)


state 93

    (12) DecVarDim2 -> LBRACK INT_CTE DecVarDim3 . RBRACK

    RBRACK          shift and go to state 124


state 94

    (13) DecVarDim3 -> COMMA . INT_CTE

    INT_CTE         shift and go to state 125


state 95

    (14) DecVarDim3 -> empty .

    RBRACK          reduce using rule 14 (DecVarDim3 -> empty .)


state 96

    (98) factor -> variable .

    MULT_OP         reduce using rule 98 (factor -> variable .)
    DIV_OP          reduce using rule 98 (factor -> variable .)
    PLUS_OP         reduce using rule 98 (factor -> variable .)
    MINUS_OP        reduce using rule 98 (factor -> variable .)
    LT_LOG          reduce using rule 98 (factor -> variable .)
    GT_LOG          reduce using rule 98 (factor -> variable .)
    LTE_LOG         reduce using rule 98 (factor -> variable .)
    GTE_LOG         reduce using rule 98 (factor -> variable .)
    NE_LOG          reduce using rule 98 (factor -> variable .)
    EQUAL_LOG       reduce using rule 98 (factor -> variable .)
    AND_LOG         reduce using rule 98 (factor -> variable .)
    OR_LOG          reduce using rule 98 (factor -> variable .)
    ASSIGN          reduce using rule 98 (factor -> variable .)
    SEMIC           reduce using rule 98 (factor -> variable .)
    RPAREN          reduce using rule 98 (factor -> variable .)
    COMMA           reduce using rule 98 (factor -> variable .)
    RBRACK          reduce using rule 98 (factor -> variable .)
    HASTA           reduce using rule 98 (factor -> variable .)
    HACER           reduce using rule 98 (factor -> variable .)


state 97

    (47) asignacion -> variable ASSIGN expresion . SEMIC

    SEMIC           shift and go to state 126


state 98

    (69) expresion -> mega_exp . expresion1
    (70) expresion1 -> . ASSIGN expresion
    (71) expresion1 -> . empty
    (100) empty -> .

    ASSIGN          shift and go to state 128
    SEMIC           reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACK          reduce using rule 100 (empty -> .)
    HASTA           reduce using rule 100 (empty -> .)
    HACER           reduce using rule 100 (empty -> .)

    expresion1                     shift and go to state 127
    empty                          shift and go to state 129

state 99

    (72) mega_exp -> super_exp . meg
    (73) meg -> . op_l mega_exp
    (74) meg -> . empty
    (75) op_l -> . AND_LOG
    (76) op_l -> . OR_LOG
    (100) empty -> .

    AND_LOG         shift and go to state 133
    OR_LOG          shift and go to state 134
    ASSIGN          reduce using rule 100 (empty -> .)
    SEMIC           reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACK          reduce using rule 100 (empty -> .)
    HASTA           reduce using rule 100 (empty -> .)
    HACER           reduce using rule 100 (empty -> .)

    meg                            shift and go to state 130
    op_l                           shift and go to state 131
    empty                          shift and go to state 132

state 100

    (77) super_exp -> exp . sp
    (78) sp -> . op_r exp
    (79) sp -> . empty
    (80) op_r -> . LT_LOG
    (81) op_r -> . GT_LOG
    (82) op_r -> . LTE_LOG
    (83) op_r -> . GTE_LOG
    (84) op_r -> . NE_LOG
    (85) op_r -> . EQUAL_LOG
    (100) empty -> .

    LT_LOG          shift and go to state 138
    GT_LOG          shift and go to state 139
    LTE_LOG         shift and go to state 140
    GTE_LOG         shift and go to state 141
    NE_LOG          shift and go to state 142
    EQUAL_LOG       shift and go to state 143
    AND_LOG         reduce using rule 100 (empty -> .)
    OR_LOG          reduce using rule 100 (empty -> .)
    ASSIGN          reduce using rule 100 (empty -> .)
    SEMIC           reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACK          reduce using rule 100 (empty -> .)
    HASTA           reduce using rule 100 (empty -> .)
    HACER           reduce using rule 100 (empty -> .)

    sp                             shift and go to state 135
    op_r                           shift and go to state 136
    empty                          shift and go to state 137

state 101

    (86) exp -> termino . exp1
    (87) exp1 -> . op_a exp
    (88) exp1 -> . empty
    (89) op_a -> . PLUS_OP
    (90) op_a -> . MINUS_OP
    (100) empty -> .

    PLUS_OP         shift and go to state 147
    MINUS_OP        shift and go to state 148
    LT_LOG          reduce using rule 100 (empty -> .)
    GT_LOG          reduce using rule 100 (empty -> .)
    LTE_LOG         reduce using rule 100 (empty -> .)
    GTE_LOG         reduce using rule 100 (empty -> .)
    NE_LOG          reduce using rule 100 (empty -> .)
    EQUAL_LOG       reduce using rule 100 (empty -> .)
    AND_LOG         reduce using rule 100 (empty -> .)
    OR_LOG          reduce using rule 100 (empty -> .)
    ASSIGN          reduce using rule 100 (empty -> .)
    SEMIC           reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACK          reduce using rule 100 (empty -> .)
    HASTA           reduce using rule 100 (empty -> .)
    HACER           reduce using rule 100 (empty -> .)

    exp1                           shift and go to state 144
    op_a                           shift and go to state 145
    empty                          shift and go to state 146

state 102

    (91) termino -> factor . term
    (92) term -> . op_a1 termino
    (93) term -> . empty
    (94) op_a1 -> . MULT_OP
    (95) op_a1 -> . DIV_OP
    (100) empty -> .

    MULT_OP         shift and go to state 152
    DIV_OP          shift and go to state 153
    PLUS_OP         reduce using rule 100 (empty -> .)
    MINUS_OP        reduce using rule 100 (empty -> .)
    LT_LOG          reduce using rule 100 (empty -> .)
    GT_LOG          reduce using rule 100 (empty -> .)
    LTE_LOG         reduce using rule 100 (empty -> .)
    GTE_LOG         reduce using rule 100 (empty -> .)
    NE_LOG          reduce using rule 100 (empty -> .)
    EQUAL_LOG       reduce using rule 100 (empty -> .)
    AND_LOG         reduce using rule 100 (empty -> .)
    OR_LOG          reduce using rule 100 (empty -> .)
    ASSIGN          reduce using rule 100 (empty -> .)
    SEMIC           reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACK          reduce using rule 100 (empty -> .)
    HASTA           reduce using rule 100 (empty -> .)
    HACER           reduce using rule 100 (empty -> .)

    term                           shift and go to state 149
    op_a1                          shift and go to state 150
    empty                          shift and go to state 151

state 103

    (96) factor -> ctes .

    MULT_OP         reduce using rule 96 (factor -> ctes .)
    DIV_OP          reduce using rule 96 (factor -> ctes .)
    PLUS_OP         reduce using rule 96 (factor -> ctes .)
    MINUS_OP        reduce using rule 96 (factor -> ctes .)
    LT_LOG          reduce using rule 96 (factor -> ctes .)
    GT_LOG          reduce using rule 96 (factor -> ctes .)
    LTE_LOG         reduce using rule 96 (factor -> ctes .)
    GTE_LOG         reduce using rule 96 (factor -> ctes .)
    NE_LOG          reduce using rule 96 (factor -> ctes .)
    EQUAL_LOG       reduce using rule 96 (factor -> ctes .)
    AND_LOG         reduce using rule 96 (factor -> ctes .)
    OR_LOG          reduce using rule 96 (factor -> ctes .)
    ASSIGN          reduce using rule 96 (factor -> ctes .)
    SEMIC           reduce using rule 96 (factor -> ctes .)
    RPAREN          reduce using rule 96 (factor -> ctes .)
    COMMA           reduce using rule 96 (factor -> ctes .)
    RBRACK          reduce using rule 96 (factor -> ctes .)
    HASTA           reduce using rule 96 (factor -> ctes .)
    HACER           reduce using rule 96 (factor -> ctes .)


state 104

    (97) factor -> LPAREN . exp RPAREN
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    exp                            shift and go to state 154
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 105

    (99) factor -> llamada_funcion .

    MULT_OP         reduce using rule 99 (factor -> llamada_funcion .)
    DIV_OP          reduce using rule 99 (factor -> llamada_funcion .)
    PLUS_OP         reduce using rule 99 (factor -> llamada_funcion .)
    MINUS_OP        reduce using rule 99 (factor -> llamada_funcion .)
    LT_LOG          reduce using rule 99 (factor -> llamada_funcion .)
    GT_LOG          reduce using rule 99 (factor -> llamada_funcion .)
    LTE_LOG         reduce using rule 99 (factor -> llamada_funcion .)
    GTE_LOG         reduce using rule 99 (factor -> llamada_funcion .)
    NE_LOG          reduce using rule 99 (factor -> llamada_funcion .)
    EQUAL_LOG       reduce using rule 99 (factor -> llamada_funcion .)
    AND_LOG         reduce using rule 99 (factor -> llamada_funcion .)
    OR_LOG          reduce using rule 99 (factor -> llamada_funcion .)
    ASSIGN          reduce using rule 99 (factor -> llamada_funcion .)
    SEMIC           reduce using rule 99 (factor -> llamada_funcion .)
    RPAREN          reduce using rule 99 (factor -> llamada_funcion .)
    COMMA           reduce using rule 99 (factor -> llamada_funcion .)
    RBRACK          reduce using rule 99 (factor -> llamada_funcion .)
    HASTA           reduce using rule 99 (factor -> llamada_funcion .)
    HACER           reduce using rule 99 (factor -> llamada_funcion .)


state 106

    (48) ctes -> INT_CTE .

    MULT_OP         reduce using rule 48 (ctes -> INT_CTE .)
    DIV_OP          reduce using rule 48 (ctes -> INT_CTE .)
    PLUS_OP         reduce using rule 48 (ctes -> INT_CTE .)
    MINUS_OP        reduce using rule 48 (ctes -> INT_CTE .)
    LT_LOG          reduce using rule 48 (ctes -> INT_CTE .)
    GT_LOG          reduce using rule 48 (ctes -> INT_CTE .)
    LTE_LOG         reduce using rule 48 (ctes -> INT_CTE .)
    GTE_LOG         reduce using rule 48 (ctes -> INT_CTE .)
    NE_LOG          reduce using rule 48 (ctes -> INT_CTE .)
    EQUAL_LOG       reduce using rule 48 (ctes -> INT_CTE .)
    AND_LOG         reduce using rule 48 (ctes -> INT_CTE .)
    OR_LOG          reduce using rule 48 (ctes -> INT_CTE .)
    ASSIGN          reduce using rule 48 (ctes -> INT_CTE .)
    SEMIC           reduce using rule 48 (ctes -> INT_CTE .)
    RPAREN          reduce using rule 48 (ctes -> INT_CTE .)
    COMMA           reduce using rule 48 (ctes -> INT_CTE .)
    RBRACK          reduce using rule 48 (ctes -> INT_CTE .)
    HASTA           reduce using rule 48 (ctes -> INT_CTE .)
    HACER           reduce using rule 48 (ctes -> INT_CTE .)


state 107

    (49) ctes -> FLOAT_CTE .

    MULT_OP         reduce using rule 49 (ctes -> FLOAT_CTE .)
    DIV_OP          reduce using rule 49 (ctes -> FLOAT_CTE .)
    PLUS_OP         reduce using rule 49 (ctes -> FLOAT_CTE .)
    MINUS_OP        reduce using rule 49 (ctes -> FLOAT_CTE .)
    LT_LOG          reduce using rule 49 (ctes -> FLOAT_CTE .)
    GT_LOG          reduce using rule 49 (ctes -> FLOAT_CTE .)
    LTE_LOG         reduce using rule 49 (ctes -> FLOAT_CTE .)
    GTE_LOG         reduce using rule 49 (ctes -> FLOAT_CTE .)
    NE_LOG          reduce using rule 49 (ctes -> FLOAT_CTE .)
    EQUAL_LOG       reduce using rule 49 (ctes -> FLOAT_CTE .)
    AND_LOG         reduce using rule 49 (ctes -> FLOAT_CTE .)
    OR_LOG          reduce using rule 49 (ctes -> FLOAT_CTE .)
    ASSIGN          reduce using rule 49 (ctes -> FLOAT_CTE .)
    SEMIC           reduce using rule 49 (ctes -> FLOAT_CTE .)
    RPAREN          reduce using rule 49 (ctes -> FLOAT_CTE .)
    COMMA           reduce using rule 49 (ctes -> FLOAT_CTE .)
    RBRACK          reduce using rule 49 (ctes -> FLOAT_CTE .)
    HASTA           reduce using rule 49 (ctes -> FLOAT_CTE .)
    HACER           reduce using rule 49 (ctes -> FLOAT_CTE .)


state 108

    (50) ctes -> CHAR_CTE .

    MULT_OP         reduce using rule 50 (ctes -> CHAR_CTE .)
    DIV_OP          reduce using rule 50 (ctes -> CHAR_CTE .)
    PLUS_OP         reduce using rule 50 (ctes -> CHAR_CTE .)
    MINUS_OP        reduce using rule 50 (ctes -> CHAR_CTE .)
    LT_LOG          reduce using rule 50 (ctes -> CHAR_CTE .)
    GT_LOG          reduce using rule 50 (ctes -> CHAR_CTE .)
    LTE_LOG         reduce using rule 50 (ctes -> CHAR_CTE .)
    GTE_LOG         reduce using rule 50 (ctes -> CHAR_CTE .)
    NE_LOG          reduce using rule 50 (ctes -> CHAR_CTE .)
    EQUAL_LOG       reduce using rule 50 (ctes -> CHAR_CTE .)
    AND_LOG         reduce using rule 50 (ctes -> CHAR_CTE .)
    OR_LOG          reduce using rule 50 (ctes -> CHAR_CTE .)
    ASSIGN          reduce using rule 50 (ctes -> CHAR_CTE .)
    SEMIC           reduce using rule 50 (ctes -> CHAR_CTE .)
    RPAREN          reduce using rule 50 (ctes -> CHAR_CTE .)
    COMMA           reduce using rule 50 (ctes -> CHAR_CTE .)
    RBRACK          reduce using rule 50 (ctes -> CHAR_CTE .)
    HASTA           reduce using rule 50 (ctes -> CHAR_CTE .)
    HACER           reduce using rule 50 (ctes -> CHAR_CTE .)


state 109

    (51) variable -> ID . varDim
    (62) llamada_funcion -> ID . LPAREN llamada_param RPAREN SEMIC
    (52) varDim -> . LBRACK expresion varDim2 RBRACK
    (53) varDim -> . empty
    (100) empty -> .

    LPAREN          shift and go to state 82
    LBRACK          shift and go to state 84
    MULT_OP         reduce using rule 100 (empty -> .)
    DIV_OP          reduce using rule 100 (empty -> .)
    PLUS_OP         reduce using rule 100 (empty -> .)
    MINUS_OP        reduce using rule 100 (empty -> .)
    LT_LOG          reduce using rule 100 (empty -> .)
    GT_LOG          reduce using rule 100 (empty -> .)
    LTE_LOG         reduce using rule 100 (empty -> .)
    GTE_LOG         reduce using rule 100 (empty -> .)
    NE_LOG          reduce using rule 100 (empty -> .)
    EQUAL_LOG       reduce using rule 100 (empty -> .)
    AND_LOG         reduce using rule 100 (empty -> .)
    OR_LOG          reduce using rule 100 (empty -> .)
    ASSIGN          reduce using rule 100 (empty -> .)
    SEMIC           reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACK          reduce using rule 100 (empty -> .)
    HASTA           reduce using rule 100 (empty -> .)
    HACER           reduce using rule 100 (empty -> .)

    varDim                         shift and go to state 83
    empty                          shift and go to state 85

state 110

    (56) condicion -> SI LPAREN expresion . RPAREN ENTONCES bloque else

    RPAREN          shift and go to state 155


state 111

    (68) regresa -> REGRESA LPAREN variable . RPAREN SEMIC

    RPAREN          shift and go to state 156


state 112

    (59) loop_condicional -> MIENTRAS LPAREN expresion . RPAREN HACER bloque

    RPAREN          shift and go to state 157


state 113

    (60) loop_no_condicional -> DESDE variable ASSIGN . expresion HASTA expresion HACER bloque
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    variable                       shift and go to state 96
    expresion                      shift and go to state 158
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    llamada_funcion                shift and go to state 105

state 114

    (62) llamada_funcion -> ID LPAREN llamada_param . RPAREN SEMIC

    RPAREN          shift and go to state 159


state 115

    (32) llamada_param -> expresion . llamada_param2
    (33) llamada_param2 -> . COMMA expresion
    (34) llamada_param2 -> . empty
    (100) empty -> .

    COMMA           shift and go to state 161
    RPAREN          reduce using rule 100 (empty -> .)

    llamada_param2                 shift and go to state 160
    empty                          shift and go to state 162

state 116

    (52) varDim -> LBRACK expresion . varDim2 RBRACK
    (54) varDim2 -> . COMMA expresion
    (55) varDim2 -> . empty
    (100) empty -> .

    COMMA           shift and go to state 164
    RBRACK          reduce using rule 100 (empty -> .)

    varDim2                        shift and go to state 163
    empty                          shift and go to state 165

state 117

    (63) escritura -> ESCRIBE LPAREN escritura2 . RPAREN SEMIC

    RPAREN          shift and go to state 166


state 118

    (64) escritura2 -> STRING_CTE . escritura3
    (66) escritura3 -> . COMMA escritura2
    (67) escritura3 -> . empty
    (100) empty -> .

    COMMA           shift and go to state 168
    RPAREN          reduce using rule 100 (empty -> .)

    escritura3                     shift and go to state 167
    empty                          shift and go to state 169

state 119

    (65) escritura2 -> expresion . escritura3
    (66) escritura3 -> . COMMA escritura2
    (67) escritura3 -> . empty
    (100) empty -> .

    COMMA           shift and go to state 168
    RPAREN          reduce using rule 100 (empty -> .)

    escritura3                     shift and go to state 170
    empty                          shift and go to state 169

state 120

    (61) lectura -> LEE LPAREN llamada_param . RPAREN SEMIC

    RPAREN          shift and go to state 171


state 121

    (25) lista_parametros -> ID parDim COLON . tipo lista_parametros2
    (15) tipo -> . INT_TYPE pn_SetCurrentType
    (16) tipo -> . CHAR_TYPE pn_SetCurrentType
    (17) tipo -> . FLOAT_TYPE pn_SetCurrentType

    INT_TYPE        shift and go to state 13
    CHAR_TYPE       shift and go to state 14
    FLOAT_TYPE      shift and go to state 15

    tipo                           shift and go to state 172

state 122

    (28) parDim -> LBRACK expresion . parDim2 RBRACK
    (30) parDim2 -> . COMMA expresion
    (31) parDim2 -> . empty
    (100) empty -> .

    COMMA           shift and go to state 174
    RBRACK          reduce using rule 100 (empty -> .)

    parDim2                        shift and go to state 173
    empty                          shift and go to state 175

state 123

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 38

    bloque                         shift and go to state 176

state 124

    (12) DecVarDim2 -> LBRACK INT_CTE DecVarDim3 RBRACK .

    COMMA           reduce using rule 12 (DecVarDim2 -> LBRACK INT_CTE DecVarDim3 RBRACK .)
    SEMIC           reduce using rule 12 (DecVarDim2 -> LBRACK INT_CTE DecVarDim3 RBRACK .)


state 125

    (13) DecVarDim3 -> COMMA INT_CTE .

    RBRACK          reduce using rule 13 (DecVarDim3 -> COMMA INT_CTE .)


state 126

    (47) asignacion -> variable ASSIGN expresion SEMIC .

    SI              reduce using rule 47 (asignacion -> variable ASSIGN expresion SEMIC .)
    REGRESA         reduce using rule 47 (asignacion -> variable ASSIGN expresion SEMIC .)
    MIENTRAS        reduce using rule 47 (asignacion -> variable ASSIGN expresion SEMIC .)
    DESDE           reduce using rule 47 (asignacion -> variable ASSIGN expresion SEMIC .)
    ID              reduce using rule 47 (asignacion -> variable ASSIGN expresion SEMIC .)
    ESCRIBE         reduce using rule 47 (asignacion -> variable ASSIGN expresion SEMIC .)
    LEE             reduce using rule 47 (asignacion -> variable ASSIGN expresion SEMIC .)
    RCURLY          reduce using rule 47 (asignacion -> variable ASSIGN expresion SEMIC .)


state 127

    (69) expresion -> mega_exp expresion1 .

    SEMIC           reduce using rule 69 (expresion -> mega_exp expresion1 .)
    RPAREN          reduce using rule 69 (expresion -> mega_exp expresion1 .)
    COMMA           reduce using rule 69 (expresion -> mega_exp expresion1 .)
    RBRACK          reduce using rule 69 (expresion -> mega_exp expresion1 .)
    HASTA           reduce using rule 69 (expresion -> mega_exp expresion1 .)
    HACER           reduce using rule 69 (expresion -> mega_exp expresion1 .)


state 128

    (70) expresion1 -> ASSIGN . expresion
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    expresion                      shift and go to state 177
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 129

    (71) expresion1 -> empty .

    SEMIC           reduce using rule 71 (expresion1 -> empty .)
    RPAREN          reduce using rule 71 (expresion1 -> empty .)
    COMMA           reduce using rule 71 (expresion1 -> empty .)
    RBRACK          reduce using rule 71 (expresion1 -> empty .)
    HASTA           reduce using rule 71 (expresion1 -> empty .)
    HACER           reduce using rule 71 (expresion1 -> empty .)


state 130

    (72) mega_exp -> super_exp meg .

    ASSIGN          reduce using rule 72 (mega_exp -> super_exp meg .)
    SEMIC           reduce using rule 72 (mega_exp -> super_exp meg .)
    RPAREN          reduce using rule 72 (mega_exp -> super_exp meg .)
    COMMA           reduce using rule 72 (mega_exp -> super_exp meg .)
    RBRACK          reduce using rule 72 (mega_exp -> super_exp meg .)
    HASTA           reduce using rule 72 (mega_exp -> super_exp meg .)
    HACER           reduce using rule 72 (mega_exp -> super_exp meg .)


state 131

    (73) meg -> op_l . mega_exp
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    mega_exp                       shift and go to state 178
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 132

    (74) meg -> empty .

    ASSIGN          reduce using rule 74 (meg -> empty .)
    SEMIC           reduce using rule 74 (meg -> empty .)
    RPAREN          reduce using rule 74 (meg -> empty .)
    COMMA           reduce using rule 74 (meg -> empty .)
    RBRACK          reduce using rule 74 (meg -> empty .)
    HASTA           reduce using rule 74 (meg -> empty .)
    HACER           reduce using rule 74 (meg -> empty .)


state 133

    (75) op_l -> AND_LOG .

    LPAREN          reduce using rule 75 (op_l -> AND_LOG .)
    INT_CTE         reduce using rule 75 (op_l -> AND_LOG .)
    FLOAT_CTE       reduce using rule 75 (op_l -> AND_LOG .)
    CHAR_CTE        reduce using rule 75 (op_l -> AND_LOG .)
    ID              reduce using rule 75 (op_l -> AND_LOG .)


state 134

    (76) op_l -> OR_LOG .

    LPAREN          reduce using rule 76 (op_l -> OR_LOG .)
    INT_CTE         reduce using rule 76 (op_l -> OR_LOG .)
    FLOAT_CTE       reduce using rule 76 (op_l -> OR_LOG .)
    CHAR_CTE        reduce using rule 76 (op_l -> OR_LOG .)
    ID              reduce using rule 76 (op_l -> OR_LOG .)


state 135

    (77) super_exp -> exp sp .

    AND_LOG         reduce using rule 77 (super_exp -> exp sp .)
    OR_LOG          reduce using rule 77 (super_exp -> exp sp .)
    ASSIGN          reduce using rule 77 (super_exp -> exp sp .)
    SEMIC           reduce using rule 77 (super_exp -> exp sp .)
    RPAREN          reduce using rule 77 (super_exp -> exp sp .)
    COMMA           reduce using rule 77 (super_exp -> exp sp .)
    RBRACK          reduce using rule 77 (super_exp -> exp sp .)
    HASTA           reduce using rule 77 (super_exp -> exp sp .)
    HACER           reduce using rule 77 (super_exp -> exp sp .)


state 136

    (78) sp -> op_r . exp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    exp                            shift and go to state 179
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 137

    (79) sp -> empty .

    AND_LOG         reduce using rule 79 (sp -> empty .)
    OR_LOG          reduce using rule 79 (sp -> empty .)
    ASSIGN          reduce using rule 79 (sp -> empty .)
    SEMIC           reduce using rule 79 (sp -> empty .)
    RPAREN          reduce using rule 79 (sp -> empty .)
    COMMA           reduce using rule 79 (sp -> empty .)
    RBRACK          reduce using rule 79 (sp -> empty .)
    HASTA           reduce using rule 79 (sp -> empty .)
    HACER           reduce using rule 79 (sp -> empty .)


state 138

    (80) op_r -> LT_LOG .

    LPAREN          reduce using rule 80 (op_r -> LT_LOG .)
    INT_CTE         reduce using rule 80 (op_r -> LT_LOG .)
    FLOAT_CTE       reduce using rule 80 (op_r -> LT_LOG .)
    CHAR_CTE        reduce using rule 80 (op_r -> LT_LOG .)
    ID              reduce using rule 80 (op_r -> LT_LOG .)


state 139

    (81) op_r -> GT_LOG .

    LPAREN          reduce using rule 81 (op_r -> GT_LOG .)
    INT_CTE         reduce using rule 81 (op_r -> GT_LOG .)
    FLOAT_CTE       reduce using rule 81 (op_r -> GT_LOG .)
    CHAR_CTE        reduce using rule 81 (op_r -> GT_LOG .)
    ID              reduce using rule 81 (op_r -> GT_LOG .)


state 140

    (82) op_r -> LTE_LOG .

    LPAREN          reduce using rule 82 (op_r -> LTE_LOG .)
    INT_CTE         reduce using rule 82 (op_r -> LTE_LOG .)
    FLOAT_CTE       reduce using rule 82 (op_r -> LTE_LOG .)
    CHAR_CTE        reduce using rule 82 (op_r -> LTE_LOG .)
    ID              reduce using rule 82 (op_r -> LTE_LOG .)


state 141

    (83) op_r -> GTE_LOG .

    LPAREN          reduce using rule 83 (op_r -> GTE_LOG .)
    INT_CTE         reduce using rule 83 (op_r -> GTE_LOG .)
    FLOAT_CTE       reduce using rule 83 (op_r -> GTE_LOG .)
    CHAR_CTE        reduce using rule 83 (op_r -> GTE_LOG .)
    ID              reduce using rule 83 (op_r -> GTE_LOG .)


state 142

    (84) op_r -> NE_LOG .

    LPAREN          reduce using rule 84 (op_r -> NE_LOG .)
    INT_CTE         reduce using rule 84 (op_r -> NE_LOG .)
    FLOAT_CTE       reduce using rule 84 (op_r -> NE_LOG .)
    CHAR_CTE        reduce using rule 84 (op_r -> NE_LOG .)
    ID              reduce using rule 84 (op_r -> NE_LOG .)


state 143

    (85) op_r -> EQUAL_LOG .

    LPAREN          reduce using rule 85 (op_r -> EQUAL_LOG .)
    INT_CTE         reduce using rule 85 (op_r -> EQUAL_LOG .)
    FLOAT_CTE       reduce using rule 85 (op_r -> EQUAL_LOG .)
    CHAR_CTE        reduce using rule 85 (op_r -> EQUAL_LOG .)
    ID              reduce using rule 85 (op_r -> EQUAL_LOG .)


state 144

    (86) exp -> termino exp1 .

    LT_LOG          reduce using rule 86 (exp -> termino exp1 .)
    GT_LOG          reduce using rule 86 (exp -> termino exp1 .)
    LTE_LOG         reduce using rule 86 (exp -> termino exp1 .)
    GTE_LOG         reduce using rule 86 (exp -> termino exp1 .)
    NE_LOG          reduce using rule 86 (exp -> termino exp1 .)
    EQUAL_LOG       reduce using rule 86 (exp -> termino exp1 .)
    AND_LOG         reduce using rule 86 (exp -> termino exp1 .)
    OR_LOG          reduce using rule 86 (exp -> termino exp1 .)
    ASSIGN          reduce using rule 86 (exp -> termino exp1 .)
    SEMIC           reduce using rule 86 (exp -> termino exp1 .)
    RPAREN          reduce using rule 86 (exp -> termino exp1 .)
    COMMA           reduce using rule 86 (exp -> termino exp1 .)
    RBRACK          reduce using rule 86 (exp -> termino exp1 .)
    HASTA           reduce using rule 86 (exp -> termino exp1 .)
    HACER           reduce using rule 86 (exp -> termino exp1 .)


state 145

    (87) exp1 -> op_a . exp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    exp                            shift and go to state 180
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 146

    (88) exp1 -> empty .

    LT_LOG          reduce using rule 88 (exp1 -> empty .)
    GT_LOG          reduce using rule 88 (exp1 -> empty .)
    LTE_LOG         reduce using rule 88 (exp1 -> empty .)
    GTE_LOG         reduce using rule 88 (exp1 -> empty .)
    NE_LOG          reduce using rule 88 (exp1 -> empty .)
    EQUAL_LOG       reduce using rule 88 (exp1 -> empty .)
    AND_LOG         reduce using rule 88 (exp1 -> empty .)
    OR_LOG          reduce using rule 88 (exp1 -> empty .)
    ASSIGN          reduce using rule 88 (exp1 -> empty .)
    SEMIC           reduce using rule 88 (exp1 -> empty .)
    RPAREN          reduce using rule 88 (exp1 -> empty .)
    COMMA           reduce using rule 88 (exp1 -> empty .)
    RBRACK          reduce using rule 88 (exp1 -> empty .)
    HASTA           reduce using rule 88 (exp1 -> empty .)
    HACER           reduce using rule 88 (exp1 -> empty .)


state 147

    (89) op_a -> PLUS_OP .

    LPAREN          reduce using rule 89 (op_a -> PLUS_OP .)
    INT_CTE         reduce using rule 89 (op_a -> PLUS_OP .)
    FLOAT_CTE       reduce using rule 89 (op_a -> PLUS_OP .)
    CHAR_CTE        reduce using rule 89 (op_a -> PLUS_OP .)
    ID              reduce using rule 89 (op_a -> PLUS_OP .)


state 148

    (90) op_a -> MINUS_OP .

    LPAREN          reduce using rule 90 (op_a -> MINUS_OP .)
    INT_CTE         reduce using rule 90 (op_a -> MINUS_OP .)
    FLOAT_CTE       reduce using rule 90 (op_a -> MINUS_OP .)
    CHAR_CTE        reduce using rule 90 (op_a -> MINUS_OP .)
    ID              reduce using rule 90 (op_a -> MINUS_OP .)


state 149

    (91) termino -> factor term .

    PLUS_OP         reduce using rule 91 (termino -> factor term .)
    MINUS_OP        reduce using rule 91 (termino -> factor term .)
    LT_LOG          reduce using rule 91 (termino -> factor term .)
    GT_LOG          reduce using rule 91 (termino -> factor term .)
    LTE_LOG         reduce using rule 91 (termino -> factor term .)
    GTE_LOG         reduce using rule 91 (termino -> factor term .)
    NE_LOG          reduce using rule 91 (termino -> factor term .)
    EQUAL_LOG       reduce using rule 91 (termino -> factor term .)
    AND_LOG         reduce using rule 91 (termino -> factor term .)
    OR_LOG          reduce using rule 91 (termino -> factor term .)
    ASSIGN          reduce using rule 91 (termino -> factor term .)
    SEMIC           reduce using rule 91 (termino -> factor term .)
    RPAREN          reduce using rule 91 (termino -> factor term .)
    COMMA           reduce using rule 91 (termino -> factor term .)
    RBRACK          reduce using rule 91 (termino -> factor term .)
    HASTA           reduce using rule 91 (termino -> factor term .)
    HACER           reduce using rule 91 (termino -> factor term .)


state 150

    (92) term -> op_a1 . termino
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    termino                        shift and go to state 181
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 151

    (93) term -> empty .

    PLUS_OP         reduce using rule 93 (term -> empty .)
    MINUS_OP        reduce using rule 93 (term -> empty .)
    LT_LOG          reduce using rule 93 (term -> empty .)
    GT_LOG          reduce using rule 93 (term -> empty .)
    LTE_LOG         reduce using rule 93 (term -> empty .)
    GTE_LOG         reduce using rule 93 (term -> empty .)
    NE_LOG          reduce using rule 93 (term -> empty .)
    EQUAL_LOG       reduce using rule 93 (term -> empty .)
    AND_LOG         reduce using rule 93 (term -> empty .)
    OR_LOG          reduce using rule 93 (term -> empty .)
    ASSIGN          reduce using rule 93 (term -> empty .)
    SEMIC           reduce using rule 93 (term -> empty .)
    RPAREN          reduce using rule 93 (term -> empty .)
    COMMA           reduce using rule 93 (term -> empty .)
    RBRACK          reduce using rule 93 (term -> empty .)
    HASTA           reduce using rule 93 (term -> empty .)
    HACER           reduce using rule 93 (term -> empty .)


state 152

    (94) op_a1 -> MULT_OP .

    LPAREN          reduce using rule 94 (op_a1 -> MULT_OP .)
    INT_CTE         reduce using rule 94 (op_a1 -> MULT_OP .)
    FLOAT_CTE       reduce using rule 94 (op_a1 -> MULT_OP .)
    CHAR_CTE        reduce using rule 94 (op_a1 -> MULT_OP .)
    ID              reduce using rule 94 (op_a1 -> MULT_OP .)


state 153

    (95) op_a1 -> DIV_OP .

    LPAREN          reduce using rule 95 (op_a1 -> DIV_OP .)
    INT_CTE         reduce using rule 95 (op_a1 -> DIV_OP .)
    FLOAT_CTE       reduce using rule 95 (op_a1 -> DIV_OP .)
    CHAR_CTE        reduce using rule 95 (op_a1 -> DIV_OP .)
    ID              reduce using rule 95 (op_a1 -> DIV_OP .)


state 154

    (97) factor -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 182


state 155

    (56) condicion -> SI LPAREN expresion RPAREN . ENTONCES bloque else

    ENTONCES        shift and go to state 183


state 156

    (68) regresa -> REGRESA LPAREN variable RPAREN . SEMIC

    SEMIC           shift and go to state 184


state 157

    (59) loop_condicional -> MIENTRAS LPAREN expresion RPAREN . HACER bloque

    HACER           shift and go to state 185


state 158

    (60) loop_no_condicional -> DESDE variable ASSIGN expresion . HASTA expresion HACER bloque

    HASTA           shift and go to state 186


state 159

    (62) llamada_funcion -> ID LPAREN llamada_param RPAREN . SEMIC

    SEMIC           shift and go to state 187


state 160

    (32) llamada_param -> expresion llamada_param2 .

    RPAREN          reduce using rule 32 (llamada_param -> expresion llamada_param2 .)


state 161

    (33) llamada_param2 -> COMMA . expresion
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    expresion                      shift and go to state 188
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 162

    (34) llamada_param2 -> empty .

    RPAREN          reduce using rule 34 (llamada_param2 -> empty .)


state 163

    (52) varDim -> LBRACK expresion varDim2 . RBRACK

    RBRACK          shift and go to state 189


state 164

    (54) varDim2 -> COMMA . expresion
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    expresion                      shift and go to state 190
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 165

    (55) varDim2 -> empty .

    RBRACK          reduce using rule 55 (varDim2 -> empty .)


state 166

    (63) escritura -> ESCRIBE LPAREN escritura2 RPAREN . SEMIC

    SEMIC           shift and go to state 191


state 167

    (64) escritura2 -> STRING_CTE escritura3 .

    RPAREN          reduce using rule 64 (escritura2 -> STRING_CTE escritura3 .)


state 168

    (66) escritura3 -> COMMA . escritura2
    (64) escritura2 -> . STRING_CTE escritura3
    (65) escritura2 -> . expresion escritura3
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    STRING_CTE      shift and go to state 118
    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    escritura2                     shift and go to state 192
    expresion                      shift and go to state 119
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 169

    (67) escritura3 -> empty .

    RPAREN          reduce using rule 67 (escritura3 -> empty .)


state 170

    (65) escritura2 -> expresion escritura3 .

    RPAREN          reduce using rule 65 (escritura2 -> expresion escritura3 .)


state 171

    (61) lectura -> LEE LPAREN llamada_param RPAREN . SEMIC

    SEMIC           shift and go to state 193


state 172

    (25) lista_parametros -> ID parDim COLON tipo . lista_parametros2
    (26) lista_parametros2 -> . COMMA lista_parametros
    (27) lista_parametros2 -> . empty
    (100) empty -> .

    COMMA           shift and go to state 195
    RPAREN          reduce using rule 100 (empty -> .)

    lista_parametros2              shift and go to state 194
    empty                          shift and go to state 196

state 173

    (28) parDim -> LBRACK expresion parDim2 . RBRACK

    RBRACK          shift and go to state 197


state 174

    (30) parDim2 -> COMMA . expresion
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    expresion                      shift and go to state 198
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    variable                       shift and go to state 96
    llamada_funcion                shift and go to state 105

state 175

    (31) parDim2 -> empty .

    RBRACK          reduce using rule 31 (parDim2 -> empty .)


state 176

    (22) dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .

    VOID            reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    INT_TYPE        reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    CHAR_TYPE       reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    FLOAT_TYPE      reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)
    PRINCIPAL       reduce using rule 22 (dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque .)


state 177

    (70) expresion1 -> ASSIGN expresion .

    SEMIC           reduce using rule 70 (expresion1 -> ASSIGN expresion .)
    RPAREN          reduce using rule 70 (expresion1 -> ASSIGN expresion .)
    COMMA           reduce using rule 70 (expresion1 -> ASSIGN expresion .)
    RBRACK          reduce using rule 70 (expresion1 -> ASSIGN expresion .)
    HASTA           reduce using rule 70 (expresion1 -> ASSIGN expresion .)
    HACER           reduce using rule 70 (expresion1 -> ASSIGN expresion .)


state 178

    (73) meg -> op_l mega_exp .

    ASSIGN          reduce using rule 73 (meg -> op_l mega_exp .)
    SEMIC           reduce using rule 73 (meg -> op_l mega_exp .)
    RPAREN          reduce using rule 73 (meg -> op_l mega_exp .)
    COMMA           reduce using rule 73 (meg -> op_l mega_exp .)
    RBRACK          reduce using rule 73 (meg -> op_l mega_exp .)
    HASTA           reduce using rule 73 (meg -> op_l mega_exp .)
    HACER           reduce using rule 73 (meg -> op_l mega_exp .)


state 179

    (78) sp -> op_r exp .

    AND_LOG         reduce using rule 78 (sp -> op_r exp .)
    OR_LOG          reduce using rule 78 (sp -> op_r exp .)
    ASSIGN          reduce using rule 78 (sp -> op_r exp .)
    SEMIC           reduce using rule 78 (sp -> op_r exp .)
    RPAREN          reduce using rule 78 (sp -> op_r exp .)
    COMMA           reduce using rule 78 (sp -> op_r exp .)
    RBRACK          reduce using rule 78 (sp -> op_r exp .)
    HASTA           reduce using rule 78 (sp -> op_r exp .)
    HACER           reduce using rule 78 (sp -> op_r exp .)


state 180

    (87) exp1 -> op_a exp .

    LT_LOG          reduce using rule 87 (exp1 -> op_a exp .)
    GT_LOG          reduce using rule 87 (exp1 -> op_a exp .)
    LTE_LOG         reduce using rule 87 (exp1 -> op_a exp .)
    GTE_LOG         reduce using rule 87 (exp1 -> op_a exp .)
    NE_LOG          reduce using rule 87 (exp1 -> op_a exp .)
    EQUAL_LOG       reduce using rule 87 (exp1 -> op_a exp .)
    AND_LOG         reduce using rule 87 (exp1 -> op_a exp .)
    OR_LOG          reduce using rule 87 (exp1 -> op_a exp .)
    ASSIGN          reduce using rule 87 (exp1 -> op_a exp .)
    SEMIC           reduce using rule 87 (exp1 -> op_a exp .)
    RPAREN          reduce using rule 87 (exp1 -> op_a exp .)
    COMMA           reduce using rule 87 (exp1 -> op_a exp .)
    RBRACK          reduce using rule 87 (exp1 -> op_a exp .)
    HASTA           reduce using rule 87 (exp1 -> op_a exp .)
    HACER           reduce using rule 87 (exp1 -> op_a exp .)


state 181

    (92) term -> op_a1 termino .

    PLUS_OP         reduce using rule 92 (term -> op_a1 termino .)
    MINUS_OP        reduce using rule 92 (term -> op_a1 termino .)
    LT_LOG          reduce using rule 92 (term -> op_a1 termino .)
    GT_LOG          reduce using rule 92 (term -> op_a1 termino .)
    LTE_LOG         reduce using rule 92 (term -> op_a1 termino .)
    GTE_LOG         reduce using rule 92 (term -> op_a1 termino .)
    NE_LOG          reduce using rule 92 (term -> op_a1 termino .)
    EQUAL_LOG       reduce using rule 92 (term -> op_a1 termino .)
    AND_LOG         reduce using rule 92 (term -> op_a1 termino .)
    OR_LOG          reduce using rule 92 (term -> op_a1 termino .)
    ASSIGN          reduce using rule 92 (term -> op_a1 termino .)
    SEMIC           reduce using rule 92 (term -> op_a1 termino .)
    RPAREN          reduce using rule 92 (term -> op_a1 termino .)
    COMMA           reduce using rule 92 (term -> op_a1 termino .)
    RBRACK          reduce using rule 92 (term -> op_a1 termino .)
    HASTA           reduce using rule 92 (term -> op_a1 termino .)
    HACER           reduce using rule 92 (term -> op_a1 termino .)


state 182

    (97) factor -> LPAREN exp RPAREN .

    MULT_OP         reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    DIV_OP          reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    PLUS_OP         reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    MINUS_OP        reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    LT_LOG          reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    GT_LOG          reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    LTE_LOG         reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    GTE_LOG         reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    NE_LOG          reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    EQUAL_LOG       reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    AND_LOG         reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    OR_LOG          reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    ASSIGN          reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    SEMIC           reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    RBRACK          reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    HASTA           reduce using rule 97 (factor -> LPAREN exp RPAREN .)
    HACER           reduce using rule 97 (factor -> LPAREN exp RPAREN .)


state 183

    (56) condicion -> SI LPAREN expresion RPAREN ENTONCES . bloque else
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 38

    bloque                         shift and go to state 199

state 184

    (68) regresa -> REGRESA LPAREN variable RPAREN SEMIC .

    SI              reduce using rule 68 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    REGRESA         reduce using rule 68 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    MIENTRAS        reduce using rule 68 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    DESDE           reduce using rule 68 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    ID              reduce using rule 68 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    ESCRIBE         reduce using rule 68 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    LEE             reduce using rule 68 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)
    RCURLY          reduce using rule 68 (regresa -> REGRESA LPAREN variable RPAREN SEMIC .)


state 185

    (59) loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 38

    bloque                         shift and go to state 200

state 186

    (60) loop_no_condicional -> DESDE variable ASSIGN expresion HASTA . expresion HACER bloque
    (69) expresion -> . mega_exp expresion1
    (72) mega_exp -> . super_exp meg
    (77) super_exp -> . exp sp
    (86) exp -> . termino exp1
    (91) termino -> . factor term
    (96) factor -> . ctes
    (97) factor -> . LPAREN exp RPAREN
    (98) factor -> . variable
    (99) factor -> . llamada_funcion
    (48) ctes -> . INT_CTE
    (49) ctes -> . FLOAT_CTE
    (50) ctes -> . CHAR_CTE
    (51) variable -> . ID varDim
    (62) llamada_funcion -> . ID LPAREN llamada_param RPAREN SEMIC

    LPAREN          shift and go to state 104
    INT_CTE         shift and go to state 106
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 108
    ID              shift and go to state 109

    variable                       shift and go to state 96
    expresion                      shift and go to state 201
    mega_exp                       shift and go to state 98
    super_exp                      shift and go to state 99
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    ctes                           shift and go to state 103
    llamada_funcion                shift and go to state 105

state 187

    (62) llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .

    SI              reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    REGRESA         reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    MIENTRAS        reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    DESDE           reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    ID              reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    ESCRIBE         reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    LEE             reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    RCURLY          reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    MULT_OP         reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    DIV_OP          reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    PLUS_OP         reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    MINUS_OP        reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    LT_LOG          reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    GT_LOG          reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    LTE_LOG         reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    GTE_LOG         reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    NE_LOG          reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    EQUAL_LOG       reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    AND_LOG         reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    OR_LOG          reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    ASSIGN          reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    SEMIC           reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    RPAREN          reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    COMMA           reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    RBRACK          reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    HASTA           reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)
    HACER           reduce using rule 62 (llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC .)


state 188

    (33) llamada_param2 -> COMMA expresion .

    RPAREN          reduce using rule 33 (llamada_param2 -> COMMA expresion .)


state 189

    (52) varDim -> LBRACK expresion varDim2 RBRACK .

    ASSIGN          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    RPAREN          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    MULT_OP         reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    DIV_OP          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    PLUS_OP         reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    MINUS_OP        reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    LT_LOG          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    GT_LOG          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    LTE_LOG         reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    GTE_LOG         reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    NE_LOG          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    EQUAL_LOG       reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    AND_LOG         reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    OR_LOG          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    SEMIC           reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    COMMA           reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    RBRACK          reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    HASTA           reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)
    HACER           reduce using rule 52 (varDim -> LBRACK expresion varDim2 RBRACK .)


state 190

    (54) varDim2 -> COMMA expresion .

    RBRACK          reduce using rule 54 (varDim2 -> COMMA expresion .)


state 191

    (63) escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMIC .

    SI              reduce using rule 63 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMIC .)
    REGRESA         reduce using rule 63 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMIC .)
    MIENTRAS        reduce using rule 63 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMIC .)
    DESDE           reduce using rule 63 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMIC .)
    ID              reduce using rule 63 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMIC .)
    ESCRIBE         reduce using rule 63 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMIC .)
    LEE             reduce using rule 63 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMIC .)
    RCURLY          reduce using rule 63 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMIC .)


state 192

    (66) escritura3 -> COMMA escritura2 .

    RPAREN          reduce using rule 66 (escritura3 -> COMMA escritura2 .)


state 193

    (61) lectura -> LEE LPAREN llamada_param RPAREN SEMIC .

    SI              reduce using rule 61 (lectura -> LEE LPAREN llamada_param RPAREN SEMIC .)
    REGRESA         reduce using rule 61 (lectura -> LEE LPAREN llamada_param RPAREN SEMIC .)
    MIENTRAS        reduce using rule 61 (lectura -> LEE LPAREN llamada_param RPAREN SEMIC .)
    DESDE           reduce using rule 61 (lectura -> LEE LPAREN llamada_param RPAREN SEMIC .)
    ID              reduce using rule 61 (lectura -> LEE LPAREN llamada_param RPAREN SEMIC .)
    ESCRIBE         reduce using rule 61 (lectura -> LEE LPAREN llamada_param RPAREN SEMIC .)
    LEE             reduce using rule 61 (lectura -> LEE LPAREN llamada_param RPAREN SEMIC .)
    RCURLY          reduce using rule 61 (lectura -> LEE LPAREN llamada_param RPAREN SEMIC .)


state 194

    (25) lista_parametros -> ID parDim COLON tipo lista_parametros2 .

    RPAREN          reduce using rule 25 (lista_parametros -> ID parDim COLON tipo lista_parametros2 .)


state 195

    (26) lista_parametros2 -> COMMA . lista_parametros
    (25) lista_parametros -> . ID parDim COLON tipo lista_parametros2

    ID              shift and go to state 66

    lista_parametros               shift and go to state 202

state 196

    (27) lista_parametros2 -> empty .

    RPAREN          reduce using rule 27 (lista_parametros2 -> empty .)


state 197

    (28) parDim -> LBRACK expresion parDim2 RBRACK .

    COLON           reduce using rule 28 (parDim -> LBRACK expresion parDim2 RBRACK .)


state 198

    (30) parDim2 -> COMMA expresion .

    RBRACK          reduce using rule 30 (parDim2 -> COMMA expresion .)


state 199

    (56) condicion -> SI LPAREN expresion RPAREN ENTONCES bloque . else
    (57) else -> . SINO bloque
    (58) else -> . empty
    (100) empty -> .

    SINO            shift and go to state 204
    SI              reduce using rule 100 (empty -> .)
    REGRESA         reduce using rule 100 (empty -> .)
    MIENTRAS        reduce using rule 100 (empty -> .)
    DESDE           reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    ESCRIBE         reduce using rule 100 (empty -> .)
    LEE             reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)

    else                           shift and go to state 203
    empty                          shift and go to state 205

state 200

    (59) loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .

    SI              reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    REGRESA         reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    MIENTRAS        reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    DESDE           reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    ID              reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    ESCRIBE         reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    LEE             reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)
    RCURLY          reduce using rule 59 (loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque .)


state 201

    (60) loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion . HACER bloque

    HACER           shift and go to state 206


state 202

    (26) lista_parametros2 -> COMMA lista_parametros .

    RPAREN          reduce using rule 26 (lista_parametros2 -> COMMA lista_parametros .)


state 203

    (56) condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .

    SI              reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    REGRESA         reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    MIENTRAS        reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    DESDE           reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    ID              reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    ESCRIBE         reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    LEE             reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)
    RCURLY          reduce using rule 56 (condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else .)


state 204

    (57) else -> SINO . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 38

    bloque                         shift and go to state 207

state 205

    (58) else -> empty .

    SI              reduce using rule 58 (else -> empty .)
    REGRESA         reduce using rule 58 (else -> empty .)
    MIENTRAS        reduce using rule 58 (else -> empty .)
    DESDE           reduce using rule 58 (else -> empty .)
    ID              reduce using rule 58 (else -> empty .)
    ESCRIBE         reduce using rule 58 (else -> empty .)
    LEE             reduce using rule 58 (else -> empty .)
    RCURLY          reduce using rule 58 (else -> empty .)


state 206

    (60) loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER . bloque
    (36) bloque -> . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 38

    bloque                         shift and go to state 208

state 207

    (57) else -> SINO bloque .

    SI              reduce using rule 57 (else -> SINO bloque .)
    REGRESA         reduce using rule 57 (else -> SINO bloque .)
    MIENTRAS        reduce using rule 57 (else -> SINO bloque .)
    DESDE           reduce using rule 57 (else -> SINO bloque .)
    ID              reduce using rule 57 (else -> SINO bloque .)
    ESCRIBE         reduce using rule 57 (else -> SINO bloque .)
    LEE             reduce using rule 57 (else -> SINO bloque .)
    RCURLY          reduce using rule 57 (else -> SINO bloque .)


state 208

    (60) loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .

    SI              reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    REGRESA         reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    MIENTRAS        reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    DESDE           reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    ID              reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    ESCRIBE         reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    LEE             reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)
    RCURLY          reduce using rule 60 (loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT_TYPE in state 35 resolved as shift
WARNING: shift/reduce conflict for CHAR_TYPE in state 35 resolved as shift
WARNING: shift/reduce conflict for FLOAT_TYPE in state 35 resolved as shift
