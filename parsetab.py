
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND_LOG ASSIGN CHAR_CTE CHAR_TYPE COLON COMMA COMMENT DESDE DIV_OP ENTONCES EQUAL_LOG ESCRIBE FLOAT_CTE FLOAT_TYPE FUNCION GTE_LOG GT_LOG HACER HASTA ID INT_CTE INT_TYPE LBRACK LCURLY LEE LPAREN LTE_LOG LT_LOG MIENTRAS MINUS_OP MULT_OP NEW_LINE NE_LOG OR_LOG PLUS_OP PRINCIPAL PROGRAMA RBRACK RCURLY REGRESA RPAREN SEMIC SI SINO STRING_CTE VARIABLES VOID\n    programa : PROGRAMA ID SEMIC dec_variables dec_funciones principal\n    \n    dec_variables : VARIABLES dec_variables2\n                  | empty\n    \n    dec_variables2 : tipo COLON lista_ids SEMIC dec_variables3\n    \n    dec_variables3 : dec_variables2\n                   | empty\n    \n    lista_ids : ID pn_AddVariable DecVarDim lista_ids2\n    \n    lista_ids2 : COMMA lista_ids\n               | empty\n    \n    DecVarDim : DecVarDim2\n              | empty\n    \n    DecVarDim2 : LBRACK INT_CTE DecVarDim3 RBRACK\n    \n    DecVarDim3 : COMMA INT_CTE\n               | empty\n    \n    tipo : INT_TYPE pn_SetCurrentType\n         | CHAR_TYPE pn_SetCurrentType\n         | FLOAT_TYPE pn_SetCurrentType\n    \n    dec_funciones : dec_funciones2 dec_funciones\n                  | empty\n    \n    dec_funciones2 : tipo dec_funciones3\n                   | VOID pn_SetCurrentType dec_funciones3\n    \n    dec_funciones3 : FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque\n    \n    dec_funcion_param : lista_parametros\n                      | empty  \n    \n    lista_parametros : ID parDim COLON tipo lista_parametros2\n    \n    lista_parametros2 : COMMA lista_parametros\n                      | empty \n    \n    parDim : LBRACK expresion parDim2 RBRACK\n           | empty \n    \n    parDim2 : COMMA expresion\n            | empty\n    \n    llamada_param : expresion llamada_param2\n    \n    llamada_param2 : COMMA expresion\n                   | empty\n    \n    principal : PRINCIPAL LPAREN RPAREN bloque\n    \n    bloque : LCURLY estatutos RCURLY\n    \n    estatutos : estatuto estatutos\n              | empty\n    \n    estatuto : asignacion\n             | condicion\n             | regresa\n             | loop_condicional\n             | loop_no_condicional\n             | llamada_funcion\n             | escritura\n             | lectura\n    \n    asignacion : variable ASSIGN expresion SEMIC\n    \n    ctes : INT_CTE\n         | FLOAT_CTE\n         | CHAR_CTE\n    \n    variable : ID varDim\n    \n    varDim : LBRACK expresion varDim2 RBRACK\n           | empty\n    \n    varDim2 : COMMA expresion\n            | empty\n    \n    condicion : SI LPAREN expresion RPAREN ENTONCES bloque else \n    \n    else : SINO bloque\n         | empty\n    \n    loop_condicional : MIENTRAS LPAREN expresion RPAREN HACER bloque\n    \n    loop_no_condicional : DESDE variable ASSIGN expresion HASTA expresion HACER bloque\n    \n    lectura : LEE LPAREN llamada_param RPAREN SEMIC\n    \n    llamada_funcion : ID LPAREN llamada_param RPAREN SEMIC\n    \n    escritura : ESCRIBE LPAREN escritura2 RPAREN SEMIC\n    \n    escritura2 : STRING_CTE escritura3\n               | expresion escritura3\n    \n    escritura3 : COMMA escritura2\n               | empty\n    \n    regresa : REGRESA LPAREN variable RPAREN SEMIC\n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l mega_exp\n        | empty\n    \n    op_l : AND_LOG\n         | OR_LOG\n    super_exp : exp sp\n    sp : op_r  exp\n       | empty\n    \n    op_r : LT_LOG\n         | GT_LOG\n         | LTE_LOG\n         | GTE_LOG\n         | NE_LOG\n         | EQUAL_LOG\n    \n    exp : termino exp1\n    \n    exp1 : op_a exp\n         | empty\n    \n    op_a : PLUS_OP\n         | MINUS_OP\n    \n    termino : factor term\n    \n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MULT_OP\n          | DIV_OP\n    \n    factor : ctes\n           | LPAREN exp RPAREN\n           | variable\n           | llamada_funcion\n    empty :\n    pn_SetCurrentType :\n    \n    pn_AddVariable :\n    \n    pn_AddFunc :\n    '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,18,37,74,],[0,-1,-35,-36,]),'ID':([2,22,27,38,39,48,50,51,52,53,54,55,56,57,62,71,74,76,77,78,79,82,84,86,87,89,104,113,126,128,131,133,134,136,138,139,140,141,142,143,145,147,148,150,152,153,161,164,168,174,184,186,187,191,193,195,199,200,203,205,207,208,],[3,29,32,63,66,63,-39,-40,-41,-42,-43,-44,-45,-46,81,32,-36,109,109,81,109,109,109,109,109,109,109,109,-47,109,109,-75,-76,109,-80,-81,-82,-83,-84,-85,109,-89,-90,109,-94,-95,109,109,109,109,-68,109,-62,-63,-61,66,-100,-59,-56,-58,-57,-60,]),'SEMIC':([3,31,32,36,43,44,45,70,72,83,85,92,96,97,98,99,100,101,102,103,105,106,107,108,109,124,127,129,130,132,135,137,144,146,149,151,156,159,166,171,177,178,179,180,181,182,187,189,],[4,35,-102,-100,-100,-10,-11,-7,-9,-51,-53,-8,-98,126,-100,-100,-100,-100,-100,-96,-99,-48,-49,-50,-100,-12,-69,-71,-72,-74,-77,-79,-86,-88,-91,-93,184,187,191,193,-70,-73,-78,-87,-92,-97,-62,-52,]),'VARIABLES':([4,91,],[6,6,]),'VOID':([4,5,7,9,16,21,30,35,40,41,42,74,176,],[-100,12,-3,12,-2,-20,-21,-100,-4,-5,-6,-36,-22,]),'INT_TYPE':([4,5,6,7,9,16,21,30,35,40,41,42,74,121,176,],[-100,13,13,-3,13,-2,-20,-21,13,-4,-5,-6,-36,13,-22,]),'CHAR_TYPE':([4,5,6,7,9,16,21,30,35,40,41,42,74,121,176,],[-100,14,14,-3,14,-2,-20,-21,14,-4,-5,-6,-36,14,-22,]),'FLOAT_TYPE':([4,5,6,7,9,16,21,30,35,40,41,42,74,121,176,],[-100,15,15,-3,15,-2,-20,-21,15,-4,-5,-6,-36,15,-22,]),'PRINCIPAL':([4,5,7,8,9,10,16,20,21,30,35,40,41,42,74,176,],[-100,-100,-3,19,-100,-19,-2,-18,-20,-21,-100,-4,-5,-6,-36,-22,]),'LCURLY':([7,16,33,35,40,41,42,91,123,183,185,204,206,],[-3,-2,38,-100,-4,-5,-6,-100,38,38,38,38,38,]),'FUNCION':([11,12,13,14,15,23,24,25,26,],[22,-101,-101,-101,-101,22,-15,-16,-17,]),'COLON':([13,14,15,17,24,25,26,66,88,90,197,],[-101,-101,-101,27,-15,-16,-17,-100,121,-29,-28,]),'COMMA':([13,14,15,24,25,26,32,36,43,44,45,73,83,85,96,98,99,100,101,102,103,105,106,107,108,109,115,116,118,119,122,124,127,129,130,132,135,137,144,146,149,151,172,177,178,179,180,181,182,187,189,],[-101,-101,-101,-15,-16,-17,-102,-100,71,-10,-11,94,-51,-53,-98,-100,-100,-100,-100,-100,-96,-99,-48,-49,-50,-100,161,164,168,168,174,-12,-69,-71,-72,-74,-77,-79,-86,-88,-91,-93,195,-70,-73,-78,-87,-92,-97,-62,-52,]),'RPAREN':([13,14,15,24,25,26,28,39,67,68,69,81,83,85,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,114,115,117,118,119,120,127,129,130,132,135,137,144,146,149,151,154,160,162,167,169,170,172,177,178,179,180,181,182,187,188,189,192,194,196,202,],[-101,-101,-101,-15,-16,-17,33,-100,91,-23,-24,-100,-51,-53,-98,-100,-100,-100,-100,-100,-96,-99,-48,-49,-50,-100,155,156,157,159,-100,166,-100,-100,171,-69,-71,-72,-74,-77,-79,-86,-88,-91,-93,182,-32,-34,-64,-67,-65,-100,-70,-73,-78,-87,-92,-97,-62,-33,-52,-66,-25,-27,-26,]),'LPAREN':([19,29,34,59,60,61,63,64,65,76,77,79,82,84,86,87,89,104,109,113,128,131,133,134,136,138,139,140,141,142,143,145,147,148,150,152,153,161,164,168,174,186,],[28,-103,39,77,78,79,82,86,87,104,104,104,104,104,104,104,104,104,82,104,104,104,-75,-76,104,-80,-81,-82,-83,-84,-85,104,-89,-90,104,-94,-95,104,104,104,104,104,]),'LBRACK':([32,36,63,66,81,109,],[-102,46,84,89,84,84,]),'RCURLY':([38,47,48,49,50,51,52,53,54,55,56,57,74,75,126,184,187,191,193,199,200,203,205,207,208,],[-100,74,-100,-38,-39,-40,-41,-42,-43,-44,-45,-46,-36,-37,-47,-68,-62,-63,-61,-100,-59,-56,-58,-57,-60,]),'SI':([38,48,50,51,52,53,54,55,56,57,74,126,184,187,191,193,199,200,203,205,207,208,],[59,59,-39,-40,-41,-42,-43,-44,-45,-46,-36,-47,-68,-62,-63,-61,-100,-59,-56,-58,-57,-60,]),'REGRESA':([38,48,50,51,52,53,54,55,56,57,74,126,184,187,191,193,199,200,203,205,207,208,],[60,60,-39,-40,-41,-42,-43,-44,-45,-46,-36,-47,-68,-62,-63,-61,-100,-59,-56,-58,-57,-60,]),'MIENTRAS':([38,48,50,51,52,53,54,55,56,57,74,126,184,187,191,193,199,200,203,205,207,208,],[61,61,-39,-40,-41,-42,-43,-44,-45,-46,-36,-47,-68,-62,-63,-61,-100,-59,-56,-58,-57,-60,]),'DESDE':([38,48,50,51,52,53,54,55,56,57,74,126,184,187,191,193,199,200,203,205,207,208,],[62,62,-39,-40,-41,-42,-43,-44,-45,-46,-36,-47,-68,-62,-63,-61,-100,-59,-56,-58,-57,-60,]),'ESCRIBE':([38,48,50,51,52,53,54,55,56,57,74,126,184,187,191,193,199,200,203,205,207,208,],[64,64,-39,-40,-41,-42,-43,-44,-45,-46,-36,-47,-68,-62,-63,-61,-100,-59,-56,-58,-57,-60,]),'LEE':([38,48,50,51,52,53,54,55,56,57,74,126,184,187,191,193,199,200,203,205,207,208,],[65,65,-39,-40,-41,-42,-43,-44,-45,-46,-36,-47,-68,-62,-63,-61,-100,-59,-56,-58,-57,-60,]),'INT_CTE':([46,76,77,79,82,84,86,87,89,94,104,113,128,131,133,134,136,138,139,140,141,142,143,145,147,148,150,152,153,161,164,168,174,186,],[73,106,106,106,106,106,106,106,106,125,106,106,106,106,-75,-76,106,-80,-81,-82,-83,-84,-85,106,-89,-90,106,-94,-95,106,106,106,106,106,]),'ASSIGN':([58,63,80,81,83,85,96,98,99,100,101,102,103,105,106,107,108,109,130,132,135,137,144,146,149,151,178,179,180,181,182,187,189,],[76,-100,113,-100,-51,-53,-98,128,-100,-100,-100,-100,-96,-99,-48,-49,-50,-100,-72,-74,-77,-79,-86,-88,-91,-93,-73,-78,-87,-92,-97,-62,-52,]),'RBRACK':([73,83,85,93,95,96,98,99,100,101,102,103,105,106,107,108,109,116,122,125,127,129,130,132,135,137,144,146,149,151,163,165,173,175,177,178,179,180,181,182,187,189,190,198,],[-100,-51,-53,124,-14,-98,-100,-100,-100,-100,-100,-96,-99,-48,-49,-50,-100,-100,-100,-13,-69,-71,-72,-74,-77,-79,-86,-88,-91,-93,189,-55,197,-31,-70,-73,-78,-87,-92,-97,-62,-52,-54,-30,]),'SINO':([74,199,],[-36,204,]),'FLOAT_CTE':([76,77,79,82,84,86,87,89,104,113,128,131,133,134,136,138,139,140,141,142,143,145,147,148,150,152,153,161,164,168,174,186,],[107,107,107,107,107,107,107,107,107,107,107,107,-75,-76,107,-80,-81,-82,-83,-84,-85,107,-89,-90,107,-94,-95,107,107,107,107,107,]),'CHAR_CTE':([76,77,79,82,84,86,87,89,104,113,128,131,133,134,136,138,139,140,141,142,143,145,147,148,150,152,153,161,164,168,174,186,],[108,108,108,108,108,108,108,108,108,108,108,108,-75,-76,108,-80,-81,-82,-83,-84,-85,108,-89,-90,108,-94,-95,108,108,108,108,108,]),'MULT_OP':([83,85,96,102,103,105,106,107,108,109,182,187,189,],[-51,-53,-98,152,-96,-99,-48,-49,-50,-100,-97,-62,-52,]),'DIV_OP':([83,85,96,102,103,105,106,107,108,109,182,187,189,],[-51,-53,-98,153,-96,-99,-48,-49,-50,-100,-97,-62,-52,]),'PLUS_OP':([83,85,96,101,102,103,105,106,107,108,109,149,151,181,182,187,189,],[-51,-53,-98,147,-100,-96,-99,-48,-49,-50,-100,-91,-93,-92,-97,-62,-52,]),'MINUS_OP':([83,85,96,101,102,103,105,106,107,108,109,149,151,181,182,187,189,],[-51,-53,-98,148,-100,-96,-99,-48,-49,-50,-100,-91,-93,-92,-97,-62,-52,]),'LT_LOG':([83,85,96,100,101,102,103,105,106,107,108,109,144,146,149,151,180,181,182,187,189,],[-51,-53,-98,138,-100,-100,-96,-99,-48,-49,-50,-100,-86,-88,-91,-93,-87,-92,-97,-62,-52,]),'GT_LOG':([83,85,96,100,101,102,103,105,106,107,108,109,144,146,149,151,180,181,182,187,189,],[-51,-53,-98,139,-100,-100,-96,-99,-48,-49,-50,-100,-86,-88,-91,-93,-87,-92,-97,-62,-52,]),'LTE_LOG':([83,85,96,100,101,102,103,105,106,107,108,109,144,146,149,151,180,181,182,187,189,],[-51,-53,-98,140,-100,-100,-96,-99,-48,-49,-50,-100,-86,-88,-91,-93,-87,-92,-97,-62,-52,]),'GTE_LOG':([83,85,96,100,101,102,103,105,106,107,108,109,144,146,149,151,180,181,182,187,189,],[-51,-53,-98,141,-100,-100,-96,-99,-48,-49,-50,-100,-86,-88,-91,-93,-87,-92,-97,-62,-52,]),'NE_LOG':([83,85,96,100,101,102,103,105,106,107,108,109,144,146,149,151,180,181,182,187,189,],[-51,-53,-98,142,-100,-100,-96,-99,-48,-49,-50,-100,-86,-88,-91,-93,-87,-92,-97,-62,-52,]),'EQUAL_LOG':([83,85,96,100,101,102,103,105,106,107,108,109,144,146,149,151,180,181,182,187,189,],[-51,-53,-98,143,-100,-100,-96,-99,-48,-49,-50,-100,-86,-88,-91,-93,-87,-92,-97,-62,-52,]),'AND_LOG':([83,85,96,99,100,101,102,103,105,106,107,108,109,135,137,144,146,149,151,179,180,181,182,187,189,],[-51,-53,-98,133,-100,-100,-100,-96,-99,-48,-49,-50,-100,-77,-79,-86,-88,-91,-93,-78,-87,-92,-97,-62,-52,]),'OR_LOG':([83,85,96,99,100,101,102,103,105,106,107,108,109,135,137,144,146,149,151,179,180,181,182,187,189,],[-51,-53,-98,134,-100,-100,-100,-96,-99,-48,-49,-50,-100,-77,-79,-86,-88,-91,-93,-78,-87,-92,-97,-62,-52,]),'HASTA':([83,85,96,98,99,100,101,102,103,105,106,107,108,109,127,129,130,132,135,137,144,146,149,151,158,177,178,179,180,181,182,187,189,],[-51,-53,-98,-100,-100,-100,-100,-100,-96,-99,-48,-49,-50,-100,-69,-71,-72,-74,-77,-79,-86,-88,-91,-93,186,-70,-73,-78,-87,-92,-97,-62,-52,]),'HACER':([83,85,96,98,99,100,101,102,103,105,106,107,108,109,127,129,130,132,135,137,144,146,149,151,157,177,178,179,180,181,182,187,189,201,],[-51,-53,-98,-100,-100,-100,-100,-100,-96,-99,-48,-49,-50,-100,-69,-71,-72,-74,-77,-79,-86,-88,-91,-93,185,-70,-73,-78,-87,-92,-97,-62,-52,206,]),'STRING_CTE':([86,168,],[118,118,]),'ENTONCES':([155,],[183,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'dec_variables':([4,91,],[5,123,]),'empty':([4,5,9,35,36,38,39,43,48,63,66,73,81,91,98,99,100,101,102,109,115,116,118,119,122,172,199,],[7,10,10,42,45,49,69,72,49,85,90,95,85,7,129,132,137,146,151,85,162,165,169,169,175,196,205,]),'dec_funciones':([5,9,],[8,20,]),'dec_funciones2':([5,9,],[9,9,]),'tipo':([5,6,9,35,121,],[11,17,11,17,172,]),'dec_variables2':([6,35,],[16,41,]),'principal':([8,],[18,]),'dec_funciones3':([11,23,],[21,30,]),'pn_SetCurrentType':([12,13,14,15,],[23,24,25,26,]),'lista_ids':([27,71,],[31,92,]),'pn_AddFunc':([29,],[34,]),'pn_AddVariable':([32,],[36,]),'bloque':([33,123,183,185,204,206,],[37,176,199,200,207,208,]),'dec_variables3':([35,],[40,]),'DecVarDim':([36,],[43,]),'DecVarDim2':([36,],[44,]),'estatutos':([38,48,],[47,75,]),'estatuto':([38,48,],[48,48,]),'asignacion':([38,48,],[50,50,]),'condicion':([38,48,],[51,51,]),'regresa':([38,48,],[52,52,]),'loop_condicional':([38,48,],[53,53,]),'loop_no_condicional':([38,48,],[54,54,]),'llamada_funcion':([38,48,76,77,79,82,84,86,87,89,104,113,128,131,136,145,150,161,164,168,174,186,],[55,55,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'escritura':([38,48,],[56,56,]),'lectura':([38,48,],[57,57,]),'variable':([38,48,62,76,77,78,79,82,84,86,87,89,104,113,128,131,136,145,150,161,164,168,174,186,],[58,58,80,96,96,111,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'dec_funcion_param':([39,],[67,]),'lista_parametros':([39,195,],[68,202,]),'lista_ids2':([43,],[70,]),'varDim':([63,81,109,],[83,83,83,]),'parDim':([66,],[88,]),'DecVarDim3':([73,],[93,]),'expresion':([76,77,79,82,84,86,87,89,113,128,161,164,168,174,186,],[97,110,112,115,116,119,115,122,158,177,188,190,119,198,201,]),'mega_exp':([76,77,79,82,84,86,87,89,113,128,131,161,164,168,174,186,],[98,98,98,98,98,98,98,98,98,98,178,98,98,98,98,98,]),'super_exp':([76,77,79,82,84,86,87,89,113,128,131,161,164,168,174,186,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'exp':([76,77,79,82,84,86,87,89,104,113,128,131,136,145,161,164,168,174,186,],[100,100,100,100,100,100,100,100,154,100,100,100,179,180,100,100,100,100,100,]),'termino':([76,77,79,82,84,86,87,89,104,113,128,131,136,145,150,161,164,168,174,186,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,181,101,101,101,101,101,]),'factor':([76,77,79,82,84,86,87,89,104,113,128,131,136,145,150,161,164,168,174,186,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'ctes':([76,77,79,82,84,86,87,89,104,113,128,131,136,145,150,161,164,168,174,186,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'llamada_param':([82,87,],[114,120,]),'escritura2':([86,168,],[117,192,]),'expresion1':([98,],[127,]),'meg':([99,],[130,]),'op_l':([99,],[131,]),'sp':([100,],[135,]),'op_r':([100,],[136,]),'exp1':([101,],[144,]),'op_a':([101,],[145,]),'term':([102,],[149,]),'op_a1':([102,],[150,]),'llamada_param2':([115,],[160,]),'varDim2':([116,],[163,]),'escritura3':([118,119,],[167,170,]),'parDim2':([122,],[173,]),'lista_parametros2':([172,],[194,]),'else':([199,],[203,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMIC dec_variables dec_funciones principal','programa',6,'p_programa','parser.py',184),
  ('dec_variables -> VARIABLES dec_variables2','dec_variables',2,'p_dec_variables','parser.py',192),
  ('dec_variables -> empty','dec_variables',1,'p_dec_variables','parser.py',193),
  ('dec_variables2 -> tipo COLON lista_ids SEMIC dec_variables3','dec_variables2',5,'p_dec_variables2','parser.py',198),
  ('dec_variables3 -> dec_variables2','dec_variables3',1,'p_dec_variables3','parser.py',203),
  ('dec_variables3 -> empty','dec_variables3',1,'p_dec_variables3','parser.py',204),
  ('lista_ids -> ID pn_AddVariable DecVarDim lista_ids2','lista_ids',4,'p_lista_ids','parser.py',209),
  ('lista_ids2 -> COMMA lista_ids','lista_ids2',2,'p_lista_ids2','parser.py',215),
  ('lista_ids2 -> empty','lista_ids2',1,'p_lista_ids2','parser.py',216),
  ('DecVarDim -> DecVarDim2','DecVarDim',1,'p_DecVarDim','parser.py',222),
  ('DecVarDim -> empty','DecVarDim',1,'p_DecVarDim','parser.py',223),
  ('DecVarDim2 -> LBRACK INT_CTE DecVarDim3 RBRACK','DecVarDim2',4,'p_DecVarDim2','parser.py',228),
  ('DecVarDim3 -> COMMA INT_CTE','DecVarDim3',2,'p_DecVarDim3','parser.py',233),
  ('DecVarDim3 -> empty','DecVarDim3',1,'p_DecVarDim3','parser.py',234),
  ('tipo -> INT_TYPE pn_SetCurrentType','tipo',2,'p_tipo','parser.py',240),
  ('tipo -> CHAR_TYPE pn_SetCurrentType','tipo',2,'p_tipo','parser.py',241),
  ('tipo -> FLOAT_TYPE pn_SetCurrentType','tipo',2,'p_tipo','parser.py',242),
  ('dec_funciones -> dec_funciones2 dec_funciones','dec_funciones',2,'p_dec_funciones','parser.py',249),
  ('dec_funciones -> empty','dec_funciones',1,'p_dec_funciones','parser.py',250),
  ('dec_funciones2 -> tipo dec_funciones3','dec_funciones2',2,'p_dec_funciones2','parser.py',255),
  ('dec_funciones2 -> VOID pn_SetCurrentType dec_funciones3','dec_funciones2',3,'p_dec_funciones2','parser.py',256),
  ('dec_funciones3 -> FUNCION ID pn_AddFunc LPAREN dec_funcion_param RPAREN dec_variables bloque','dec_funciones3',8,'p_dec_funciones3','parser.py',261),
  ('dec_funcion_param -> lista_parametros','dec_funcion_param',1,'p_dec_funcion_param','parser.py',266),
  ('dec_funcion_param -> empty','dec_funcion_param',1,'p_dec_funcion_param','parser.py',267),
  ('lista_parametros -> ID parDim COLON tipo lista_parametros2','lista_parametros',5,'p_lista_parametros','parser.py',272),
  ('lista_parametros2 -> COMMA lista_parametros','lista_parametros2',2,'p_lista_parametros2','parser.py',277),
  ('lista_parametros2 -> empty','lista_parametros2',1,'p_lista_parametros2','parser.py',278),
  ('parDim -> LBRACK expresion parDim2 RBRACK','parDim',4,'p_parDim','parser.py',283),
  ('parDim -> empty','parDim',1,'p_parDim','parser.py',284),
  ('parDim2 -> COMMA expresion','parDim2',2,'p_parDim2','parser.py',289),
  ('parDim2 -> empty','parDim2',1,'p_parDim2','parser.py',290),
  ('llamada_param -> expresion llamada_param2','llamada_param',2,'p_llamada_param','parser.py',295),
  ('llamada_param2 -> COMMA expresion','llamada_param2',2,'p_llamada_param2','parser.py',300),
  ('llamada_param2 -> empty','llamada_param2',1,'p_llamada_param2','parser.py',301),
  ('principal -> PRINCIPAL LPAREN RPAREN bloque','principal',4,'p_principal','parser.py',306),
  ('bloque -> LCURLY estatutos RCURLY','bloque',3,'p_bloque','parser.py',314),
  ('estatutos -> estatuto estatutos','estatutos',2,'p_estatutos','parser.py',321),
  ('estatutos -> empty','estatutos',1,'p_estatutos','parser.py',322),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',327),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser.py',328),
  ('estatuto -> regresa','estatuto',1,'p_estatuto','parser.py',329),
  ('estatuto -> loop_condicional','estatuto',1,'p_estatuto','parser.py',330),
  ('estatuto -> loop_no_condicional','estatuto',1,'p_estatuto','parser.py',331),
  ('estatuto -> llamada_funcion','estatuto',1,'p_estatuto','parser.py',332),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser.py',333),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','parser.py',334),
  ('asignacion -> variable ASSIGN expresion SEMIC','asignacion',4,'p_asignacion','parser.py',340),
  ('ctes -> INT_CTE','ctes',1,'p_ctes','parser.py',345),
  ('ctes -> FLOAT_CTE','ctes',1,'p_ctes','parser.py',346),
  ('ctes -> CHAR_CTE','ctes',1,'p_ctes','parser.py',347),
  ('variable -> ID varDim','variable',2,'p_variable','parser.py',352),
  ('varDim -> LBRACK expresion varDim2 RBRACK','varDim',4,'p_varDim','parser.py',357),
  ('varDim -> empty','varDim',1,'p_varDim','parser.py',358),
  ('varDim2 -> COMMA expresion','varDim2',2,'p_varDim2','parser.py',363),
  ('varDim2 -> empty','varDim2',1,'p_varDim2','parser.py',364),
  ('condicion -> SI LPAREN expresion RPAREN ENTONCES bloque else','condicion',7,'p_condicion','parser.py',370),
  ('else -> SINO bloque','else',2,'p_else','parser.py',375),
  ('else -> empty','else',1,'p_else','parser.py',376),
  ('loop_condicional -> MIENTRAS LPAREN expresion RPAREN HACER bloque','loop_condicional',6,'p_loop_condicional','parser.py',382),
  ('loop_no_condicional -> DESDE variable ASSIGN expresion HASTA expresion HACER bloque','loop_no_condicional',8,'p_loop_no_condicional','parser.py',388),
  ('lectura -> LEE LPAREN llamada_param RPAREN SEMIC','lectura',5,'p_lectura','parser.py',394),
  ('llamada_funcion -> ID LPAREN llamada_param RPAREN SEMIC','llamada_funcion',5,'p_llamada_funcion','parser.py',401),
  ('escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMIC','escritura',5,'p_escritura','parser.py',407),
  ('escritura2 -> STRING_CTE escritura3','escritura2',2,'p_escritura2','parser.py',411),
  ('escritura2 -> expresion escritura3','escritura2',2,'p_escritura2','parser.py',412),
  ('escritura3 -> COMMA escritura2','escritura3',2,'p_escritura3','parser.py',417),
  ('escritura3 -> empty','escritura3',1,'p_escritura3','parser.py',418),
  ('regresa -> REGRESA LPAREN variable RPAREN SEMIC','regresa',5,'p_regresa','parser.py',423),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',428),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',432),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',433),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',437),
  ('meg -> op_l mega_exp','meg',2,'p_meg','parser.py',441),
  ('meg -> empty','meg',1,'p_meg','parser.py',442),
  ('op_l -> AND_LOG','op_l',1,'p_op_l','parser.py',446),
  ('op_l -> OR_LOG','op_l',1,'p_op_l','parser.py',447),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',451),
  ('sp -> op_r exp','sp',2,'p_sp','parser.py',455),
  ('sp -> empty','sp',1,'p_sp','parser.py',456),
  ('op_r -> LT_LOG','op_r',1,'p_op_r','parser.py',460),
  ('op_r -> GT_LOG','op_r',1,'p_op_r','parser.py',461),
  ('op_r -> LTE_LOG','op_r',1,'p_op_r','parser.py',462),
  ('op_r -> GTE_LOG','op_r',1,'p_op_r','parser.py',463),
  ('op_r -> NE_LOG','op_r',1,'p_op_r','parser.py',464),
  ('op_r -> EQUAL_LOG','op_r',1,'p_op_r','parser.py',465),
  ('exp -> termino exp1','exp',2,'p_exp','parser.py',470),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',475),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',476),
  ('op_a -> PLUS_OP','op_a',1,'p_op_a','parser.py',480),
  ('op_a -> MINUS_OP','op_a',1,'p_op_a','parser.py',481),
  ('termino -> factor term','termino',2,'p_termino','parser.py',486),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',491),
  ('term -> empty','term',1,'p_term','parser.py',492),
  ('op_a1 -> MULT_OP','op_a1',1,'p_op_a1','parser.py',496),
  ('op_a1 -> DIV_OP','op_a1',1,'p_op_a1','parser.py',497),
  ('factor -> ctes','factor',1,'p_factor','parser.py',502),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','parser.py',503),
  ('factor -> variable','factor',1,'p_factor','parser.py',504),
  ('factor -> llamada_funcion','factor',1,'p_factor','parser.py',505),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',509),
  ('pn_SetCurrentType -> <empty>','pn_SetCurrentType',0,'p_pn_SetCurrentType','parser.py',529),
  ('pn_AddVariable -> <empty>','pn_AddVariable',0,'p_pn_AddVariable','parser.py',541),
  ('pn_AddFunc -> <empty>','pn_AddFunc',0,'p_pn_AddFunc','parser.py',559),
]
